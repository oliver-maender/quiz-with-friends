var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AnswersComponent.html",[0,0.083,1,0.444]],["body/components/AnswersComponent.html",[0,0.122,1,0.708,2,0.807,3,0.3,4,0.254,5,0.638,6,0.638,7,0.638,8,0.638,9,0.254,10,3.032,11,2.191,12,0.721,13,1.042,14,0.638,15,1.396,16,1.118,17,4.461,18,0.9,19,4.347,20,0.9,21,3.753,22,0.3,23,1.356,24,4.347,25,0.639,26,3.753,27,1.132,28,2.653,29,4.347,30,3.578,31,3.09,32,4.976,33,0.652,34,0.813,35,3.753,36,0.991,37,0.04,38,2.653,39,1.394,40,1.394,41,1.356,42,2.662,43,1.258,44,2.662,45,2.598,46,1.663,47,2.662,48,3.578,49,2.662,50,3.753,51,2.662,52,3.753,53,3.336,54,3.886,55,3.753,56,3.753,57,4.692,58,2.351,59,3.753,60,0.709,61,0.569,62,0.638,63,1.18,64,2.351,65,3.753,66,0.639,67,0.835,68,2.662,69,0.348,70,3.336,71,3.09,72,0.3,73,0.3,74,0.168,75,0.423,76,1.18,77,3.753,78,1.064,79,2.191,80,3.753,81,2.662,82,1.706,83,0.962,84,1.887,85,3.09,86,3.336,87,1.882,88,3.753,89,1.882,90,1.465,91,1.18,92,1.663,93,1.064,94,1.064,95,1.65,96,2.326,97,2.325,98,2.092,99,3.09,100,3.753,101,2.191,102,3.753,103,1.65,104,1.465,105,1.465,106,1.465,107,2.662,108,2.662,109,2.662,110,3.09,111,2.662,112,3.753,113,1.849,114,2.662,115,2.662,116,2.662,117,2.662,118,2.326,119,1.882,120,2.662,121,1.65,122,2.662,123,2.191,124,2.662,125,2.191,126,2.191,127,1.65,128,1.311,129,2.191,130,2.662,131,2.662,132,0.638,133,0.9,134,0.807,135,0.638,136,1.132,137,0.638,138,0.638,139,0.399,140,0.638,141,0.348,142,0.638,143,0.348,144,0.399,145,0.638,146,0.348,147,0.639,148,0.638,149,0.348,150,0.638,151,0.399,152,0.638,153,0.399,154,0.638,155,0.348,156,0.511,157,0.638,158,0.399,159,0.573,160,0.638,161,0.399,162,0.638,163,0.348,164,0.638,165,0.348,166,0.21,167,0.638,168,0.638,169,0.638,170,0.024,171,0.024]],["title/components/AppComponent.html",[0,0.083,139,0.444]],["body/components/AppComponent.html",[0,0.142,1,0.539,2,0.987,3,0.404,4,0.342,5,0.861,6,0.861,7,0.861,8,0.861,9,0.342,12,0.881,13,1.213,14,0.861,15,1.45,16,1.161,18,1.101,20,1.101,22,0.404,23,1.659,25,0.782,27,1.279,33,0.539,34,0.759,36,0.881,37,0.04,39,1.061,40,1.061,43,0.957,60,0.957,61,0.662,62,0.861,66,0.612,67,0.881,69,0.6,72,0.404,73,0.404,74,0.227,75,0.404,132,0.861,133,1.101,134,0.987,135,0.861,136,1.279,137,0.861,138,0.861,139,0.8,140,0.861,141,0.47,142,0.861,143,0.47,144,0.539,145,0.861,146,0.47,147,0.782,148,0.861,149,0.47,150,0.861,151,0.539,152,0.861,153,0.539,154,0.861,155,0.47,156,0.69,157,0.861,158,0.539,159,0.773,160,0.861,161,0.539,162,0.861,163,0.47,164,0.861,165,0.47,166,0.283,167,0.861,168,0.861,169,0.861,170,0.03,171,0.03,172,2.957,173,2.846,174,5.06,175,4.591,176,5.06,177,1.77,178,1.841,179,4.591,180,3.592,181,2.262,182,2.262,183,1.977,184,1.298,185,3.592]],["title/modules/AppModule.html",[186,2.434,187,1.833]],["body/modules/AppModule.html",[1,0.816,3,0.355,4,0.3,9,0.3,16,0.605,37,0.04,69,0.792,72,0.355,73,0.355,74,0.199,75,0.475,113,1.553,139,0.879,141,0.711,143,0.711,144,0.473,146,0.711,147,0.864,149,0.711,151,0.816,153,0.816,155,0.711,156,0.605,158,0.816,159,0.678,161,0.816,163,0.711,165,0.711,166,0.248,170,0.027,171,0.027,187,3.824,188,1.736,189,2.613,190,2.596,191,2.596,192,2.596,193,2.596,194,2.993,195,3.471,196,2.596,197,3.153,198,4.216,199,3.471,200,3.471,201,3.471,202,4.216,203,2.596,204,2.229,205,3.153,206,4.216,207,2.229,208,3.153,209,2.596,210,4.216,211,2.229,212,2.229,213,3.153,214,3.153,215,2.596,216,3.153,217,3.153,218,2.596,219,1.955,220,2.596,221,1.955,222,2.596,223,1.955,224,2.596,225,3.153,226,3.153,227,2.229,228,3.153,229,1.955,230,2.596,231,1.955,232,2.596,233,3.153,234,3.153]],["title/modules/AppRoutingModule.html",[186,2.434,194,1.627]],["body/modules/AppRoutingModule.html",[0,0.163,3,0.429,4,0.363,9,0.363,37,0.041,69,0.78,72,0.429,73,0.429,74,0.24,141,0.623,143,0.623,144,0.715,146,0.623,147,0.812,149,0.623,155,0.623,156,0.915,163,0.623,165,0.623,166,0.3,170,0.031,171,0.031,188,2.096,194,2.622,199,3.135,201,3.922,215,3.135,218,3.135,219,2.361,220,3.135,221,2.361,222,3.135,223,2.361,224,3.135,229,2.361,230,3.135,231,2.361,232,3.135,235,3.808,236,3.808,237,4.764,238,3.223,239,1.523,240,3.377,241,3.808,242,2.096,243,5.868,244,2.692,245,2.361,246,2.692,247,2.692,248,3.808,249,4.28,250,3.808,251,3.808,252,3.808,253,3.808]],["title/components/AuthComponent.html",[0,0.083,141,0.387]],["body/components/AuthComponent.html",[0,0.116,1,0.362,2,0.752,3,0.271,4,0.23,5,0.578,6,0.578,7,0.578,8,0.578,9,0.23,12,0.671,13,0.986,14,0.578,15,1.375,16,1.101,18,0.838,20,0.838,22,0.271,23,1.263,25,0.596,27,1.082,33,0.362,34,0.773,36,0.79,37,0.041,39,1.215,40,1.215,41,1.731,43,0.642,60,0.931,61,0.59,62,0.838,63,1.068,66,0.701,67,0.866,69,0.653,72,0.271,73,0.271,74,0.152,75,0.271,76,1.068,78,1.645,82,1.486,83,1.63,84,2.061,91,1.549,92,1.823,93,1.398,94,1.398,104,1.327,105,1.327,106,1.327,118,1.494,121,1.494,127,2.167,128,2.223,132,0.578,133,0.838,134,0.752,135,0.578,136,1.082,137,0.578,138,0.578,139,0.362,140,0.578,141,0.59,142,0.578,143,0.315,144,0.719,145,0.578,146,0.315,147,0.596,148,0.578,149,0.315,150,0.578,151,0.362,152,0.578,153,0.362,154,0.578,155,0.315,156,0.463,157,0.578,158,0.362,159,0.518,160,0.578,161,0.362,162,0.578,163,0.315,164,0.578,165,0.315,166,0.406,167,0.578,168,0.578,169,0.578,170,0.023,171,0.023,177,1.188,178,1.632,181,1.722,182,1.722,184,0.871,207,1.704,239,0.964,244,2.907,254,1.985,255,4.113,256,3.496,257,4.112,258,3.386,259,5.38,260,3.496,261,4.512,262,2.539,263,3.496,264,2.411,265,3.496,266,4.79,267,2.411,268,3.496,269,3.714,270,3.496,271,4.112,272,3.714,273,3.496,274,4.512,275,3.496,276,2.411,277,3.496,278,2.55,279,3.496,280,2.411,281,2.411,282,2.411,283,0.964,284,2.411,285,1.068,286,1.068,287,1.985,288,0.964,289,2.411,290,4.512,291,4.512,292,4.113,293,2.411,294,2.411,295,3.496,296,2.411,297,2.878,298,2.411,299,2.411,300,2.411,301,2.411,302,2.411,303,4.112,304,4.112,305,4.112,306,3.496,307,3.496,308,2.471,309,2.471,310,3.714,311,3.496,312,3.714,313,3.496,314,1.398,315,2.471,316,3.496,317,1.327,318,1.704,319,2.55,320,2.55,321,1.722,322,3.496,323,3.496,324,2.411,325,1.704,326,3.496,327,1.924,328,1.494,329,1.704]],["title/guards/AuthGuard.html",[240,1.833,330,2.09]],["body/guards/AuthGuard.html",[3,0.435,4,0.368,9,0.368,12,0.742,22,0.435,25,0.819,33,0.58,34,0.721,36,0.923,37,0.04,38,3.399,60,1.281,61,0.629,62,1.153,66,0.659,69,0.737,72,0.435,73,0.435,74,0.244,78,1.546,166,0.305,170,0.031,171,0.031,173,2.397,177,1.905,178,1.876,184,1.397,239,1.546,240,2.981,242,2.129,245,2.397,249,4.509,262,2.869,283,1.546,285,1.714,286,1.714,287,3.183,288,1.546,331,3.867,332,3.183,333,3.867,334,4.809,335,5.476,336,5.234,337,5.476,338,3.867,339,2.733,340,5.234,341,4.809,342,5.234,343,2.369,344,2.733,345,2.733,346,2.881,347,3.867,348,3.867,349,4.809,350,3.867,351,3.867]],["title/injectables/AuthService.html",[178,0.966,343,1.457]],["body/injectables/AuthService.html",[3,0.241,4,0.204,9,0.204,22,0.241,23,1.159,25,0.547,33,0.322,34,0.797,36,0.92,37,0.041,39,0.947,40,0.947,41,0.775,43,1.566,45,2.115,54,1.766,58,1.422,60,1.216,61,0.597,62,1.095,63,1.89,66,0.87,67,0.738,69,0.649,72,0.241,73,0.241,74,0.135,75,0.575,76,2.313,113,2.36,134,0.69,144,0.64,166,0.449,170,0.021,171,0.021,173,1.33,178,1.048,184,0.775,211,1.516,239,0.858,242,2.926,244,2.267,245,1.33,257,3.758,262,2.446,269,4.591,271,3.511,272,3.511,283,0.858,285,0.951,286,0.951,288,1.825,297,3.944,310,3.511,312,4.591,314,2.157,315,4.052,343,1.58,344,1.516,345,1.516,346,2.733,352,1.516,353,1.766,354,3.842,355,4.264,356,3.208,357,3.842,358,3.208,359,4.264,360,2.145,361,4.264,362,3.163,363,3.511,364,3.208,365,2.145,366,3.944,367,4.79,368,2.267,369,1.988,370,3.208,371,3.208,372,4.264,373,4.264,374,3.208,375,2.145,376,2.641,377,3.208,378,2.641,379,4.264,380,3.208,381,3.208,382,2.641,383,3.208,384,2.83,385,2.145,386,3.208,387,3.208,388,3.944,389,2.969,390,3.208,391,3.208,392,1.58,393,3.208,394,2.145,395,4.264,396,4.264,397,4.264,398,2.145,399,3.208,400,3.208,401,2.145,402,3.842,403,2.145,404,3.208,405,2.145,406,2.145,407,2.145,408,2.145,409,2.145,410,2.145,411,2.145,412,3.208,413,3.842,414,3.163,415,3.208,416,3.208,417,3.208,418,3.842,419,2.145,420,2.145,421,2.145,422,2.145,423,2.145,424,1.766,425,2.145,426,2.267,427,2.145,428,2.145,429,2.145,430,2.145,431,3.163,432,2.145,433,2.145,434,2.145,435,4.565,436,2.145,437,2.145,438,2.145,439,2.145,440,2.145,441,2.145,442,1.33,443,2.145,444,1.766,445,2.145,446,2.145,447,2.145,448,2.145,449,2.145,450,3.842,451,2.145,452,1.766,453,2.145,454,2.716,455,2.145,456,4.264,457,2.145,458,3.208,459,2.145,460,3.208,461,2.145,462,3.208,463,2.145,464,2.145,465,2.145,466,2.145,467,3.208,468,2.145,469,2.145,470,2.641,471,2.145,472,2.145,473,2.145,474,2.145,475,2.145,476,1.766]],["title/components/DataPrivacyComponent.html",[0,0.083,143,0.387]],["body/components/DataPrivacyComponent.html",[0,0.078,1,0.196,2,0.466,3,0.147,4,0.124,5,0.313,6,0.313,7,0.313,8,0.313,9,0.124,12,0.416,13,0.666,14,0.313,15,1.212,16,0.97,18,0.519,20,0.519,22,0.147,25,0.369,27,0.775,33,0.416,34,0.325,37,0.034,46,1.712,61,0.283,62,0.519,66,0.222,67,0.416,69,0.171,72,0.147,73,0.147,74,0.082,75,0.147,82,0.472,103,0.809,118,1.342,119,0.922,121,0.809,132,0.313,133,0.519,134,0.466,135,0.313,136,0.775,137,0.313,138,0.313,139,0.196,140,0.313,141,0.171,142,0.313,143,0.423,144,0.667,145,0.313,146,0.171,147,0.369,148,0.313,149,0.171,150,0.313,151,0.196,152,0.313,153,0.196,154,0.313,155,0.171,156,0.251,157,0.313,158,0.196,159,0.281,160,0.313,161,0.196,162,0.313,163,0.171,164,0.313,165,0.171,166,0.103,167,0.313,168,0.313,169,0.313,170,0.014,171,0.014,229,1.72,246,1.962,308,2.731,309,2.731,325,0.922,477,2.285,478,1.074,479,2.775,480,2.165,481,1.305,482,1.305,483,4.807,484,2.165,485,3.23,486,3.23,487,4.844,488,2.165,489,2.165,490,2.165,491,2.165,492,5.475,493,3.864,494,3.181,495,3.181,496,5.233,497,2.165,498,3.864,499,5.119,500,2.165,501,2.165,502,2.165,503,3.23,504,4.583,505,5.672,506,4.284,507,2.165,508,3.23,509,2.165,510,2.165,511,2.66,512,4.284,513,5.327,514,3.23,515,5.632,516,5.233,517,2.165,518,5.119,519,5.475,520,2.165,521,2.165,522,2.165,523,3.23,524,2.165,525,2.165,526,4.284,527,2.165,528,2.165,529,3.864,530,4.807,531,4.215,532,3.23,533,2.165,534,2.165,535,1.783,536,3.23,537,3.23,538,2.165,539,2.165,540,3.864,541,3.23,542,4.773,543,3.23,544,2.165,545,2.165,546,4.583,547,4.981,548,2.165,549,2.165,550,3.958,551,2.165,552,1.531,553,4.583,554,2.165,555,2.165,556,4.284,557,2.165,558,5.233,559,2.165,560,2.165,561,3.864,562,3.181,563,2.165,564,3.23,565,3.23,566,1.783,567,3.23,568,3.23,569,3.23,570,2.165,571,3.23,572,2.165,573,2.165,574,3.23,575,2.165,576,2.165,577,2.165,578,2.165,579,2.165,580,2.165,581,2.165,582,3.23,583,2.165,584,2.165,585,3.864,586,3.23,587,4.807,588,3.864,589,3.864,590,4.284,591,3.864,592,2.165,593,2.165,594,3.23,595,2.165,596,3.23,597,2.165,598,3.23,599,3.23,600,2.165,601,3.23,602,3.23,603,2.165,604,4.583,605,2.165,606,2.165,607,2.165,608,2.165,609,2.165,610,3.181,611,4.284,612,4.284,613,3.23,614,3.23,615,2.165,616,2.165,617,3.527,618,3.864,619,3.864,620,3.23,621,1.783,622,3.864,623,2.165,624,2.165,625,2.165,626,2.165,627,2.165,628,2.165,629,1.783,630,2.165,631,3.23,632,2.165,633,2.165,634,1.783,635,2.165,636,3.864,637,3.864,638,2.165,639,3.864,640,2.165,641,2.66,642,2.165,643,2.165,644,2.165,645,3.864,646,1.783,647,2.165,648,2.165,649,2.165,650,2.165,651,2.165,652,4.284,653,2.165,654,3.23,655,2.165,656,2.165,657,2.165,658,2.165,659,2.165,660,2.165,661,2.165,662,2.165,663,2.66,664,2.165,665,2.165,666,3.23,667,2.165,668,2.165,669,2.165,670,2.165,671,3.23,672,2.165,673,2.165,674,2.165,675,2.165,676,2.165,677,4.807,678,2.165,679,2.165,680,2.165,681,2.165,682,2.165,683,2.165,684,2.165,685,2.165,686,2.165,687,1.783,688,3.23,689,3.23,690,2.165,691,2.165,692,2.165,693,2.165,694,2.165,695,2.165,696,2.165,697,2.165,698,2.165,699,2.165,700,2.165,701,2.165,702,2.165,703,2.165,704,2.165,705,2.165,706,1.531,707,2.165,708,3.23,709,2.165,710,2.165,711,3.23,712,2.165,713,2.165,714,2.165,715,2.165,716,2.165,717,2.165,718,2.165,719,2.165,720,3.23,721,2.165,722,2.165,723,2.165,724,2.165,725,3.23,726,2.165,727,2.165,728,2.165,729,2.165,730,2.165,731,2.165,732,2.165,733,2.165,734,2.165,735,2.165,736,2.165,737,2.165,738,2.165,739,2.165,740,2.165,741,2.165,742,2.165,743,2.165,744,2.165,745,3.864,746,2.165,747,2.165,748,1.783,749,2.165,750,2.165,751,2.165,752,2.165,753,2.165,754,2.165,755,2.165,756,2.165,757,2.165,758,2.165,759,2.165,760,2.165,761,2.165,762,2.165,763,2.165,764,2.165,765,2.165,766,2.165,767,3.23,768,2.165,769,2.66,770,2.165,771,2.165,772,2.165,773,2.165,774,2.165,775,1.783,776,2.165,777,1.783,778,1.783,779,1.783,780,2.165,781,2.165,782,2.165,783,1.783,784,2.165,785,2.165,786,2.165,787,1.074]],["title/injectables/DataService.html",[343,1.457,788,1.457]],["body/injectables/DataService.html",[3,0.231,4,0.195,9,0.195,22,0.231,25,0.528,33,0.307,34,0.788,36,0.967,37,0.041,41,1.35,43,1.58,45,3.151,46,2.231,58,2.397,60,1.341,61,0.658,62,1.207,63,2.166,64,2.507,66,0.95,67,0.8,69,0.545,72,0.231,73,0.231,74,0.129,75,0.349,76,2.425,78,1.666,83,0.74,144,0.849,147,0.989,166,0.421,170,0.02,171,0.02,173,1.269,184,0.74,211,1.447,278,1.92,285,0.907,286,0.907,314,2.013,343,1.526,344,1.447,345,1.447,346,2.837,352,1.447,362,4.024,363,3.43,369,1.92,376,2.55,384,3.03,389,1.269,392,2.319,414,1.686,424,1.686,426,2.945,442,2.582,454,1.447,617,2.55,788,1.526,789,1.686,790,3.098,791,4.166,792,3.098,793,3.098,794,3.098,795,3.098,796,3.098,797,3.43,798,2.19,799,2.048,800,2.048,801,3.098,802,2.048,803,2.55,804,2.55,805,5.034,806,3.736,807,5.527,808,2.048,809,2.582,810,2.048,811,2.048,812,2.048,813,3.875,814,2.048,815,3.098,816,2.048,817,2.048,818,2.641,819,1.686,820,1.686,821,2.048,822,3.353,823,2.048,824,2.048,825,3.098,826,4.102,827,5.779,828,2.048,829,4.166,830,4.888,831,2.048,832,2.048,833,2.582,834,3.098,835,2.048,836,2.048,837,3.098,838,3.327,839,2.048,840,2.55,841,3.098,842,3.098,843,2.945,844,2.048,845,2.048,846,3.098,847,4.166,848,2.048,849,2.048,850,2.048,851,2.048,852,2.048,853,2.048,854,2.048,855,2.048,856,3.098,857,3.098,858,2.641,859,3.098,860,3.098,861,2.048,862,2.048,863,2.048,864,2.048,865,2.048,866,2.048,867,2.048,868,2.048,869,2.048,870,2.048,871,2.048,872,2.048,873,2.048,874,2.048,875,2.048,876,2.048,877,2.048,878,2.048,879,2.048,880,4.166,881,2.048,882,2.048,883,2.048,884,2.048,885,3.098,886,4.166,887,2.048,888,2.048,889,2.048,890,2.048,891,3.098,892,3.098,893,3.098]],["title/components/DuelOverviewComponent.html",[0,0.083,146,0.387]],["body/components/DuelOverviewComponent.html",[0,0.102,1,0.293,2,0.643,3,0.22,4,0.186,5,0.469,6,0.469,7,0.469,8,0.469,9,0.186,10,3.146,12,0.574,13,0.871,14,0.469,15,1.326,16,1.061,18,0.717,20,0.717,22,0.22,23,1.08,25,0.509,27,0.975,33,0.293,34,0.853,36,1.028,37,0.041,39,1.558,40,1.558,41,1.47,43,0.967,45,1.646,46,1.802,60,0.521,61,0.475,62,0.469,64,2.621,66,0.693,67,0.842,69,0.605,72,0.22,73,0.22,74,0.123,75,0.22,82,1.738,83,1.47,84,1.848,91,1.325,92,1.609,93,0.781,94,0.781,95,1.211,96,1.211,97,0.963,98,0.866,104,1.999,105,1.999,106,1.999,128,0.963,132,0.469,133,0.717,134,0.643,135,0.469,136,0.975,137,0.469,138,0.469,139,0.293,140,0.469,141,0.256,142,0.469,143,0.256,144,0.545,145,0.469,146,0.532,147,0.933,148,0.469,149,0.256,150,0.469,151,0.293,152,0.469,153,0.293,154,0.469,155,0.256,156,0.375,157,0.469,158,0.293,159,0.42,160,0.469,161,0.293,162,0.469,163,0.256,164,0.469,165,0.256,166,0.345,167,0.469,168,0.469,169,0.469,170,0.019,171,0.019,178,1.572,183,1.076,184,0.706,221,3.543,239,0.781,258,2.113,262,2.37,278,1.853,283,0.781,285,0.866,286,0.866,288,1.452,314,1.753,317,1.646,319,1.853,320,1.853,321,1.473,327,1.076,328,1.211,339,3.267,392,0.963,706,2.875,788,2.37,803,2.461,818,3.507,822,2.251,826,2.566,833,1.211,894,1.609,895,2.251,896,2.004,897,3.631,898,2.99,899,3.631,900,3.631,901,3.631,902,4.383,903,3.631,904,3.631,905,3.631,906,3.631,907,3.631,908,4.383,909,2.989,910,4.067,911,2.251,912,3.631,913,1.954,914,3.348,915,2.99,916,1.954,917,2.461,918,2.99,919,2.99,920,1.954,921,1.381,922,1.609,923,1.954,924,2.566,925,2.461,926,1.954,927,1.609,928,1.954,929,1.954,930,1.954,931,1.954,932,1.954,933,1.954,934,1.954,935,1.954,936,1.954,937,1.954,938,2.982,939,1.954,940,1.954,941,1.954,942,1.954,943,1.954,944,1.381,945,1.609,946,1.609,947,2.113,948,1.609,949,2.99,950,1.381,951,1.954,952,1.954,953,1.954,954,1.954,955,1.954,956,2.99,957,2.99,958,1.954,959,2.99,960,2.99,961,2.99,962,2.99,963,2.99,964,2.99,965,2.99,966,2.99,967,1.954,968,1.954,969,1.609,970,3.348,971,1.954,972,1.609,973,2.989,974,3.631,975,4.067,976,2.99,977,4.067,978,2.99,979,2.99,980,2.99,981,2.99,982,2.875,983,1.381,984,1.609,985,1.381,986,1.954,987,1.609,988,1.954,989,2.461,990,1.954,991,1.954,992,1.954,993,2.99]],["title/components/DuelPlayComponent.html",[0,0.083,149,0.387]],["body/components/DuelPlayComponent.html",[0,0.101,1,0.289,2,0.636,3,0.217,4,0.184,5,0.462,6,0.462,7,0.462,8,0.462,9,0.184,10,3.169,12,0.568,13,0.863,14,0.462,15,1.322,16,1.059,17,2.962,18,0.709,20,0.709,22,0.217,23,1.068,25,0.504,27,0.968,30,2.962,33,0.289,34,0.86,36,1.037,37,0.041,38,2.09,39,1.553,40,1.553,41,1.3,43,1.224,45,3.006,46,2.33,57,4.065,58,2.33,60,0.959,61,0.57,62,0.863,63,1.31,64,2.037,66,0.841,67,0.993,69,0.601,72,0.217,73,0.217,74,0.121,75,0.217,76,1.31,78,0.77,79,2.434,83,0.696,84,1.182,93,0.77,94,0.77,132,0.462,133,0.709,134,0.636,135,0.462,136,0.968,137,0.462,138,0.462,139,0.289,140,0.462,141,0.252,142,0.462,143,0.252,144,0.653,145,0.462,146,0.252,147,0.954,148,0.462,149,0.528,150,0.462,151,0.289,152,0.462,153,0.289,154,0.462,155,0.252,156,0.37,157,0.462,158,0.289,159,0.414,160,0.462,161,0.289,162,0.462,163,0.252,164,0.462,165,0.252,166,0.284,167,0.462,168,0.462,169,0.462,170,0.019,171,0.019,177,0.949,178,1.502,183,1.06,184,0.696,223,3.569,239,0.77,242,1.06,262,2.358,283,0.77,285,0.854,286,0.854,288,1.439,327,1.627,328,1.194,339,2.543,346,1.06,368,2.09,369,2.849,378,2.434,392,1.457,470,1.586,476,1.586,788,2.358,809,3.139,822,2.231,826,3.579,833,1.194,858,2.09,895,2.231,896,1.457,911,2.502,914,3.323,924,2.09,927,2.434,938,1.194,944,1.361,950,1.361,969,1.586,970,3.323,972,1.586,973,2.434,982,2.09,994,1.586,995,3.598,996,2.956,997,3.598,998,3.598,999,4.354,1000,3.598,1001,3.598,1002,3.598,1003,3.598,1004,4.036,1005,4.036,1006,4.036,1007,4.036,1008,2.956,1009,2.956,1010,2.956,1011,1.926,1012,3.323,1013,4.036,1014,2.956,1015,4.354,1016,2.956,1017,1.926,1018,2.434,1019,1.926,1020,2.956,1021,2.434,1022,2.956,1023,2.09,1024,1.926,1025,2.956,1026,1.926,1027,4.036,1028,1.926,1029,2.956,1030,1.926,1031,2.956,1032,2.956,1033,1.926,1034,2.956,1035,2.956,1036,1.926,1037,1.926,1038,1.926,1039,1.926,1040,1.926,1041,1.926,1042,1.926,1043,1.926,1044,1.926,1045,1.926,1046,1.926,1047,1.926,1048,1.926,1049,1.926,1050,1.926,1051,1.926,1052,1.926,1053,3.598,1054,1.926,1055,1.926,1056,1.926,1057,4.036,1058,2.956,1059,1.926,1060,1.926,1061,1.926,1062,1.926,1063,1.926,1064,1.926,1065,1.926,1066,1.926,1067,1.926,1068,1.926,1069,1.926,1070,1.926,1071,1.926,1072,1.926,1073,1.926,1074,1.926,1075,1.926,1076,1.926,1077,2.956,1078,2.956,1079,1.926,1080,1.926,1081,1.926,1082,1.926,1083,1.586]],["title/components/FooterComponent.html",[0,0.083,151,0.444]],["body/components/FooterComponent.html",[0,0.141,1,0.525,2,0.971,3,0.394,4,0.333,5,0.839,6,0.839,7,0.839,8,0.839,9,0.333,12,0.867,13,1.198,14,0.839,15,1.446,16,1.158,18,1.082,20,1.082,22,0.394,25,0.769,27,1.266,33,0.75,34,0.677,37,0.04,61,0.59,66,0.596,67,0.867,69,0.457,72,0.394,73,0.394,74,0.221,75,0.394,83,1.631,84,1.998,90,1.925,91,2,92,2,93,1.399,94,1.399,97,1.723,98,2,123,2.879,132,0.839,133,1.082,134,0.971,135,0.839,136,1.266,137,0.839,138,0.839,139,0.525,140,0.839,141,0.457,142,0.839,143,0.457,144,0.75,145,0.839,146,0.457,147,0.769,148,0.839,149,0.457,150,0.839,151,0.792,152,0.839,153,0.525,154,0.839,155,0.457,156,0.959,157,0.839,158,0.525,159,0.752,160,0.839,161,0.525,162,0.839,163,0.457,164,0.839,165,0.457,166,0.276,167,0.839,168,0.839,169,0.839,170,0.029,171,0.029,181,2.223,182,2.223,246,3.19,247,3.19,319,2.168,320,2.168,321,2.223,329,2.472,769,3.715,1084,2.879,1085,4.996,1086,4.996,1087,4.513,1088,3.498,1089,3.498,1090,3.715,1091,3.498,1092,3.715,1093,3.498,1094,2.879,1095,2.879,1096,2.879]],["title/components/HeaderComponent.html",[0,0.083,153,0.444]],["body/components/HeaderComponent.html",[0,0.127,1,0.425,2,0.843,3,0.319,4,0.27,5,0.68,6,0.68,7,0.68,8,0.68,9,0.27,12,0.753,13,1.078,14,0.68,15,1.408,16,1.128,18,0.94,20,0.94,22,0.319,23,1.417,25,0.668,27,1.163,33,0.425,34,0.81,36,0.863,37,0.041,39,1.158,40,1.158,41,1.625,43,0.755,60,0.755,61,0.588,62,0.68,66,0.766,67,0.978,69,0.635,72,0.319,73,0.319,74,0.179,75,0.319,78,1.134,82,1.025,83,1.417,84,1.568,90,1.561,91,1.256,92,1.256,93,1.134,94,1.134,98,1.256,113,1.932,132,0.68,133,0.94,134,0.843,135,0.68,136,1.163,137,0.68,138,0.68,139,0.425,140,0.68,141,0.371,142,0.68,143,0.371,144,0.425,145,0.68,146,0.371,147,0.668,148,0.68,149,0.371,150,0.68,151,0.425,152,0.68,153,0.728,154,0.68,155,0.371,156,0.544,157,0.68,158,0.425,159,0.61,160,0.68,161,0.425,162,0.68,163,0.371,164,0.68,165,0.371,166,0.382,167,0.68,168,0.68,169,0.68,170,0.025,171,0.025,177,1.397,178,1.721,181,1.932,182,1.932,183,1.561,184,1.025,239,1.134,262,2.66,278,1.757,283,1.134,288,1.134,303,3.994,304,3.228,305,3.228,314,2.234,321,1.397,328,1.757,329,2.004,382,3.228,388,3.228,442,2.431,895,2.787,911,3.007,917,3.228,921,2.772,938,3.157,947,2.772,985,2.772,1094,2.334,1095,2.334,1096,2.334,1097,2.334,1098,4.851,1099,4.496,1100,3.922,1101,5.093,1102,4.496,1103,4.851,1104,3.922,1105,2.835,1106,2.835,1107,3.922,1108,2.835,1109,3.922,1110,3.922,1111,2.835,1112,2.835,1113,2.835,1114,2.835,1115,4.496,1116,2.334,1117,2.835,1118,2.835,1119,2.835,1120,2.835,1121,2.835]],["title/components/LegalNoticeComponent.html",[0,0.083,155,0.387]],["body/components/LegalNoticeComponent.html",[0,0.13,1,0.45,2,0.876,3,0.337,4,0.285,5,0.719,6,0.719,7,0.719,8,0.719,9,0.285,12,0.782,13,1.11,14,0.719,15,1.419,16,1.136,18,0.977,20,0.977,22,0.337,25,0.694,27,1.191,33,0.694,34,0.611,37,0.04,61,0.533,66,0.51,67,0.782,69,0.392,72,0.337,73,0.337,74,0.189,75,0.337,82,1.083,103,1.857,118,2.525,119,2.118,121,1.857,132,0.719,133,0.977,134,0.876,135,0.719,136,1.191,137,0.719,138,0.719,139,0.45,140,0.719,141,0.392,142,0.719,143,0.392,144,0.45,145,0.719,146,0.392,147,0.694,148,0.719,149,0.392,150,0.719,151,0.45,152,0.719,153,0.45,154,0.719,155,0.65,156,1.086,157,0.719,158,0.45,159,0.644,160,0.719,161,0.45,162,0.719,163,0.392,164,0.719,165,0.392,166,0.236,167,0.719,168,0.719,169,0.719,170,0.026,171,0.026,231,2.869,247,3.271,308,2.879,309,2.879,325,2.118,487,4.088,494,4.088,495,4.088,511,3.353,531,3.353,535,3.353,542,3.353,550,3.353,562,3.353,610,3.353,621,3.353,629,3.353,634,3.353,641,3.353,646,3.353,663,3.353,687,4.088,706,2.879,748,3.353,775,3.353,777,3.353,778,3.353,779,3.353,787,2.467,1090,4.088,1122,3.81,1123,2.467,1124,4.628,1125,4.073,1126,2.996,1127,2.996,1128,5.357,1129,4.073,1130,4.073,1131,4.073,1132,4.073,1133,4.073,1134,4.073,1135,4.073,1136,4.966,1137,4.073,1138,4.073,1139,4.073,1140,4.073,1141,4.088,1142,4.966,1143,4.073,1144,4.073,1145,4.073,1146,4.073,1147,4.073,1148,4.073,1149,4.073,1150,4.073,1151,4.073,1152,4.073,1153,4.073,1154,4.073,1155,4.073,1156,4.073,1157,4.073,1158,4.073]],["title/components/ModalNewDuelComponent.html",[0,0.083,158,0.444]],["body/components/ModalNewDuelComponent.html",[0,0.126,1,0.425,2,0.843,3,0.319,4,0.27,5,0.679,6,0.679,7,0.679,8,0.679,9,0.27,12,0.752,13,1.078,14,0.679,15,1.408,16,1.127,18,0.94,20,0.94,22,0.441,25,0.668,27,1.163,28,2.77,31,3.226,33,0.674,34,0.81,36,0.931,37,0.04,39,0.836,40,0.836,43,1.403,48,4.191,58,1.737,60,0.754,61,0.588,62,0.679,63,1.255,64,2.149,66,0.766,67,0.931,69,0.37,70,2.77,71,3.699,72,0.319,73,0.319,74,0.179,75,0.687,76,1.737,87,2.002,97,1.931,98,1.255,128,1.395,132,0.679,133,0.94,134,0.843,135,0.679,136,1.163,137,0.679,138,0.679,139,0.425,140,0.679,141,0.37,142,0.679,143,0.37,144,0.425,145,0.679,146,0.37,147,0.937,148,0.679,149,0.37,150,0.679,151,0.425,152,0.679,153,0.425,154,0.679,155,0.37,156,0.544,157,0.679,158,0.727,159,1.248,160,0.679,161,0.425,162,0.679,163,0.37,164,0.679,165,0.37,166,0.354,167,0.679,168,0.679,169,0.679,170,0.025,171,0.025,227,3.889,314,1.567,317,1.559,327,2.157,384,2.429,392,1.931,566,2.331,798,2.77,818,2.77,838,3.598,843,2.77,985,2.77,1012,3.226,1018,3.226,1116,3.226,1159,4.53,1160,2.331,1161,4.493,1162,3.918,1163,4.849,1164,3.699,1165,4.493,1166,4.493,1167,3.918,1168,2.832,1169,2.832,1170,2.832,1171,3.992,1172,3.918,1173,3.226,1174,2.832,1175,3.226,1176,2.832,1177,3.918,1178,3.918,1179,3.918,1180,2.832,1181,2.832,1182,3.918,1183,2.331,1184,2.832,1185,2.832,1186,2.832,1187,2.832,1188,2.832]],["title/components/QuestionComponent.html",[0,0.083,161,0.444]],["body/components/QuestionComponent.html",[0,0.139,1,0.512,2,0.955,3,0.384,4,0.325,5,0.818,6,0.818,7,0.818,8,0.818,9,0.325,10,2.879,12,0.853,13,1.184,14,0.818,15,1.442,16,1.155,18,1.065,20,1.065,22,0.384,25,0.757,27,1.254,28,3.14,33,0.741,34,0.741,36,0.655,37,0.04,39,1.008,40,1.008,43,1.183,53,2.412,61,0.581,66,0.581,67,0.853,69,0.446,70,3.14,72,0.384,73,0.384,74,0.215,75,0.384,82,1.233,83,1.233,84,1.365,86,2.412,89,2.412,90,1.879,91,1.968,92,2.188,93,1.365,94,1.365,95,2.116,96,2.116,97,2.188,98,1.512,99,2.81,101,2.81,103,2.116,104,1.879,105,1.879,106,1.879,125,2.81,132,0.818,133,1.065,134,0.955,135,0.818,136,1.254,137,0.818,138,0.818,139,0.512,140,0.818,141,0.446,142,0.818,143,0.446,144,0.512,145,0.818,146,0.446,147,0.757,148,0.818,149,0.446,150,0.818,151,0.512,152,0.818,153,0.512,154,0.818,155,0.446,156,0.655,157,0.818,158,0.512,159,0.734,160,0.818,161,0.785,162,0.818,163,0.446,164,0.818,165,0.446,166,0.269,167,0.818,168,0.818,169,0.818,170,0.029,171,0.029,321,1.681,809,3.558,989,3.657,1092,2.81,1189,2.81,1190,4.938,1191,4.442,1192,4.442,1193,3.413,1194,3.413,1195,3.413,1196,3.413,1197,3.413,1198,3.413,1199,3.413]],["title/components/StartpageComponent.html",[0,0.083,163,0.387]],["body/components/StartpageComponent.html",[0,0.139,1,0.515,2,0.959,3,0.386,4,0.327,5,0.823,6,0.823,7,0.823,8,0.823,9,0.327,12,0.856,13,1.187,14,0.823,15,1.443,16,1.155,18,1.069,20,1.069,22,0.386,25,0.759,27,1.257,33,0.743,34,0.669,37,0.04,53,3.151,61,0.583,66,0.585,67,0.856,69,0.449,72,0.386,73,0.386,74,0.216,75,0.386,82,1.24,87,2.425,89,2.425,90,1.889,110,2.825,126,3.669,127,2.763,128,2.743,129,2.825,132,0.823,133,1.069,134,0.959,135,0.823,136,1.257,137,0.823,138,0.823,139,0.515,140,0.823,141,0.449,142,0.823,143,0.449,144,0.515,145,0.823,146,0.449,147,0.759,148,0.823,149,0.449,150,0.823,151,0.515,152,0.823,153,0.515,154,0.823,155,0.449,156,0.659,157,0.823,158,0.515,159,0.738,160,0.823,161,0.515,162,0.823,163,0.686,164,0.823,165,0.449,166,0.27,167,1.303,168,0.823,169,0.823,170,0.029,171,0.029,181,2.196,182,2.196,317,1.889,318,2.425,552,2.425,809,3.069,983,2.425,984,2.825,1183,4.076,1200,2.825,1201,4.076,1202,3.669,1203,3.431,1204,3.431,1205,4.457,1206,3.431,1207,4.457,1208,4.457,1209,4.951,1210,3.431,1211,3.431,1212,3.431,1213,3.431,1214,3.431,1215,3.431]],["title/classes/User.html",[74,0.186,166,0.233]],["body/classes/User.html",[3,0.45,4,0.381,9,0.381,22,0.45,23,1.775,33,0.737,34,0.853,36,1.064,37,0.04,43,1.63,58,2.521,60,1.066,61,0.523,62,0.96,73,0.45,74,0.252,75,0.45,166,0.387,170,0.032,171,0.032,288,1.964,314,2.216,315,4.021,346,2.704,452,3.294,1216,4.001,1217,3.294,1218,5.968,1219,4.912,1220,5.315,1221,4.001,1222,5.315,1223,5.315,1224,5.542,1225,4.001,1226,4.001,1227,4.001,1228,4.001,1229,4.001,1230,4.001,1231,4.912,1232,4.001]],["title/components/UserStartpageComponent.html",[0,0.083,165,0.387]],["body/components/UserStartpageComponent.html",[0,0.101,1,0.287,2,0.633,3,0.404,4,0.182,5,0.459,6,0.459,7,0.459,8,0.459,9,0.182,12,0.565,13,0.86,14,0.459,15,1.321,16,1.057,18,0.706,20,0.706,22,0.216,23,1.063,25,0.501,27,0.965,33,0.287,34,0.85,36,1.023,37,0.041,39,1.55,40,1.55,41,1.726,43,1.347,46,1.783,58,1.304,60,0.784,61,0.526,62,0.706,63,0.848,64,1.589,66,0.781,67,0.88,69,0.568,72,0.216,73,0.216,74,0.121,75,0.516,76,1.304,78,1.177,82,1.657,83,1.781,84,2.237,85,2.423,86,1.353,91,1.783,92,1.924,93,0.765,94,0.765,95,1.187,96,1.187,97,0.943,98,0.848,104,1.62,105,1.62,106,1.62,127,1.187,128,1.45,132,0.459,133,0.706,134,0.865,135,0.459,136,0.965,137,0.459,138,0.459,139,0.287,140,0.459,141,0.25,142,0.459,143,0.25,144,0.287,145,0.459,146,0.25,147,0.908,148,0.459,149,0.25,150,0.459,151,0.287,152,0.459,153,0.287,154,0.459,155,0.25,156,0.368,157,0.459,158,0.287,159,0.633,160,0.459,161,0.287,162,0.459,163,0.25,164,0.459,165,0.526,166,0.425,167,1.099,168,0.459,169,0.459,170,0.019,171,0.019,177,0.943,178,1.498,183,1.054,184,0.692,219,3.532,242,1.973,258,2.08,283,0.765,285,0.848,286,0.848,288,0.765,314,1.833,317,1.054,318,1.353,319,2.842,320,2.842,321,1.982,327,1.054,369,1.824,384,2.222,392,1.982,426,2.534,431,3.312,442,3.133,454,1.353,788,2.353,797,3.312,798,2.08,804,2.423,813,2.951,819,3.774,820,1.576,822,3.055,838,2.844,840,2.423,843,2.08,858,2.08,895,2.222,896,0.943,909,2.951,911,2.222,921,1.353,922,1.576,924,2.08,938,2.692,944,1.353,945,1.576,946,1.576,947,1.353,948,1.576,950,1.353,982,2.08,983,1.353,987,2.951,1021,2.423,1164,2.951,1171,1.576,1175,2.423,1201,2.951,1202,2.423,1233,4.69,1234,1.576,1235,3.585,1236,3.585,1237,3.585,1238,3.585,1239,3.585,1240,3.585,1241,4.342,1242,3.585,1243,3.585,1244,3.585,1245,2.943,1246,1.914,1247,1.914,1248,1.914,1249,1.914,1250,2.943,1251,2.943,1252,1.914,1253,1.914,1254,4.023,1255,1.914,1256,1.914,1257,1.914,1258,1.914,1259,1.914,1260,1.914,1261,1.914,1262,1.914,1263,1.914,1264,1.914,1265,1.914,1266,1.914,1267,1.914,1268,2.943,1269,1.914,1270,1.914,1271,1.914,1272,1.914,1273,1.914,1274,1.914,1275,2.943,1276,1.914,1277,1.914,1278,1.914,1279,1.914,1280,1.914,1281,1.914,1282,1.914,1283,4.342,1284,1.914,1285,1.914,1286,1.914,1287,1.914,1288,1.914,1289,1.914,1290,1.914,1291,1.914,1292,1.914,1293,1.914,1294,1.914,1295,1.914,1296,2.943,1297,1.914,1298,2.943,1299,1.914,1300,1.914,1301,1.914,1302,1.914,1303,1.914,1304,1.914]],["title/coverage.html",[1305,3.323]],["body/coverage.html",[0,0.17,1,0.563,9,0.358,10,2.982,11,3.089,36,0.72,37,0.04,64,2.664,74,0.237,75,0.581,139,0.563,141,0.491,143,0.491,146,0.491,149,0.491,151,0.563,153,0.563,155,0.491,158,0.563,161,0.563,163,0.491,165,0.491,166,0.296,170,0.031,171,0.031,172,3.089,178,1.226,212,3.336,219,2.326,221,2.326,223,2.326,227,2.652,229,2.326,231,2.326,240,2.326,254,3.089,330,2.652,332,3.089,343,2.325,353,3.089,477,3.089,478,3.089,552,2.652,788,1.849,789,3.089,894,3.089,994,3.089,1084,3.089,1097,3.089,1122,3.089,1123,3.089,1141,3.089,1159,3.089,1160,3.089,1189,3.089,1200,3.089,1217,3.089,1233,3.089,1234,3.089,1305,3.089,1306,3.752,1307,3.752,1308,3.752,1309,4.719,1310,5.163,1311,4.719,1312,5.583,1313,3.752,1314,3.752,1315,3.752,1316,3.752,1317,3.752,1318,3.752,1319,3.752,1320,3.752,1321,3.752,1322,3.752,1323,3.752,1324,3.752,1325,3.089,1326,5.418,1327,5.418,1328,3.089,1329,3.885,1330,3.089,1331,3.089,1332,3.752,1333,3.752]],["title/dependencies.html",[189,2.204,1334,2.032]],["body/dependencies.html",[37,0.04,72,0.499,170,0.034,171,0.034,189,2.745,200,3.646,203,4.298,204,3.691,207,3.13,209,3.646,239,1.771,283,1.771,389,2.745,1335,4.429,1336,6.03,1337,4.429,1338,4.429,1339,4.429,1340,4.429,1341,4.429,1342,4.429,1343,4.429,1344,4.429,1345,4.429,1346,4.429,1347,4.429,1348,4.429]],["title/index.html",[22,0.278,245,1.53,1349,2.468]],["body/index.html",[0,0.15,4,0.386,12,0.777,16,0.777,37,0.032,61,0.529,75,0.456,113,1.993,170,0.032,171,0.032,366,3.331,368,2.86,444,4.397,783,3.331,896,1.993,925,3.331,1083,4.78,1173,4.071,1334,3.331,1350,4.046,1351,4.945,1352,4.046,1353,5.341,1354,5.341,1355,4.046,1356,4.046,1357,4.945,1358,5.706,1359,5.879,1360,4.046,1361,4.046,1362,4.046,1363,4.046,1364,4.046,1365,4.046,1366,4.046,1367,4.046,1368,4.046,1369,5.341,1370,4.046,1371,5.564,1372,4.046,1373,4.046,1374,4.046,1375,4.046,1376,4.945,1377,4.945,1378,5.564,1379,4.046,1380,4.945,1381,4.046,1382,4.046,1383,4.046,1384,4.046,1385,4.945,1386,4.046,1387,4.046,1388,4.046,1389,4.046,1390,4.046,1391,4.046,1392,5.341,1393,4.046,1394,4.046,1395,4.046]],["title/modules.html",[188,2.222]],["body/modules.html",[37,0.035,170,0.035,171,0.035,187,2.941,188,2.612,194,2.612,204,3.354,1396,4.745,1397,4.745,1398,5.434,1399,4.745,1400,4.745]],["title/overview.html",[896,1.989]],["body/overview.html",[1,0.794,2,0.853,37,0.04,46,2.164,74,0.25,113,1.953,139,0.878,141,0.692,143,0.692,146,0.692,149,0.692,151,0.794,153,0.794,155,0.692,158,0.794,161,0.794,163,0.692,165,0.692,170,0.032,171,0.032,187,3.867,188,2.182,189,3.027,190,3.263,191,3.263,192,3.263,193,3.263,194,2.914,195,4.02,196,3.263,238,2.457,330,2.802,352,2.802,833,3.027,896,1.953,1401,3.964,1402,3.964]],["title/routes.html",[238,2.502]],["body/routes.html",[37,0.035,170,0.035,171,0.035,238,2.992]],["title/miscellaneous/variables.html",[1023,2.514,1403,2.032]],["body/miscellaneous/variables.html",[22,0.461,36,1.073,37,0.04,39,1.586,40,1.586,41,1.481,78,1.993,170,0.032,171,0.032,181,2.869,182,2.869,212,3.95,389,3.09,1023,2.897,1325,3.374,1328,3.374,1329,3.374,1330,4.104,1331,4.104,1403,3.374,1404,4.984,1405,4.099,1406,4.099,1407,4.099,1408,4.099,1409,4.099,1410,4.984,1411,4.984,1412,4.984,1413,4.984,1414,4.984,1415,4.984,1416,4.984,1417,4.984,1418,4.984,1419,4.984,1420,4.984,1421,4.984,1422,4.984,1423,4.984,1424,4.984,1425,4.984]]],"invertedIndex":[["",{"_index":37,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPrivacyComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"classes/User.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":64,"title":{},"body":{"components/AnswersComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{}}}],["0.11.4",{"_index":1346,"title":{},"body":{"dependencies.html":{}}}],["0.6",{"_index":1188,"title":{},"body":{"components/ModalNewDuelComponent.html":{}}}],["0/1",{"_index":1327,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1312,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1309,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1323,"title":{},"body":{"coverage.html":{}}}],["09",{"_index":785,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["1",{"_index":46,"title":{},"body":{"components/AnswersComponent.html":{},"components/DataPrivacyComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/UserStartpageComponent.html":{},"overview.html":{}}}],["1\">it's",{"_index":976,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["1\">it\\'s",{"_index":993,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["1.2rem",{"_index":120,"title":{},"body":{"components/AnswersComponent.html":{}}}],["1/9",{"_index":1317,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1015,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["100",{"_index":327,"title":{},"body":{"components/AuthComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/UserStartpageComponent.html":{}}}],["1000",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{},"components/DuelPlayComponent.html":{}}}],["1050px",{"_index":129,"title":{},"body":{"components/AnswersComponent.html":{},"components/StartpageComponent.html":{}}}],["11",{"_index":1316,"title":{},"body":{"coverage.html":{}}}],["12.2.0",{"_index":1336,"title":{},"body":{"dependencies.html":{}}}],["12.2.2",{"_index":1355,"title":{},"body":{"index.html":{}}}],["120",{"_index":1194,"title":{},"body":{"components/QuestionComponent.html":{}}}],["120px",{"_index":1304,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["12345678",{"_index":313,"title":{},"body":{"components/AuthComponent.html":{}}}],["13",{"_index":1401,"title":{},"body":{"overview.html":{}}}],["15",{"_index":520,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["150",{"_index":100,"title":{},"body":{"components/AnswersComponent.html":{}}}],["151579916440",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":524,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["1600",{"_index":691,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["160px",{"_index":1208,"title":{},"body":{"components/StartpageComponent.html":{}}}],["16px",{"_index":96,"title":{},"body":{"components/AnswersComponent.html":{},"components/DuelOverviewComponent.html":{},"components/QuestionComponent.html":{},"components/UserStartpageComponent.html":{}}}],["17",{"_index":527,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["18",{"_index":539,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["1:151579916440:web:d47ccdc89dd338c057b8ed",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":833,"title":{},"body":{"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":1344,"title":{},"body":{"dependencies.html":{}}}],["2/8",{"_index":1311,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":552,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/StartpageComponent.html":{},"coverage.html":{}}}],["200",{"_index":101,"title":{},"body":{"components/AnswersComponent.html":{},"components/QuestionComponent.html":{}}}],["2020",{"_index":784,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["21",{"_index":543,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["225ms",{"_index":111,"title":{},"body":{"components/AnswersComponent.html":{}}}],["230",{"_index":1092,"title":{},"body":{"components/FooterComponent.html":{},"components/QuestionComponent.html":{}}}],["25",{"_index":1310,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":989,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/QuestionComponent.html":{}}}],["2px",{"_index":130,"title":{},"body":{"components/AnswersComponent.html":{}}}],["3",{"_index":65,"title":{},"body":{"components/AnswersComponent.html":{}}}],["3/8",{"_index":1320,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":786,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["300px",{"_index":984,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/StartpageComponent.html":{}}}],["320px",{"_index":1215,"title":{},"body":{"components/StartpageComponent.html":{}}}],["32px",{"_index":103,"title":{},"body":{"components/AnswersComponent.html":{},"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{},"components/QuestionComponent.html":{}}}],["350ms",{"_index":114,"title":{},"body":{"components/AnswersComponent.html":{}}}],["36",{"_index":1141,"title":{},"body":{"components/LegalNoticeComponent.html":{},"coverage.html":{}}}],["3600",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["37",{"_index":1319,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":725,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["4/20",{"_index":1315,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1303,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["480px",{"_index":1213,"title":{},"body":{"components/StartpageComponent.html":{}}}],["4px",{"_index":131,"title":{},"body":{"components/AnswersComponent.html":{}}}],["5",{"_index":1129,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["5.1.0",{"_index":1341,"title":{},"body":{"dependencies.html":{}}}],["5/20",{"_index":1324,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":122,"title":{},"body":{"components/AnswersComponent.html":{}}}],["500px",{"_index":326,"title":{},"body":{"components/AuthComponent.html":{}}}],["54",{"_index":1313,"title":{},"body":{"coverage.html":{}}}],["5874c",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5874c.appspot.com",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5874c.firebaseapp.com",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":617,"title":{},"body":{"components/DataPrivacyComponent.html":{},"injectables/DataService.html":{}}}],["6.1.5",{"_index":1339,"title":{},"body":{"dependencies.html":{}}}],["6.6.0",{"_index":1342,"title":{},"body":{"dependencies.html":{}}}],["6/11",{"_index":1314,"title":{},"body":{"coverage.html":{}}}],["60px",{"_index":986,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["640px",{"_index":1211,"title":{},"body":{"components/StartpageComponent.html":{}}}],["64px",{"_index":88,"title":{},"body":{"components/AnswersComponent.html":{}}}],["7.0",{"_index":1347,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":125,"title":{},"body":{"components/AnswersComponent.html":{},"components/QuestionComponent.html":{}}}],["700",{"_index":325,"title":{},"body":{"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["8",{"_index":1402,"title":{},"body":{"overview.html":{}}}],["8.0",{"_index":1348,"title":{},"body":{"dependencies.html":{}}}],["8/22",{"_index":1318,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":124,"title":{},"body":{"components/AnswersComponent.html":{}}}],["800px",{"_index":1214,"title":{},"body":{"components/StartpageComponent.html":{}}}],["80px",{"_index":1210,"title":{},"body":{"components/StartpageComponent.html":{}}}],["80vh",{"_index":318,"title":{},"body":{"components/AuthComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["81",{"_index":1321,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":106,"title":{},"body":{"components/AnswersComponent.html":{},"components/AuthComponent.html":{},"components/DuelOverviewComponent.html":{},"components/QuestionComponent.html":{},"components/UserStartpageComponent.html":{}}}],["9/11",{"_index":1322,"title":{},"body":{"coverage.html":{}}}],["94043",{"_index":697,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["999",{"_index":1186,"title":{},"body":{"components/ModalNewDuelComponent.html":{}}}],["_token",{"_index":1222,"title":{},"body":{"classes/User.html":{}}}],["_tokenexpirationdate",{"_index":1223,"title":{},"body":{"classes/User.html":{}}}],["abc@abc.abc",{"_index":311,"title":{},"body":{"components/AuthComponent.html":{}}}],["abgeschlossen",{"_index":551,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["ablauf",{"_index":662,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["abs",{"_index":618,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["absolute",{"_index":1207,"title":{},"body":{"components/StartpageComponent.html":{}}}],["access",{"_index":849,"title":{},"body":{"injectables/DataService.html":{}}}],["accessors",{"_index":1219,"title":{},"body":{"classes/User.html":{}}}],["activatedroute",{"_index":914,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{}}}],["activatedroutesnapshot",{"_index":335,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":819,"title":{},"body":{"injectables/DataService.html":{},"components/UserStartpageComponent.html":{}}}],["activemind",{"_index":777,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["activeopponents",{"_index":860,"title":{},"body":{"injectables/DataService.html":{}}}],["actual_component",{"_index":169,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["add",{"_index":1388,"title":{},"body":{"index.html":{}}}],["address",{"_index":310,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["adress",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["adresse",{"_index":598,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["ag",{"_index":778,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["against",{"_index":1254,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["aizasyb8xiusvq_wnn1zgtgr4",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aktuellen",{"_index":752,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["align",{"_index":91,"title":{},"body":{"components/AnswersComponent.html":{},"components/AuthComponent.html":{},"components/DuelOverviewComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/QuestionComponent.html":{},"components/UserStartpageComponent.html":{}}}],["allactiveduels",{"_index":1235,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["allduels",{"_index":1236,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["allfinishedduels",{"_index":1237,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["allopponents",{"_index":1238,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["allusers",{"_index":1164,"title":{},"body":{"components/ModalNewDuelComponent.html":{},"components/UserStartpageComponent.html":{}}}],["already",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"components/UserStartpageComponent.html":{}}}],["als",{"_index":573,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["alternative",{"_index":1145,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["amount",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["amphitheatre",{"_index":692,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["anforderungen",{"_index":754,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["anfrage",{"_index":604,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["angabe",{"_index":596,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["angaben",{"_index":629,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["angebot",{"_index":638,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["angegebenen",{"_index":500,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["angular",{"_index":1353,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1335,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1337,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1338,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":72,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPrivacyComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/fire/auth",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["angular/fire/firestore",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{}}}],["angular/forms",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"components/AuthComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":239,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/HeaderComponent.html":{},"dependencies.html":{}}}],["angularfireauth",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["angularfiremodule",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebase",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestore",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{}}}],["angularfirestoremodule",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["anschließenden",{"_index":605,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["anschlussfragen",{"_index":633,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["anschrift",{"_index":581,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["ansprechend",{"_index":684,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["answer",{"_index":57,"title":{},"body":{"components/AnswersComponent.html":{},"components/DuelPlayComponent.html":{}}}],["answered",{"_index":29,"title":{},"body":{"components/AnswersComponent.html":{}}}],["answeredevent",{"_index":32,"title":{},"body":{"components/AnswersComponent.html":{}}}],["answers",{"_index":17,"title":{},"body":{"components/AnswersComponent.html":{},"components/DuelPlayComponent.html":{}}}],["answers'},{'name",{"_index":138,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["answers.component.css",{"_index":19,"title":{},"body":{"components/AnswersComponent.html":{}}}],["answers.component.html",{"_index":21,"title":{},"body":{"components/AnswersComponent.html":{}}}],["answerscomponent",{"_index":1,"title":{"components/AnswersComponent.html":{}},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["anzupassen",{"_index":749,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["apikey",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":16,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{},"index.html":{}}}],["app.component",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":139,"title":{"components/AppComponent.html":{}},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":187,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":194,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["around",{"_index":1091,"title":{},"body":{"components/FooterComponent.html":{}}}],["art",{"_index":519,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["artifacts",{"_index":1372,"title":{},"body":{"index.html":{}}}],["async",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["auch",{"_index":721,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["auf",{"_index":612,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["aufbewahrungsfristen",{"_index":660,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["aufgrund",{"_index":532,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["aufnehmen",{"_index":635,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["aufsichtsbehörde",{"_index":564,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["aufsichtsbehörden",{"_index":578,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["auftragsverarbeiter",{"_index":648,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["aus",{"_index":711,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["auskunft",{"_index":510,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["ausüben",{"_index":509,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["ausübung",{"_index":740,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["auth",{"_index":244,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["auth'},{'name",{"_index":142,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["auth.component.css",{"_index":255,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.html",{"_index":256,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.service",{"_index":287,"title":{},"body":{"components/AuthComponent.html":{},"guards/AuthGuard.html":{}}}],["auth/auth.component",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["auth/auth.guard",{"_index":241,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.service",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/HeaderComponent.html":{},"components/UserStartpageComponent.html":{}}}],["auth/email",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth/user",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth/wrong",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["authcomponent",{"_index":141,"title":{"components/AuthComponent.html":{}},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authdomain",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticated",{"_index":1101,"title":{},"body":{"components/HeaderComponent.html":{}}}],["authentication",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["authguard",{"_index":240,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authservice",{"_index":178,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/HeaderComponent.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{}}}],["authsubscription",{"_index":1102,"title":{},"body":{"components/HeaderComponent.html":{}}}],["autologin",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["autologout",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["autologout(expirationduration",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["automatically",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["available",{"_index":1400,"title":{},"body":{"modules.html":{}}}],["await",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["b",{"_index":567,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["back",{"_index":973,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{}}}],["background",{"_index":97,"title":{},"body":{"components/AnswersComponent.html":{},"components/DuelOverviewComponent.html":{},"components/FooterComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/UserStartpageComponent.html":{}}}],["beantwortung",{"_index":606,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["bearbeiten",{"_index":670,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["bearbeitung",{"_index":631,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["behalten",{"_index":747,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["behaviorsubject",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(null",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["behörde",{"_index":576,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["bei",{"_index":512,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["ber",{"_index":511,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["berechtigten",{"_index":615,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["bereich",{"_index":580,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["bereit",{"_index":1151,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["bereitstellung",{"_index":622,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["berichtigung",{"_index":521,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["berwiegen",{"_index":738,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["beschwerde",{"_index":563,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["besonderen",{"_index":713,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["bestimmung",{"_index":722,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["besuch",{"_index":764,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["betreffender",{"_index":716,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["betreiber",{"_index":1149,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["betroffenenrechte",{"_index":497,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["between",{"_index":278,"title":{},"body":{"components/AuthComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/HeaderComponent.html":{}}}],["bitte",{"_index":771,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["black",{"_index":1096,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["bodensee",{"_index":1133,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["boolean",{"_index":38,"title":{},"body":{"components/AnswersComponent.html":{},"guards/AuthGuard.html":{},"components/DuelPlayComponent.html":{}}}],["bootstrap",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":104,"title":{},"body":{"components/AnswersComponent.html":{},"components/AuthComponent.html":{},"components/DuelOverviewComponent.html":{},"components/QuestionComponent.html":{},"components/UserStartpageComponent.html":{}}}],["bottom",{"_index":89,"title":{},"body":{"components/AnswersComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{}}}],["browse",{"_index":1398,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["browserübergreifend",{"_index":681,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["build",{"_index":1371,"title":{},"body":{"index.html":{}}}],["bundeslands",{"_index":570,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["button",{"_index":985,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/HeaderComponent.html":{},"components/ModalNewDuelComponent.html":{}}}],["buttons",{"_index":328,"title":{},"body":{"components/AuthComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/HeaderComponent.html":{}}}],["ca",{"_index":696,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["calc(50",{"_index":102,"title":{},"body":{"components/AnswersComponent.html":{}}}],["calculatetimeleft",{"_index":1004,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["canactivate",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":334,"title":{},"body":{"guards/AuthGuard.html":{}}}],["capabilities",{"_index":1390,"title":{},"body":{"index.html":{}}}],["catch((error",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch((errormessage",{"_index":296,"title":{},"body":{"components/AuthComponent.html":{}}}],["catcherror",{"_index":284,"title":{},"body":{"components/AuthComponent.html":{}}}],["center",{"_index":92,"title":{},"body":{"components/AnswersComponent.html":{},"components/AuthComponent.html":{},"components/DuelOverviewComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/QuestionComponent.html":{},"components/UserStartpageComponent.html":{}}}],["challenge",{"_index":1205,"title":{},"body":{"components/StartpageComponent.html":{}}}],["change",{"_index":1365,"title":{},"body":{"index.html":{}}}],["changes",{"_index":805,"title":{},"body":{"injectables/DataService.html":{}}}],["check",{"_index":925,"title":{},"body":{"components/DuelOverviewComponent.html":{},"index.html":{}}}],["checkanswer",{"_index":26,"title":{},"body":{"components/AnswersComponent.html":{}}}],["checkanswer(id",{"_index":50,"title":{},"body":{"components/AnswersComponent.html":{}}}],["checkforroute",{"_index":910,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["checking",{"_index":268,"title":{},"body":{"components/AuthComponent.html":{}}}],["checks",{"_index":917,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/HeaderComponent.html":{}}}],["choice",{"_index":1384,"title":{},"body":{"index.html":{}}}],["choose",{"_index":1172,"title":{},"body":{"components/ModalNewDuelComponent.html":{}}}],["class",{"_index":74,"title":{"classes/User.html":{}},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPrivacyComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"classes/User.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":1216,"title":{},"body":{"classes/User.html":{}}}],["clearinterval(this.timeleftinterval",{"_index":1078,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["clears",{"_index":1027,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["cleartimeout(this.tokenexpirationtimer",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["cli",{"_index":1354,"title":{},"body":{"index.html":{}}}],["close",{"_index":1182,"title":{},"body":{"components/ModalNewDuelComponent.html":{}}}],["closemodal",{"_index":1163,"title":{},"body":{"components/ModalNewDuelComponent.html":{}}}],["closemodalevent",{"_index":1165,"title":{},"body":{"components/ModalNewDuelComponent.html":{}}}],["closes",{"_index":1171,"title":{},"body":{"components/ModalNewDuelComponent.html":{},"components/UserStartpageComponent.html":{}}}],["cluster_appmodule",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1367,"title":{},"body":{"index.html":{}}}],["color",{"_index":98,"title":{},"body":{"components/AnswersComponent.html":{},"components/DuelOverviewComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/UserStartpageComponent.html":{}}}],["column",{"_index":320,"title":{},"body":{"components/AuthComponent.html":{},"components/DuelOverviewComponent.html":{},"components/FooterComponent.html":{},"components/UserStartpageComponent.html":{}}}],["command",{"_index":1385,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":137,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{},"overview.html":{}}}],["console.log(\"duelssubcalled",{"_index":1272,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["console.log(\"usersubcalled",{"_index":1269,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["console.log('oninitcalled",{"_index":1267,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["console.log('right",{"_index":1076,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["console.log(data",{"_index":1068,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["console.log(dueldata.playeroneroundscoring",{"_index":883,"title":{},"body":{"injectables/DataService.html":{}}}],["console.log(duels",{"_index":854,"title":{},"body":{"injectables/DataService.html":{}}}],["console.log(res",{"_index":1291,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["console.log(resdata",{"_index":295,"title":{},"body":{"components/AuthComponent.html":{}}}],["console.log(this.allduels",{"_index":1287,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["console.log(this.allopponents",{"_index":1288,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["console.log(this.allusers",{"_index":1297,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["console.log(this.timeleft",{"_index":1072,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["console.log(user",{"_index":350,"title":{},"body":{"guards/AuthGuard.html":{}}}],["console.log(userdata",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(usertoken",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":242,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DuelPlayComponent.html":{},"components/UserStartpageComponent.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPrivacyComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"classes/User.html":{},"components/UserStartpageComponent.html":{}}}],["constructor(auth",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(authservice",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/DuelPlayComponent.html":{},"components/HeaderComponent.html":{},"components/UserStartpageComponent.html":{}}}],["constructor(firestore",{"_index":799,"title":{},"body":{"injectables/DataService.html":{}}}],["constructor(private",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/HeaderComponent.html":{},"components/UserStartpageComponent.html":{}}}],["constructor(route",{"_index":913,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["constructor(username",{"_index":1221,"title":{},"body":{"classes/User.html":{}}}],["container",{"_index":82,"title":{},"body":{"components/AnswersComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["container:hover",{"_index":115,"title":{},"body":{"components/AnswersComponent.html":{}}}],["containing",{"_index":275,"title":{},"body":{"components/AuthComponent.html":{}}}],["content",{"_index":94,"title":{},"body":{"components/AnswersComponent.html":{},"components/AuthComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/QuestionComponent.html":{},"components/UserStartpageComponent.html":{}}}],["context",{"_index":1330,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controls",{"_index":1109,"title":{},"body":{"components/HeaderComponent.html":{}}}],["coverage",{"_index":1305,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1178,"title":{},"body":{"components/ModalNewDuelComponent.html":{}}}],["created",{"_index":1138,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["creates",{"_index":840,"title":{},"body":{"injectables/DataService.html":{},"components/UserStartpageComponent.html":{}}}],["credentials",{"_index":323,"title":{},"body":{"components/AuthComponent.html":{}}}],["cursor",{"_index":107,"title":{},"body":{"components/AnswersComponent.html":{}}}],["damit",{"_index":750,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["dann",{"_index":765,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["darstellung",{"_index":700,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["darzustellen",{"_index":685,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["das",{"_index":610,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["data",{"_index":144,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DataPrivacyComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["data.length",{"_index":1062,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["data[this.questionid].answers",{"_index":1066,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["data[this.questionid].question",{"_index":1064,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["data[this.questionid].rightanswer",{"_index":1067,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["database",{"_index":1021,"title":{},"body":{"components/DuelPlayComponent.html":{},"components/UserStartpageComponent.html":{}}}],["dataprivacycomponent",{"_index":143,"title":{"components/DataPrivacyComponent.html":{}},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dataservice",{"_index":788,"title":{"injectables/DataService.html":{}},"body":{"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{}}}],["date",{"_index":1224,"title":{},"body":{"classes/User.html":{}}}],["date().gettime",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["date(new",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["date(userdata._tokenexpirationdate).gettime",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["daten",{"_index":515,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["datenschutz",{"_index":769,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/FooterComponent.html":{}}}],["datenschutzbeauftragte",{"_index":782,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["datenschutzbeauftragten",{"_index":503,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["datenschutzbestimmungen",{"_index":746,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["datenschutzerklärung",{"_index":483,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["datenschutzgesetze",{"_index":488,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["datenschutzgrundverordnung",{"_index":491,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["datenverarbeitung",{"_index":529,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["datenübertragbarkeit",{"_index":544,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["declarations",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["decoration",{"_index":1094,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["default",{"_index":39,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/HeaderComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/UserStartpageComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":34,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPrivacyComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"classes/User.html":{},"components/UserStartpageComponent.html":{}}}],["dem",{"_index":1156,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["den",{"_index":499,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["denn",{"_index":731,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["dependencies",{"_index":189,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["der",{"_index":487,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["deren",{"_index":517,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["derselben",{"_index":607,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["des",{"_index":569,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["description",{"_index":63,"title":{},"body":{"components/AnswersComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/DuelPlayComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/UserStartpageComponent.html":{}}}],["dev",{"_index":1361,"title":{},"body":{"index.html":{}}}],["development",{"_index":1356,"title":{},"body":{"index.html":{}}}],["die",{"_index":542,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["dient",{"_index":602,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["dies",{"_index":719,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["diese",{"_index":556,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["dieser",{"_index":663,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["direction",{"_index":319,"title":{},"body":{"components/AuthComponent.html":{},"components/DuelOverviewComponent.html":{},"components/FooterComponent.html":{},"components/UserStartpageComponent.html":{}}}],["directive",{"_index":135,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["directives",{"_index":168,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1370,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1375,"title":{},"body":{"index.html":{}}}],["direkt",{"_index":772,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["dismissmodal",{"_index":1244,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["display",{"_index":83,"title":{},"body":{"components/AnswersComponent.html":{},"components/AuthComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/QuestionComponent.html":{},"components/UserStartpageComponent.html":{}}}],["displayed",{"_index":919,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["displayname",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["dist",{"_index":1374,"title":{},"body":{"index.html":{}}}],["divstyle",{"_index":997,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["docres.id",{"_index":851,"title":{},"body":{"injectables/DataService.html":{}}}],["documentation",{"_index":1306,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["dsgvo",{"_index":492,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["duel",{"_index":147,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["duel'},{'name",{"_index":160,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["duel.access[0",{"_index":969,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{}}}],["duel.component",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["duel.component.css",{"_index":1161,"title":{},"body":{"components/ModalNewDuelComponent.html":{}}}],["duel.component.html",{"_index":1162,"title":{},"body":{"components/ModalNewDuelComponent.html":{}}}],["duel.component.ts",{"_index":1160,"title":{},"body":{"components/ModalNewDuelComponent.html":{},"coverage.html":{}}}],["duel.component.ts:10",{"_index":1168,"title":{},"body":{"components/ModalNewDuelComponent.html":{}}}],["duel.component.ts:12",{"_index":1169,"title":{},"body":{"components/ModalNewDuelComponent.html":{}}}],["duel.component.ts:13",{"_index":1167,"title":{},"body":{"components/ModalNewDuelComponent.html":{}}}],["duel.component.ts:17",{"_index":1174,"title":{},"body":{"components/ModalNewDuelComponent.html":{}}}],["duel.component.ts:26",{"_index":1176,"title":{},"body":{"components/ModalNewDuelComponent.html":{}}}],["duel.component.ts:33",{"_index":1170,"title":{},"body":{"components/ModalNewDuelComponent.html":{}}}],["duel.data",{"_index":879,"title":{},"body":{"injectables/DataService.html":{}}}],["duel.finished",{"_index":1051,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["duel.opponent",{"_index":1283,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["duel.playerone",{"_index":956,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["duel.playeroneroundscoring",{"_index":964,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["duel.playeroneroundsplayed",{"_index":972,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{}}}],["duel.playeronescore",{"_index":960,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["duel.playerontheclock",{"_index":971,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["duel.playertwo",{"_index":958,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["duel.playertworoundscoring",{"_index":966,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["duel.playertworoundsplayed",{"_index":1054,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["duel.playertwoscore",{"_index":962,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["duel.winners",{"_index":968,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["duel/:id",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["duel/:id/play",{"_index":248,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["duel/modal",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/ModalNewDuelComponent.html":{},"coverage.html":{}}}],["dueldata",{"_index":829,"title":{},"body":{"injectables/DataService.html":{}}}],["dueldata.access[1",{"_index":890,"title":{},"body":{"injectables/DataService.html":{}}}],["dueldata.finished",{"_index":888,"title":{},"body":{"injectables/DataService.html":{}}}],["dueldata.playerone",{"_index":893,"title":{},"body":{"injectables/DataService.html":{}}}],["dueldata.playeroneroundscoring[round",{"_index":884,"title":{},"body":{"injectables/DataService.html":{}}}],["dueldata.playeroneroundsplayed",{"_index":885,"title":{},"body":{"injectables/DataService.html":{}}}],["dueldata.playeronescore",{"_index":886,"title":{},"body":{"injectables/DataService.html":{}}}],["dueldata.playerontheclock",{"_index":880,"title":{},"body":{"injectables/DataService.html":{}}}],["dueldata.playertworoundsplayed",{"_index":887,"title":{},"body":{"injectables/DataService.html":{}}}],["dueldata.playertwoscore",{"_index":891,"title":{},"body":{"injectables/DataService.html":{}}}],["dueldata.winners",{"_index":892,"title":{},"body":{"injectables/DataService.html":{}}}],["duelid",{"_index":807,"title":{},"body":{"injectables/DataService.html":{}}}],["dueloverviewcomponent",{"_index":146,"title":{"components/DuelOverviewComponent.html":{}},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["duelplaycomponent",{"_index":149,"title":{"components/DuelPlayComponent.html":{}},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["duels",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/HeaderComponent.html":{},"components/UserStartpageComponent.html":{}}}],["duels.duels.push(newduelid",{"_index":853,"title":{},"body":{"injectables/DataService.html":{}}}],["duelsreceived",{"_index":1239,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["duelssub",{"_index":1240,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["durch",{"_index":621,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["durchführung",{"_index":642,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["dynamic",{"_index":1340,"title":{},"body":{"dependencies.html":{}}}],["dürfen",{"_index":538,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["e",{"_index":308,"title":{},"body":{"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["e.opponent",{"_index":1282,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["e2e",{"_index":1382,"title":{},"body":{"index.html":{}}}],["ease",{"_index":112,"title":{},"body":{"components/AnswersComponent.html":{}}}],["ein",{"_index":637,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["eine",{"_index":553,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["einem",{"_index":655,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["einen",{"_index":548,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["einer",{"_index":562,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["eines",{"_index":614,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["einführung",{"_index":760,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["eingegebenen",{"_index":589,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["eingewilligt",{"_index":545,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["einschränkung",{"_index":528,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["einwilligung",{"_index":554,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["einzelfallbezogenes",{"_index":709,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["einzulegen",{"_index":718,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["element",{"_index":134,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["email",{"_index":315,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"classes/User.html":{}}}],["empfänger",{"_index":645,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["end",{"_index":1083,"title":{},"body":{"components/DuelPlayComponent.html":{},"index.html":{}}}],["entry",{"_index":306,"title":{},"body":{"components/AuthComponent.html":{}}}],["entspricht",{"_index":755,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["environment",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["erfolgt",{"_index":611,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["erforderlich",{"_index":601,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["erfragen",{"_index":640,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["ergeben",{"_index":715,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["erklärt",{"_index":1148,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["ermöglichen",{"_index":627,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["erneuten",{"_index":763,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["error",{"_index":257,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["error.code",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["errormessage",{"_index":297,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["erstellt",{"_index":779,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["erteilt",{"_index":555,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["es",{"_index":654,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["eu",{"_index":490,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["evaluates",{"_index":1034,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["evaluation",{"_index":1031,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["eventemitter",{"_index":48,"title":{},"body":{"components/AnswersComponent.html":{},"components/ModalNewDuelComponent.html":{}}}],["example",{"_index":1209,"title":{},"body":{"components/StartpageComponent.html":{}}}],["execute",{"_index":1380,"title":{},"body":{"index.html":{}}}],["exist",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["experten",{"_index":780,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["expirationdate",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["expirationduration",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":73,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPrivacyComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"classes/User.html":{},"components/UserStartpageComponent.html":{}}}],["exports",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["externe",{"_index":781,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["f",{"_index":620,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["false",{"_index":41,"title":{},"body":{"components/AnswersComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/HeaderComponent.html":{},"components/UserStartpageComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPrivacyComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"classes/User.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{}}}],["files",{"_index":1366,"title":{},"body":{"index.html":{}}}],["finden",{"_index":582,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["finished",{"_index":858,"title":{},"body":{"injectables/DataService.html":{},"components/DuelPlayComponent.html":{},"components/UserStartpageComponent.html":{}}}],["firebase",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["firebase.firestore.fieldvalue.arrayunion",{"_index":857,"title":{},"body":{"injectables/DataService.html":{}}}],["firebase.firestore.fieldvalue.arrayunion(uid",{"_index":861,"title":{},"body":{"injectables/DataService.html":{}}}],["firebase.firestore.fieldvalue.arrayunion(userid",{"_index":862,"title":{},"body":{"injectables/DataService.html":{}}}],["firebase/app",{"_index":844,"title":{},"body":{"injectables/DataService.html":{}}}],["firestore",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{}}}],["first",{"_index":1387,"title":{},"body":{"index.html":{}}}],["fixed",{"_index":1184,"title":{},"body":{"components/ModalNewDuelComponent.html":{}}}],["flex",{"_index":84,"title":{},"body":{"components/AnswersComponent.html":{},"components/AuthComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/QuestionComponent.html":{},"components/UserStartpageComponent.html":{}}}],["folgende",{"_index":507,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["font",{"_index":118,"title":{},"body":{"components/AnswersComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["fonts",{"_index":689,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["footer",{"_index":1085,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":152,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["footer.component.css",{"_index":1086,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":1087,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["footercomponent",{"_index":151,"title":{"components/FooterComponent.html":{}},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":274,"title":{},"body":{"components/AuthComponent.html":{}}}],["formsmodule",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["forwards",{"_index":55,"title":{},"body":{"components/AnswersComponent.html":{}}}],["found",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["fragen",{"_index":767,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["freiheiten",{"_index":737,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["freiwillig",{"_index":667,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["friends",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/StartpageComponent.html":{},"miscellaneous/variables.html":{}}}],["fristen",{"_index":664,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["further",{"_index":1391,"title":{},"body":{"index.html":{}}}],["für",{"_index":558,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["gegen",{"_index":541,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["geltendmachung",{"_index":739,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["gelöscht",{"_index":653,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["gem",{"_index":1128,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["gemachten",{"_index":628,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["generate",{"_index":1369,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1352,"title":{},"body":{"index.html":{}}}],["generator",{"_index":1158,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["gesetz",{"_index":1144,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["gesetzlichen",{"_index":659,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["gesetzlicher",{"_index":533,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["gespeichert",{"_index":594,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["gespeicherten",{"_index":514,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["gestütztes",{"_index":723,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["getduel",{"_index":790,"title":{},"body":{"injectables/DataService.html":{}}}],["getduel(duelid",{"_index":801,"title":{},"body":{"injectables/DataService.html":{}}}],["getdueldata",{"_index":1005,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["getquestion",{"_index":791,"title":{},"body":{"injectables/DataService.html":{}}}],["gets",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/DuelPlayComponent.html":{},"components/UserStartpageComponent.html":{}}}],["getting",{"_index":1349,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":1229,"title":{},"body":{"classes/User.html":{}}}],["ggf",{"_index":647,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["gilt",{"_index":720,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["given",{"_index":56,"title":{},"body":{"components/AnswersComponent.html":{}}}],["go",{"_index":1394,"title":{},"body":{"index.html":{}}}],["google",{"_index":677,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["gradient(to",{"_index":1197,"title":{},"body":{"components/QuestionComponent.html":{}}}],["grafisch",{"_index":683,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["graph",{"_index":1399,"title":{},"body":{"modules.html":{}}}],["grund",{"_index":673,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["grundlage",{"_index":613,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["gründe",{"_index":734,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["gründen",{"_index":712,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["guard",{"_index":330,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":331,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guest",{"_index":322,"title":{},"body":{"components/AuthComponent.html":{}}}],["guests",{"_index":307,"title":{},"body":{"components/AuthComponent.html":{}}}],["h1",{"_index":787,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["haben",{"_index":546,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["handleauthentication",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["handleauthentication(username",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["handles",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["hauptstraße12345",{"_index":1132,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["header",{"_index":1098,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":154,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["header.component.css",{"_index":1099,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":1100,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["headercomponent",{"_index":153,"title":{"components/HeaderComponent.html":{}},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headline",{"_index":324,"title":{},"body":{"components/AuthComponent.html":{}}}],["height",{"_index":317,"title":{},"body":{"components/AuthComponent.html":{},"components/DuelOverviewComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["help",{"_index":1392,"title":{},"body":{"index.html":{}}}],["hgb",{"_index":661,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["hierfür",{"_index":595,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["highlights",{"_index":52,"title":{},"body":{"components/AnswersComponent.html":{}}}],["hinweise",{"_index":1136,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["home",{"_index":1120,"title":{},"body":{"components/HeaderComponent.html":{}}}],["html",{"_index":133,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["http://localhost:4200",{"_index":1363,"title":{},"body":{"index.html":{}}}],["https://developers.google.com/fonts/faq",{"_index":704,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["https://www.bfdi.bund.de/de/infothek/anschriften_links/anschriften_links",{"_index":583,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["https://www.google.com/policies/privacy",{"_index":705,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["i+1",{"_index":980,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["id",{"_index":58,"title":{},"body":{"components/AnswersComponent.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/DuelPlayComponent.html":{},"components/ModalNewDuelComponent.html":{},"classes/User.html":{},"components/UserStartpageComponent.html":{}}}],["identifier",{"_index":1307,"title":{},"body":{"coverage.html":{}}}],["ihnen",{"_index":588,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["ihr",{"_index":707,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["ihre",{"_index":496,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["ihren",{"_index":671,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["ihrer",{"_index":526,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["ihres",{"_index":571,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["im",{"_index":485,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["image",{"_index":1195,"title":{},"body":{"components/QuestionComponent.html":{}}}],["immediately",{"_index":806,"title":{},"body":{"injectables/DataService.html":{}}}],["implements",{"_index":12,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{},"index.html":{}}}],["import",{"_index":69,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPrivacyComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["imports",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["impressum",{"_index":1090,"title":{},"body":{"components/FooterComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["impressums",{"_index":1157,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPrivacyComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"classes/User.html":{},"components/UserStartpageComponent.html":{},"miscellaneous/variables.html":{}}}],["individuellen",{"_index":592,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPrivacyComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"classes/User.html":{},"components/UserStartpageComponent.html":{}}}],["infomessage",{"_index":1241,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["information",{"_index":706,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["informationen",{"_index":703,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["inhalte",{"_index":680,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["initiatequestion",{"_index":1006,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["initiates",{"_index":924,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/UserStartpageComponent.html":{}}}],["injectable",{"_index":343,"title":{"injectables/AuthService.html":{},"injectables/DataService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"coverage.html":{}}}],["injectables",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"overview.html":{}}}],["input",{"_index":70,"title":{},"body":{"components/AnswersComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{}}}],["inputs",{"_index":28,"title":{},"body":{"components/AnswersComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{}}}],["insbesondere",{"_index":489,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["interessen",{"_index":736,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["interessenabwägung",{"_index":717,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["interesses",{"_index":616,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["interval",{"_index":1013,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["isauth",{"_index":349,"title":{},"body":{"guards/AuthGuard.html":{}}}],["isduelinfoset",{"_index":899,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["isplayerontheclock",{"_index":900,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["ist",{"_index":493,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["it's",{"_index":928,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["items",{"_index":321,"title":{},"body":{"components/AuthComponent.html":{},"components/DuelOverviewComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/QuestionComponent.html":{},"components/UserStartpageComponent.html":{}}}],["jederzeit",{"_index":506,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["jedoch",{"_index":668,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["jf",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json.parse(localstorage.getitem('userdata",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(userdata",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["justify",{"_index":93,"title":{},"body":{"components/AnswersComponent.html":{},"components/AuthComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/QuestionComponent.html":{},"components/UserStartpageComponent.html":{}}}],["karma",{"_index":1381,"title":{},"body":{"index.html":{}}}],["kommt",{"_index":657,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["kommunikation",{"_index":593,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["kontakt",{"_index":634,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["kontaktaufnahme",{"_index":626,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["kontaktdaten",{"_index":501,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["kontaktformular",{"_index":585,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["kontaktformulars",{"_index":623,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["korrekt",{"_index":682,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["können",{"_index":504,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["left",{"_index":1185,"title":{},"body":{"components/ModalNewDuelComponent.html":{}}}],["legal",{"_index":156,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["legalnoticecomponent",{"_index":155,"title":{"components/LegalNoticeComponent.html":{}},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["legen",{"_index":727,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["legend",{"_index":132,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["leistungen",{"_index":757,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["limit",{"_index":1014,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["linear",{"_index":1196,"title":{},"body":{"components/QuestionComponent.html":{}}}],["link",{"_index":1121,"title":{},"body":{"components/HeaderComponent.html":{}}}],["links",{"_index":1093,"title":{},"body":{"components/FooterComponent.html":{}}}],["liste",{"_index":577,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["listen",{"_index":812,"title":{},"body":{"injectables/DataService.html":{}}}],["listeners",{"_index":59,"title":{},"body":{"components/AnswersComponent.html":{}}}],["listens",{"_index":803,"title":{},"body":{"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{}}}],["listentoduels",{"_index":792,"title":{},"body":{"injectables/DataService.html":{}}}],["listentoduels(userid",{"_index":810,"title":{},"body":{"injectables/DataService.html":{}}}],["lit",{"_index":619,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["literal",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["llc",{"_index":690,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["loading",{"_index":258,"title":{},"body":{"components/AuthComponent.html":{},"components/DuelOverviewComponent.html":{},"components/UserStartpageComponent.html":{}}}],["local",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('userdata",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('userdata",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["log",{"_index":303,"title":{},"body":{"components/AuthComponent.html":{},"components/HeaderComponent.html":{}}}],["logged",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["login",{"_index":271,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["login(email",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["login/signup/logout",{"_index":1110,"title":{},"body":{"components/HeaderComponent.html":{}}}],["loginmode",{"_index":259,"title":{},"body":{"components/AuthComponent.html":{}}}],["logo",{"_index":1139,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["logomakr.com",{"_index":1140,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["logout",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["logs",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["löschen",{"_index":537,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["löschung",{"_index":525,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["mail",{"_index":309,"title":{},"body":{"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["main",{"_index":987,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/UserStartpageComponent.html":{}}}],["map",{"_index":344,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{}}}],["map((duel",{"_index":878,"title":{},"body":{"injectables/DataService.html":{}}}],["map((res",{"_index":845,"title":{},"body":{"injectables/DataService.html":{}}}],["map((resdata",{"_index":876,"title":{},"body":{"injectables/DataService.html":{}}}],["map((user",{"_index":348,"title":{},"body":{"guards/AuthGuard.html":{}}}],["map((userlist",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["margin",{"_index":86,"title":{},"body":{"components/AnswersComponent.html":{},"components/QuestionComponent.html":{},"components/UserStartpageComponent.html":{}}}],["matching",{"_index":171,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPrivacyComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"classes/User.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.random",{"_index":1061,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["max",{"_index":127,"title":{},"body":{"components/AnswersComponent.html":{},"components/AuthComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["maßnahmen",{"_index":644,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["media",{"_index":126,"title":{},"body":{"components/AnswersComponent.html":{},"components/StartpageComponent.html":{}}}],["mehr",{"_index":728,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["message",{"_index":1300,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["messagingsenderid",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["methods",{"_index":25,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPrivacyComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["milliseconds",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["min",{"_index":983,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["miscellaneous",{"_index":1403,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":550,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["mithilfe",{"_index":776,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["mitteilen",{"_index":674,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["modal",{"_index":159,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["modalnewduelcomponent",{"_index":158,"title":{"components/ModalNewDuelComponent.html":{}},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mode",{"_index":279,"title":{},"body":{"components/AuthComponent.html":{}}}],["module",{"_index":186,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{}}],["modules",{"_index":188,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["monate",{"_index":651,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["more",{"_index":1393,"title":{},"body":{"index.html":{}}}],["mountain",{"_index":694,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["msg",{"_index":991,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["myform",{"_index":273,"title":{},"body":{"components/AuthComponent.html":{}}}],["myform.reset",{"_index":302,"title":{},"body":{"components/AuthComponent.html":{}}}],["myform.valid",{"_index":289,"title":{},"body":{"components/AuthComponent.html":{}}}],["myform.value.email",{"_index":300,"title":{},"body":{"components/AuthComponent.html":{}}}],["myform.value.password).pipe(take(1)).subscribe((resdata",{"_index":301,"title":{},"body":{"components/AuthComponent.html":{}}}],["myform.value.password).then((resdata",{"_index":294,"title":{},"body":{"components/AuthComponent.html":{}}}],["mänder",{"_index":495,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["möchten",{"_index":624,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["mögliche",{"_index":632,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["nach",{"_index":652,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["nachfolgend",{"_index":699,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["nachweisen",{"_index":735,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["name",{"_index":61,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPrivacyComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"classes/User.html":{},"components/UserStartpageComponent.html":{},"index.html":{}}}],["namen",{"_index":672,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["namens",{"_index":600,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["navigate",{"_index":1362,"title":{},"body":{"index.html":{}}}],["nderung",{"_index":744,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["nderungen",{"_index":756,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["need",{"_index":1386,"title":{},"body":{"index.html":{}}}],["needed",{"_index":1251,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["neue",{"_index":766,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["neuer",{"_index":761,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["new",{"_index":75,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DataPrivacyComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"classes/User.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{},"index.html":{}}}],["newduelid",{"_index":847,"title":{},"body":{"injectables/DataService.html":{}}}],["newopponent",{"_index":1166,"title":{},"body":{"components/ModalNewDuelComponent.html":{}}}],["next",{"_index":927,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{}}}],["nextquestion",{"_index":1007,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["ng",{"_index":1359,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":266,"title":{},"body":{"components/AuthComponent.html":{}}}],["ngmodule",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":911,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/HeaderComponent.html":{},"components/UserStartpageComponent.html":{}}}],["ngoninit",{"_index":27,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["nicht",{"_index":536,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["nichtöffentlichen",{"_index":579,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["noch",{"_index":535,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["node.html",{"_index":584,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["none",{"_index":1095,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["notice",{"_index":247,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["notice'},{'name",{"_index":157,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["notice.component",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["notice.component.css",{"_index":1124,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["notice.component.html",{"_index":1125,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["notice.component.ts",{"_index":1123,"title":{},"body":{"components/LegalNoticeComponent.html":{},"coverage.html":{}}}],["notice.component.ts:12",{"_index":1127,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["notice.component.ts:8",{"_index":1126,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["notice/legal",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LegalNoticeComponent.html":{},"coverage.html":{}}}],["now",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["nr",{"_index":726,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["null",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["number",{"_index":45,"title":{},"body":{"components/AnswersComponent.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{}}}],["nur",{"_index":669,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["object",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.prototype.hasownproperty.call(res",{"_index":1293,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["object.prototype.hasownproperty.call(users",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable",{"_index":340,"title":{},"body":{"guards/AuthGuard.html":{}}}],["occured",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["oder",{"_index":547,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["oliver",{"_index":494,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["oliver.maender@gmail.com",{"_index":1134,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["onanswered",{"_index":1008,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["onanswered(id",{"_index":1029,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["onauthbutton",{"_index":1103,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ondestroy",{"_index":895,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/HeaderComponent.html":{},"components/UserStartpageComponent.html":{}}}],["one's",{"_index":823,"title":{},"body":{"injectables/DataService.html":{}}}],["oninit",{"_index":13,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["onsubmit",{"_index":260,"title":{},"body":{"components/AuthComponent.html":{}}}],["onsubmit(myform",{"_index":265,"title":{},"body":{"components/AuthComponent.html":{}}}],["onswitchmode",{"_index":261,"title":{},"body":{"components/AuthComponent.html":{}}}],["opponent",{"_index":818,"title":{},"body":{"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/ModalNewDuelComponent.html":{}}}],["opponent's",{"_index":843,"title":{},"body":{"injectables/DataService.html":{},"components/ModalNewDuelComponent.html":{},"components/UserStartpageComponent.html":{}}}],["opponentroundsscoring",{"_index":901,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["opponentroundsscoring[i",{"_index":981,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["opponents",{"_index":820,"title":{},"body":{"injectables/DataService.html":{},"components/UserStartpageComponent.html":{}}}],["opponentscoring",{"_index":902,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["opponentusername",{"_index":838,"title":{},"body":{"injectables/DataService.html":{},"components/ModalNewDuelComponent.html":{},"components/UserStartpageComponent.html":{}}}],["optional",{"_index":62,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPrivacyComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/HeaderComponent.html":{},"components/ModalNewDuelComponent.html":{},"classes/User.html":{},"components/UserStartpageComponent.html":{}}}],["organisation",{"_index":774,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["out",{"_index":113,"title":{},"body":{"components/AnswersComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":71,"title":{},"body":{"components/AnswersComponent.html":{},"components/ModalNewDuelComponent.html":{}}}],["outputs",{"_index":31,"title":{},"body":{"components/AnswersComponent.html":{},"components/ModalNewDuelComponent.html":{}}}],["overview",{"_index":896,"title":{"overview.html":{}},"body":{"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/UserStartpageComponent.html":{},"index.html":{},"overview.html":{}}}],["overview'},{'name",{"_index":148,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["overview.component",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["overview.component.css",{"_index":897,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["overview.component.html",{"_index":898,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["overview.component.ts",{"_index":894,"title":{},"body":{"components/DuelOverviewComponent.html":{},"coverage.html":{}}}],["overview.component.ts:104",{"_index":920,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["overview.component.ts:15",{"_index":939,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["overview.component.ts:17",{"_index":940,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["overview.component.ts:18",{"_index":942,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["overview.component.ts:19",{"_index":934,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["overview.component.ts:20",{"_index":932,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["overview.component.ts:21",{"_index":941,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["overview.component.ts:22",{"_index":933,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["overview.component.ts:24",{"_index":935,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["overview.component.ts:25",{"_index":936,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["overview.component.ts:26",{"_index":931,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["overview.component.ts:28",{"_index":930,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["overview.component.ts:30",{"_index":937,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["overview.component.ts:32",{"_index":943,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["overview.component.ts:33",{"_index":915,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["overview.component.ts:40",{"_index":923,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["overview.component.ts:51",{"_index":916,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["overview.component.ts:92",{"_index":926,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["overview/duel",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DuelOverviewComponent.html":{},"coverage.html":{}}}],["p",{"_index":1301,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["package",{"_index":1334,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":95,"title":{},"body":{"components/AnswersComponent.html":{},"components/DuelOverviewComponent.html":{},"components/QuestionComponent.html":{},"components/UserStartpageComponent.html":{}}}],["page",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"components/DuelPlayComponent.html":{},"index.html":{}}}],["param",{"_index":76,"title":{},"body":{"components/AnswersComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/DuelPlayComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/UserStartpageComponent.html":{}}}],["parameters",{"_index":60,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/HeaderComponent.html":{},"components/ModalNewDuelComponent.html":{},"classes/User.html":{},"components/UserStartpageComponent.html":{}}}],["parkway",{"_index":693,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["password",{"_index":312,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["password).then((resdata",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["password).then(async",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["path",{"_index":243,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pb4u3k0jqq",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["person",{"_index":773,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["personenbezogenen",{"_index":666,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["personenbezogener",{"_index":523,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["pflichten",{"_index":534,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["platform",{"_index":1383,"title":{},"body":{"index.html":{}}}],["play",{"_index":982,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/UserStartpageComponent.html":{}}}],["play'},{'name",{"_index":150,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["play.component",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["play.component.css",{"_index":995,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["play.component.html",{"_index":996,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["play.component.ts",{"_index":994,"title":{},"body":{"components/DuelPlayComponent.html":{},"coverage.html":{}}}],["play.component.ts:103",{"_index":1030,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["play.component.ts:112",{"_index":1033,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["play.component.ts:125",{"_index":1024,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["play.component.ts:140",{"_index":1026,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["play.component.ts:15",{"_index":1039,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["play.component.ts:16",{"_index":1036,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["play.component.ts:17",{"_index":1041,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["play.component.ts:18",{"_index":1040,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["play.component.ts:19",{"_index":1044,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["play.component.ts:20",{"_index":1046,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["play.component.ts:22",{"_index":1045,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["play.component.ts:24",{"_index":1037,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["play.component.ts:26",{"_index":1038,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["play.component.ts:27",{"_index":1042,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["play.component.ts:28",{"_index":1043,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["play.component.ts:29",{"_index":1010,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["play.component.ts:36",{"_index":1028,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["play.component.ts:43",{"_index":1017,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["play.component.ts:71",{"_index":1019,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["play.component.ts:87",{"_index":1011,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["play/answers/answers.component",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["play/answers/answers.component.ts",{"_index":11,"title":{},"body":{"components/AnswersComponent.html":{},"coverage.html":{}}}],["play/answers/answers.component.ts:10",{"_index":49,"title":{},"body":{"components/AnswersComponent.html":{}}}],["play/answers/answers.component.ts:12",{"_index":44,"title":{},"body":{"components/AnswersComponent.html":{}}}],["play/answers/answers.component.ts:13",{"_index":47,"title":{},"body":{"components/AnswersComponent.html":{}}}],["play/answers/answers.component.ts:14",{"_index":42,"title":{},"body":{"components/AnswersComponent.html":{}}}],["play/answers/answers.component.ts:15",{"_index":35,"title":{},"body":{"components/AnswersComponent.html":{}}}],["play/answers/answers.component.ts:19",{"_index":68,"title":{},"body":{"components/AnswersComponent.html":{}}}],["play/answers/answers.component.ts:27",{"_index":51,"title":{},"body":{"components/AnswersComponent.html":{}}}],["play/duel",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DuelPlayComponent.html":{},"coverage.html":{}}}],["play/question/question.component",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["play/question/question.component.ts",{"_index":1189,"title":{},"body":{"components/QuestionComponent.html":{},"coverage.html":{}}}],["play/question/question.component.ts:10",{"_index":1192,"title":{},"body":{"components/QuestionComponent.html":{}}}],["play/question/question.component.ts:14",{"_index":1193,"title":{},"body":{"components/QuestionComponent.html":{}}}],["played",{"_index":830,"title":{},"body":{"injectables/DataService.html":{}}}],["player",{"_index":822,"title":{},"body":{"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/UserStartpageComponent.html":{}}}],["playerid",{"_index":903,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["playerone",{"_index":864,"title":{},"body":{"injectables/DataService.html":{}}}],["playeroneroundscoring",{"_index":869,"title":{},"body":{"injectables/DataService.html":{}}}],["playeroneroundsplayed",{"_index":868,"title":{},"body":{"injectables/DataService.html":{}}}],["playeronescore",{"_index":866,"title":{},"body":{"injectables/DataService.html":{}}}],["playeroneuid",{"_index":821,"title":{},"body":{"injectables/DataService.html":{}}}],["playerontheclock",{"_index":872,"title":{},"body":{"injectables/DataService.html":{}}}],["playertwo",{"_index":865,"title":{},"body":{"injectables/DataService.html":{}}}],["playertworoundscoring",{"_index":871,"title":{},"body":{"injectables/DataService.html":{}}}],["playertworoundsplayed",{"_index":870,"title":{},"body":{"injectables/DataService.html":{}}}],["playertwoscore",{"_index":867,"title":{},"body":{"injectables/DataService.html":{}}}],["playertwouid",{"_index":815,"title":{},"body":{"injectables/DataService.html":{}}}],["playerwinners",{"_index":904,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["playerwinners[0",{"_index":975,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["playerwinners[1",{"_index":978,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["playround",{"_index":912,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["pointer",{"_index":108,"title":{},"body":{"components/AnswersComponent.html":{}}}],["position",{"_index":1183,"title":{},"body":{"components/ModalNewDuelComponent.html":{},"components/StartpageComponent.html":{}}}],["possible",{"_index":1179,"title":{},"body":{"components/ModalNewDuelComponent.html":{}}}],["postanschrift",{"_index":1131,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["pre",{"_index":1299,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["prepares",{"_index":918,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["privacy",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DataPrivacyComponent.html":{},"components/FooterComponent.html":{}}}],["privacy'},{'name",{"_index":145,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["privacy.component",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["privacy.component.css",{"_index":479,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["privacy.component.html",{"_index":480,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["privacy.component.ts",{"_index":478,"title":{},"body":{"components/DataPrivacyComponent.html":{},"coverage.html":{}}}],["privacy.component.ts:12",{"_index":482,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["privacy.component.ts:8",{"_index":481,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["privacy/data",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DataPrivacyComponent.html":{},"coverage.html":{}}}],["private",{"_index":288,"title":{},"body":{"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/HeaderComponent.html":{},"classes/User.html":{},"components/UserStartpageComponent.html":{}}}],["production",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profiling",{"_index":724,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["project",{"_index":1351,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":341,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":23,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/HeaderComponent.html":{},"classes/User.html":{},"components/UserStartpageComponent.html":{}}}],["providedin",{"_index":345,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{}}}],["providers",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":1218,"title":{},"body":{"classes/User.html":{}}}],["question",{"_index":809,"title":{},"body":{"injectables/DataService.html":{},"components/DuelPlayComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{}}}],["question'},{'name",{"_index":162,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["question.component.css",{"_index":1190,"title":{},"body":{"components/QuestionComponent.html":{}}}],["question.component.html",{"_index":1191,"title":{},"body":{"components/QuestionComponent.html":{}}}],["questionanswered",{"_index":1009,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["questionanswered(id",{"_index":1032,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["questioncomponent",{"_index":161,"title":{"components/QuestionComponent.html":{}},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["questionid",{"_index":998,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["questionsinround",{"_index":999,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["quiz",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/StartpageComponent.html":{},"miscellaneous/variables.html":{}}}],["quizwithfriends",{"_index":1350,"title":{},"body":{"index.html":{}}}],["radius",{"_index":105,"title":{},"body":{"components/AnswersComponent.html":{},"components/AuthComponent.html":{},"components/DuelOverviewComponent.html":{},"components/QuestionComponent.html":{},"components/UserStartpageComponent.html":{}}}],["random",{"_index":1020,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["recap",{"_index":1298,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["recht",{"_index":710,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["rechte",{"_index":508,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["rechtlichen",{"_index":753,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["rechtsansprüchen",{"_index":742,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["rechtsgrundlage",{"_index":609,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["redirectto",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1395,"title":{},"body":{"index.html":{}}}],["relative",{"_index":1206,"title":{},"body":{"components/StartpageComponent.html":{}}}],["relativeto",{"_index":1081,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["reload",{"_index":1364,"title":{},"body":{"index.html":{}}}],["reloaded",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["removes",{"_index":817,"title":{},"body":{"injectables/DataService.html":{}}}],["removing",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["request",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["require",{"_index":1331,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":1292,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["res.data",{"_index":846,"title":{},"body":{"injectables/DataService.html":{}}}],["res.id",{"_index":950,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/UserStartpageComponent.html":{}}}],["res.username",{"_index":948,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/UserStartpageComponent.html":{}}}],["res[user",{"_index":1294,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["resdata",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{}}}],["resdata.user.email",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["resdata.user.uid",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["responded",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["rest",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["result",{"_index":24,"title":{},"body":{"components/AnswersComponent.html":{}}}],["results",{"_index":170,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPrivacyComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"classes/User.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":346,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/DuelPlayComponent.html":{},"classes/User.html":{}}}],["returns",{"_index":66,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPrivacyComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["rgb(0",{"_index":99,"title":{},"body":{"components/AnswersComponent.html":{},"components/QuestionComponent.html":{}}}],["rgb(200",{"_index":1198,"title":{},"body":{"components/QuestionComponent.html":{}}}],["rgb(230",{"_index":123,"title":{},"body":{"components/AnswersComponent.html":{},"components/FooterComponent.html":{}}}],["rgb(255",{"_index":988,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["rgb(70",{"_index":1199,"title":{},"body":{"components/QuestionComponent.html":{}}}],["rgba(0",{"_index":1187,"title":{},"body":{"components/ModalNewDuelComponent.html":{}}}],["right",{"_index":53,"title":{},"body":{"components/AnswersComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{}}}],["rightanswer",{"_index":30,"title":{},"body":{"components/AnswersComponent.html":{},"components/DuelPlayComponent.html":{}}}],["root",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{}}}],["root'},{'name",{"_index":140,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["rotate(350deg",{"_index":1212,"title":{},"body":{"components/StartpageComponent.html":{}}}],["round",{"_index":826,"title":{},"body":{"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{}}}],["roundscore",{"_index":1000,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["route",{"_index":339,"title":{},"body":{"guards/AuthGuard.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{}}}],["router",{"_index":262,"title":{},"body":{"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/HeaderComponent.html":{}}}],["routermodule",{"_index":237,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":337,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":238,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routesub",{"_index":905,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["routine",{"_index":1177,"title":{},"body":{"components/ModalNewDuelComponent.html":{}}}],["routines",{"_index":1250,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["routing.module",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":236,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1358,"title":{},"body":{"index.html":{}}}],["running",{"_index":1376,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":283,"title":{},"body":{"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/HeaderComponent.html":{},"components/UserStartpageComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":286,"title":{},"body":{"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/UserStartpageComponent.html":{}}}],["saves",{"_index":1107,"title":{},"body":{"components/HeaderComponent.html":{}}}],["scaffolding",{"_index":1368,"title":{},"body":{"index.html":{}}}],["scale(1.02",{"_index":116,"title":{},"body":{"components/AnswersComponent.html":{}}}],["schreiben",{"_index":770,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["schriften",{"_index":701,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["schutzwürdige",{"_index":733,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["score",{"_index":827,"title":{},"body":{"injectables/DataService.html":{}}}],["scoresub",{"_index":906,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["scoring",{"_index":990,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["scriptbibliotheken",{"_index":676,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["seconds",{"_index":1016,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["sei",{"_index":730,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["sending",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["serve",{"_index":1360,"title":{},"body":{"index.html":{}}}],["server",{"_index":1357,"title":{},"body":{"index.html":{}}}],["services",{"_index":762,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["setduelfinishonusers",{"_index":793,"title":{},"body":{"injectables/DataService.html":{}}}],["setduelfinishonusers(playeroneuid",{"_index":814,"title":{},"body":{"injectables/DataService.html":{}}}],["setduelforplayerone",{"_index":794,"title":{},"body":{"injectables/DataService.html":{}}}],["setduelforplayerone(dueldata",{"_index":825,"title":{},"body":{"injectables/DataService.html":{}}}],["setduelforplayertwo",{"_index":795,"title":{},"body":{"injectables/DataService.html":{}}}],["setduelforplayertwo(dueldata",{"_index":831,"title":{},"body":{"injectables/DataService.html":{}}}],["setduelscores",{"_index":796,"title":{},"body":{"injectables/DataService.html":{}}}],["setduelscores(duelid",{"_index":834,"title":{},"body":{"injectables/DataService.html":{}}}],["setinterval",{"_index":1070,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["settimeout",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared/data.service",{"_index":944,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/UserStartpageComponent.html":{}}}],["shared/user.model",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["show",{"_index":804,"title":{},"body":{"injectables/DataService.html":{},"components/UserStartpageComponent.html":{}}}],["showallusers",{"_index":797,"title":{},"body":{"injectables/DataService.html":{},"components/UserStartpageComponent.html":{}}}],["showalluserslist",{"_index":1242,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["showinfomessage",{"_index":1243,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["showing",{"_index":1247,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["sich",{"_index":561,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["sie",{"_index":505,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["sign",{"_index":304,"title":{},"body":{"components/AuthComponent.html":{},"components/HeaderComponent.html":{}}}],["signup",{"_index":272,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["signup(username",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["sind",{"_index":646,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["sinne",{"_index":486,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["situation",{"_index":714,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["size",{"_index":119,"title":{},"body":{"components/AnswersComponent.html":{},"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["sofern",{"_index":530,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPrivacyComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"classes/User.html":{},"components/UserStartpageComponent.html":{},"index.html":{}}}],["sowie",{"_index":599,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["space",{"_index":329,"title":{},"body":{"components/AuthComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["span",{"_index":117,"title":{},"body":{"components/AnswersComponent.html":{}}}],["spec\\.ts",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specified",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{}}}],["speicherdauer",{"_index":649,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["spätestens",{"_index":650,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":235,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth.component.ts",{"_index":254,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/auth/auth.component.ts:15",{"_index":281,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:16",{"_index":280,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:17",{"_index":263,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:21",{"_index":264,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:29",{"_index":267,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:57",{"_index":276,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":332,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts:11",{"_index":333,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:15",{"_index":338,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.service.ts",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/auth.service.ts:118",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:131",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:15",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:16",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:18",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:29",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:52",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:84",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:97",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/data",{"_index":477,"title":{},"body":{"components/DataPrivacyComponent.html":{},"coverage.html":{}}}],["src/app/duel",{"_index":10,"title":{},"body":{"components/AnswersComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/QuestionComponent.html":{},"coverage.html":{}}}],["src/app/footer/footer.component.ts",{"_index":1084,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/footer/footer.component.ts:12",{"_index":1089,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/footer/footer.component.ts:8",{"_index":1088,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/header/header.component.ts",{"_index":1097,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:13",{"_index":1111,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:14",{"_index":1112,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:16",{"_index":1104,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:23",{"_index":1106,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:38",{"_index":1108,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:49",{"_index":1105,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/legal",{"_index":1122,"title":{},"body":{"components/LegalNoticeComponent.html":{},"coverage.html":{}}}],["src/app/modal",{"_index":1159,"title":{},"body":{"components/ModalNewDuelComponent.html":{},"coverage.html":{}}}],["src/app/shared/data.service.ts",{"_index":789,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["src/app/shared/data.service.ts:10",{"_index":800,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/shared/data.service.ts:117",{"_index":828,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/shared/data.service.ts:151",{"_index":832,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/shared/data.service.ts:183",{"_index":816,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/shared/data.service.ts:19",{"_index":836,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/shared/data.service.ts:198",{"_index":811,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/shared/data.service.ts:33",{"_index":839,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/shared/data.service.ts:65",{"_index":802,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/shared/data.service.ts:76",{"_index":808,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/shared/data.service.ts:91",{"_index":835,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/shared/user.model.ts",{"_index":1217,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/shared/user.model.ts:1",{"_index":1225,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/user.model.ts:10",{"_index":1230,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/user.model.ts:3",{"_index":1228,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/user.model.ts:4",{"_index":1226,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/user.model.ts:5",{"_index":1227,"title":{},"body":{"classes/User.html":{}}}],["src/app/startpage/startpage.component.ts",{"_index":1200,"title":{},"body":{"components/StartpageComponent.html":{},"coverage.html":{}}}],["src/app/startpage/startpage.component.ts:12",{"_index":1204,"title":{},"body":{"components/StartpageComponent.html":{}}}],["src/app/startpage/startpage.component.ts:8",{"_index":1203,"title":{},"body":{"components/StartpageComponent.html":{}}}],["src/app/user",{"_index":1233,"title":{},"body":{"components/UserStartpageComponent.html":{},"coverage.html":{}}}],["src/environments/environment",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":1325,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1328,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1329,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1018,"title":{},"body":{"components/DuelPlayComponent.html":{},"components/ModalNewDuelComponent.html":{}}}],["started",{"_index":245,"title":{"index.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["startnewduel",{"_index":798,"title":{},"body":{"injectables/DataService.html":{},"components/ModalNewDuelComponent.html":{},"components/UserStartpageComponent.html":{}}}],["startnewduel(uid",{"_index":1175,"title":{},"body":{"components/ModalNewDuelComponent.html":{},"components/UserStartpageComponent.html":{}}}],["startnewduel(username",{"_index":837,"title":{},"body":{"injectables/DataService.html":{}}}],["startpage",{"_index":167,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["startpage'},{'name",{"_index":164,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["startpage.component",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["startpage.component.css",{"_index":1201,"title":{},"body":{"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["startpage.component.html",{"_index":1202,"title":{},"body":{"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["startpage.component.ts",{"_index":1234,"title":{},"body":{"components/UserStartpageComponent.html":{},"coverage.html":{}}}],["startpage.component.ts:114",{"_index":1246,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["startpage.component.ts:121",{"_index":1248,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["startpage.component.ts:14",{"_index":1265,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["startpage.component.ts:15",{"_index":1264,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["startpage.component.ts:16",{"_index":1266,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["startpage.component.ts:18",{"_index":1262,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["startpage.component.ts:20",{"_index":1263,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["startpage.component.ts:21",{"_index":1261,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["startpage.component.ts:23",{"_index":1259,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["startpage.component.ts:25",{"_index":1256,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["startpage.component.ts:26",{"_index":1255,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["startpage.component.ts:27",{"_index":1257,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["startpage.component.ts:28",{"_index":1258,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["startpage.component.ts:29",{"_index":1260,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["startpage.component.ts:31",{"_index":1245,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["startpage.component.ts:38",{"_index":1249,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["startpage.component.ts:70",{"_index":1252,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["startpage.component.ts:94",{"_index":1253,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["startpage/startpage.component",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["startpage/user",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{}}}],["startpagecomponent",{"_index":163,"title":{"components/StartpageComponent.html":{}},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["starts",{"_index":1012,"title":{},"body":{"components/DuelPlayComponent.html":{},"components/ModalNewDuelComponent.html":{}}}],["state",{"_index":336,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":1308,"title":{},"body":{"coverage.html":{}}}],["stelle",{"_index":575,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["stets",{"_index":751,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["storage",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["storagebucket",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":1373,"title":{},"body":{"index.html":{}}}],["streitbeilegung",{"_index":1146,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["streitbeilegungsverfahren",{"_index":1153,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["string",{"_index":43,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/HeaderComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"classes/User.html":{},"components/UserStartpageComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["subject",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["submitted",{"_index":269,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["subscription",{"_index":938,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/HeaderComponent.html":{},"components/UserStartpageComponent.html":{}}}],["subscriptions",{"_index":922,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/UserStartpageComponent.html":{}}}],["successful",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["support",{"_index":1396,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1397,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":316,"title":{},"body":{"components/AuthComponent.html":{}}}],["switches",{"_index":277,"title":{},"body":{"components/AuthComponent.html":{}}}],["table",{"_index":1333,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1332,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":285,"title":{},"body":{"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/UserStartpageComponent.html":{}}}],["taken",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["takes",{"_index":1025,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["teilzunehmen",{"_index":1155,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["test",{"_index":1379,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1389,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1378,"title":{},"body":{"index.html":{}}}],["text",{"_index":90,"title":{},"body":{"components/AnswersComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{}}}],["then((docres",{"_index":850,"title":{},"body":{"injectables/DataService.html":{}}}],["this._token",{"_index":1232,"title":{},"body":{"classes/User.html":{}}}],["this._tokenexpirationdate",{"_index":1231,"title":{},"body":{"classes/User.html":{}}}],["this.allactiveduels",{"_index":1277,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["this.allactiveduels.push(duel",{"_index":1285,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["this.allactiveduels.some(e",{"_index":1281,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["this.allduels",{"_index":1273,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["this.allduels.length",{"_index":1279,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["this.allduels[i",{"_index":1280,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["this.allfinishedduels",{"_index":1278,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["this.allfinishedduels.push(duel",{"_index":1284,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["this.allopponents",{"_index":1275,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["this.allusers",{"_index":1290,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["this.allusers.push",{"_index":1295,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["this.answered",{"_index":77,"title":{},"body":{"components/AnswersComponent.html":{}}}],["this.answeredevent.emit(id",{"_index":81,"title":{},"body":{"components/AnswersComponent.html":{}}}],["this.answers",{"_index":1065,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["this.auth.authstate.pipe(take(1)).subscribe(async",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.auth.createuserwithemailandpassword(email",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.auth.currentuser",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.auth.currentuser)?.getidtoken(false)).tostring",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.auth.currentuser)?.getidtoken(true)).tostring",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.auth.signinwithemailandpassword(email",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authenticated",{"_index":1115,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservice.autologin",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.error.pipe(take(1)).subscribe((errormessage",{"_index":298,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.authservice.login(myform.value.email",{"_index":293,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.authservice.logout",{"_index":1117,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservice.signup(myform.value.username",{"_index":299,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.authservice.user.pipe(take(1",{"_index":347,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.user.pipe(take(1)).subscribe((res",{"_index":1050,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["this.authservice.user.subscribe((res",{"_index":946,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/UserStartpageComponent.html":{}}}],["this.authservice.user.subscribe((user",{"_index":1114,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authsubscription",{"_index":1113,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authsubscription.unsubscribe",{"_index":1119,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.autologout(3600",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.autologout(expirationduration",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.calculatetimeleft",{"_index":1059,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["this.checkforroute",{"_index":951,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["this.closemodalevent.emit(true",{"_index":1181,"title":{},"body":{"components/ModalNewDuelComponent.html":{}}}],["this.dataservice.getduel(params['id']).pipe(take(1)).subscribe((duel",{"_index":1049,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["this.dataservice.getduel(params['id']).subscribe((duel",{"_index":955,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["this.dataservice.getquestion().pipe(take(1)).subscribe((data",{"_index":1056,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["this.dataservice.listentoduels(this.userid).subscribe((userdata",{"_index":1271,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["this.dataservice.setduelscores(params['id",{"_index":1079,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["this.dataservice.showallusers().pipe(take(1)).subscribe((res",{"_index":1289,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["this.divstyle",{"_index":1071,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["this.duelsreceived",{"_index":1286,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["this.duelssub",{"_index":1270,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["this.error",{"_index":291,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.error.next('username",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.error.next(errormessage",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.firestore.collection('duels').add",{"_index":848,"title":{},"body":{"injectables/DataService.html":{}}}],["this.firestore.collection('duels').doc(duelid).get().pipe(take(1",{"_index":877,"title":{},"body":{"injectables/DataService.html":{}}}],["this.firestore.collection('duels').doc(duelid).valuechanges().pipe(map((duel",{"_index":874,"title":{},"body":{"injectables/DataService.html":{}}}],["this.firestore.collection('duels').doc(newduelid).update",{"_index":863,"title":{},"body":{"injectables/DataService.html":{}}}],["this.firestore.collection('questionanswer').valuechanges().pipe(take(1",{"_index":875,"title":{},"body":{"injectables/DataService.html":{}}}],["this.firestore.collection('users').doc('userlist').get().pipe(take(1",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{}}}],["this.firestore.collection('users').doc('userlist').update",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.firestore.collection('users').doc(uid).update",{"_index":859,"title":{},"body":{"injectables/DataService.html":{}}}],["this.firestore.collection('users').doc(user.uid).set",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.firestore.collection('users').doc(userid).get().pipe(take(1)).subscribe((res",{"_index":852,"title":{},"body":{"injectables/DataService.html":{}}}],["this.firestore.collection('users').doc(userid).update",{"_index":856,"title":{},"body":{"injectables/DataService.html":{}}}],["this.firestore.collection('users').doc(userid).update(duels",{"_index":855,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getdueldata",{"_index":1047,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["this.handleauthentication(resdata.user.displayname",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.handleauthentication(username",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.initiatequestion",{"_index":1055,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["this.loading",{"_index":290,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.loginmode",{"_index":292,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.logout",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.newopponent.emit({uid",{"_index":1180,"title":{},"body":{"components/ModalNewDuelComponent.html":{}}}],["this.opponent",{"_index":957,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["this.opponentroundsscoring",{"_index":965,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["this.opponentscoring",{"_index":961,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["this.player",{"_index":970,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{}}}],["this.playerid",{"_index":949,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["this.playerwinners",{"_index":967,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["this.question",{"_index":1063,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["this.questionanswered",{"_index":1073,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["this.questionanswered(id",{"_index":1074,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["this.questionid",{"_index":1060,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["this.questionsinround",{"_index":1077,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["this.result",{"_index":80,"title":{},"body":{"components/AnswersComponent.html":{}}}],["this.rightanswer",{"_index":79,"title":{},"body":{"components/AnswersComponent.html":{},"components/DuelPlayComponent.html":{}}}],["this.round",{"_index":1053,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["this.roundscore",{"_index":1075,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["this.roundscore).subscribe",{"_index":1080,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["this.route",{"_index":1082,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["this.route.params.pipe(take(1)).subscribe((params",{"_index":1048,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["this.route.params.subscribe((params",{"_index":953,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["this.router.createurltree(['/get",{"_index":351,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{},"components/DuelPlayComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":1118,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.router.navigate(['/get",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigatebyurl",{"_index":1052,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["this.routesub",{"_index":952,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["this.scoresub",{"_index":954,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["this.setduelfinishonusers(dueldata.access[0",{"_index":889,"title":{},"body":{"injectables/DataService.html":{}}}],["this.setduelforplayerone(dueldata",{"_index":881,"title":{},"body":{"injectables/DataService.html":{}}}],["this.setduelforplayertwo(dueldata",{"_index":882,"title":{},"body":{"injectables/DataService.html":{}}}],["this.showalluserslist",{"_index":1296,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["this.timeleft",{"_index":1057,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["this.timeleftinterval",{"_index":1069,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["this.timeup",{"_index":1058,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["this.tokenexpirationtimer",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.next(null",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.next(userdata",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userid",{"_index":1268,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["this.username",{"_index":947,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/HeaderComponent.html":{},"components/UserStartpageComponent.html":{}}}],["this.userroundsscoring",{"_index":963,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["this.userscoring",{"_index":959,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["this.usersub",{"_index":945,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/UserStartpageComponent.html":{}}}],["those",{"_index":841,"title":{},"body":{"injectables/DataService.html":{}}}],["throw",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["throwerror",{"_index":282,"title":{},"body":{"components/AuthComponent.html":{}}}],["tie",{"_index":977,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["time",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"components/DuelPlayComponent.html":{}}}],["timeleft",{"_index":1001,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["timeleftinterval",{"_index":1002,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["timer",{"_index":1035,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["timeup",{"_index":1003,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["title",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["tmg",{"_index":1130,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["token",{"_index":1220,"title":{},"body":{"classes/User.html":{}}}],["tokenexpirationtimer",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["top",{"_index":87,"title":{},"body":{"components/AnswersComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/StartpageComponent.html":{}}}],["transform",{"_index":110,"title":{},"body":{"components/AnswersComponent.html":{},"components/StartpageComponent.html":{}}}],["transition",{"_index":109,"title":{},"body":{"components/AnswersComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["true",{"_index":78,"title":{},"body":{"components/AnswersComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/DataService.html":{},"components/DuelPlayComponent.html":{},"components/HeaderComponent.html":{},"components/UserStartpageComponent.html":{},"miscellaneous/variables.html":{}}}],["trying",{"_index":270,"title":{},"body":{"components/AuthComponent.html":{}}}],["tslib",{"_index":1343,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":929,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["two",{"_index":842,"title":{},"body":{"injectables/DataService.html":{}}}],["two's",{"_index":824,"title":{},"body":{"injectables/DataService.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/HeaderComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"classes/User.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uid",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/ModalNewDuelComponent.html":{},"components/UserStartpageComponent.html":{}}}],["um",{"_index":636,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["umzusetzen",{"_index":758,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["und",{"_index":516,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["unit",{"_index":1377,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["unkomplizierte",{"_index":625,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["unrichtiger",{"_index":522,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["uns",{"_index":513,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["unsere",{"_index":679,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["unserer",{"_index":745,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["unseres",{"_index":502,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["unsubscribes",{"_index":921,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/HeaderComponent.html":{},"components/UserStartpageComponent.html":{}}}],["unter",{"_index":498,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["unterliegen",{"_index":658,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["up",{"_index":305,"title":{},"body":{"components/AuthComponent.html":{},"components/HeaderComponent.html":{}}}],["urheberrechtliche",{"_index":1137,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["urltree",{"_index":342,"title":{},"body":{"guards/AuthGuard.html":{}}}],["usa",{"_index":698,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["use",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["user",{"_index":166,"title":{"classes/User.html":{}},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPrivacyComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"classes/User.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{}}}],["user's",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/UserStartpageComponent.html":{}}}],["user(username",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.updateprofile",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":1116,"title":{},"body":{"components/HeaderComponent.html":{},"components/ModalNewDuelComponent.html":{}}}],["userdata",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/UserStartpageComponent.html":{}}}],["userdata._token",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata.activeopponents",{"_index":1276,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["userdata.duels",{"_index":1274,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["userid",{"_index":813,"title":{},"body":{"injectables/DataService.html":{},"components/UserStartpageComponent.html":{}}}],["userlist.data",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":314,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/HeaderComponent.html":{},"components/ModalNewDuelComponent.html":{},"classes/User.html":{},"components/UserStartpageComponent.html":{}}}],["userroundsscoring",{"_index":907,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["userroundsscoring[i",{"_index":979,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["users",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/UserStartpageComponent.html":{}}}],["users[user",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["userscoring",{"_index":908,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["userstartpagecomponent",{"_index":165,"title":{"components/UserStartpageComponent.html":{}},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usersub",{"_index":909,"title":{},"body":{"components/DuelOverviewComponent.html":{},"components/UserStartpageComponent.html":{}}}],["usertoken",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["using",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["validen",{"_index":597,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["value",{"_index":40,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/HeaderComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/UserStartpageComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":136,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["variable",{"_index":1326,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1023,"title":{"miscellaneous/variables.html":{}},"body":{"components/DuelPlayComponent.html":{},"miscellaneous/variables.html":{}}}],["verantwortliche",{"_index":574,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["verantwortlicher",{"_index":484,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["verarbeiten",{"_index":729,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["verarbeitung",{"_index":518,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["verbrauchersachen",{"_index":1147,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["verbraucherschlichtungsstelle",{"_index":1154,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["verbraucherstreitbeilegungsgesetz",{"_index":1143,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["verpflichtet",{"_index":1152,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["version",{"_index":783,"title":{},"body":{"components/DataPrivacyComponent.html":{},"index.html":{}}}],["verteidigung",{"_index":741,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["vertrag",{"_index":549,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["vertragsverhältnis",{"_index":656,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["vertreten",{"_index":1135,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["verwenden",{"_index":686,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["verwendung",{"_index":675,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["via",{"_index":1173,"title":{},"body":{"components/ModalNewDuelComponent.html":{},"index.html":{}}}],["view",{"_index":695,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["void",{"_index":67,"title":{},"body":{"components/AnswersComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/DataPrivacyComponent.html":{},"injectables/DataService.html":{},"components/DuelOverviewComponent.html":{},"components/DuelPlayComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/QuestionComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["von",{"_index":587,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["vor",{"_index":748,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["vorgeschrieben",{"_index":665,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["vorvertraglicher",{"_index":643,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["vsbg",{"_index":1142,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["wait",{"_index":992,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["web",{"_index":688,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["webfonts",{"_index":678,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["website",{"_index":687,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["weder",{"_index":1150,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["weight",{"_index":121,"title":{},"body":{"components/AnswersComponent.html":{},"components/AuthComponent.html":{},"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["weitere",{"_index":702,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["weiterer",{"_index":608,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["wenden",{"_index":565,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["wenn",{"_index":768,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["werden",{"_index":590,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["white",{"_index":1302,"title":{},"body":{"components/UserStartpageComponent.html":{}}}],["widerrufen",{"_index":560,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["widerspruch",{"_index":540,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["widerspruchs",{"_index":743,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["widerspruchsrecht",{"_index":708,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["width",{"_index":128,"title":{},"body":{"components/AnswersComponent.html":{},"components/AuthComponent.html":{},"components/DuelOverviewComponent.html":{},"components/ModalNewDuelComponent.html":{},"components/StartpageComponent.html":{},"components/UserStartpageComponent.html":{}}}],["winner",{"_index":974,"title":{},"body":{"components/DuelOverviewComponent.html":{}}}],["winners",{"_index":873,"title":{},"body":{"injectables/DataService.html":{}}}],["wir",{"_index":531,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["wirkung",{"_index":557,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["wohnsitzes",{"_index":572,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["wrap",{"_index":85,"title":{},"body":{"components/AnswersComponent.html":{},"components/UserStartpageComponent.html":{}}}],["writes",{"_index":1022,"title":{},"body":{"components/DuelPlayComponent.html":{}}}],["wrong",{"_index":54,"title":{},"body":{"components/AnswersComponent.html":{},"injectables/AuthService.html":{}}}],["wurde",{"_index":775,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["z",{"_index":566,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/ModalNewDuelComponent.html":{}}}],["z.b",{"_index":759,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["zone.js",{"_index":1345,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["zu",{"_index":639,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["zukunft",{"_index":559,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["zum",{"_index":591,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["zuordnung",{"_index":603,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["zur",{"_index":641,"title":{},"body":{"components/DataPrivacyComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["zuständige",{"_index":568,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["zweck",{"_index":586,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["zwecke",{"_index":630,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}],["zwingende",{"_index":732,"title":{},"body":{"components/DataPrivacyComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AnswersComponent.html":{"url":"components/AnswersComponent.html","title":"component - AnswersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AnswersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/duel-play/answers/answers.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-answers\n            \n\n            \n                styleUrls\n                ./answers.component.css\n            \n\n\n\n            \n                templateUrl\n                ./answers.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                result\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAnswer\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                answered\n                            \n                            \n                                answers\n                            \n                            \n                                rightAnswer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                answeredEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/duel-play/answers/answers.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        answered\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/duel-play/answers/answers.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        answers\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/duel-play/answers/answers.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rightAnswer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : -1\n                    \n                \n                        \n                            \n                                    Defined in src/app/duel-play/answers/answers.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        answeredEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/duel-play/answers/answers.component.ts:10\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkAnswer\n                        \n                    \n                \n            \n            \n                \ncheckAnswer(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/duel-play/answers/answers.component.ts:27\n                \n            \n\n\n            \n                \n                    Highlights the right and wrong answers and forwards the given answer id to the answeredEvent listeners.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe id of the answer (0-3)\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/duel-play/answers/answers.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-play/answers/answers.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-answers',\n  templateUrl: './answers.component.html',\n  styleUrls: ['./answers.component.css']\n})\nexport class AnswersComponent implements OnInit {\n\n  @Output() answeredEvent = new EventEmitter();\n\n  @Input() answers: string[] = [];\n  @Input() rightAnswer = -1;\n  @Input() answered: boolean = false;\n  result: string = '';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Highlights the right and wrong answers and forwards the given answer id to the answeredEvent listeners.\n   *\n   * @param id - The id of the answer (0-3)\n   */\n  checkAnswer(id: number) {\n    if (!this.answered) {\n      this.answered = true;\n      id === this.rightAnswer ? this.result = 'right' : this.result = 'wrong';\n      this.answeredEvent.emit(id);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n      {{ answer }}\n  \n\n\n    \n\n    \n                \n                    ./answers.component.css\n                \n                .answers-container {\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 64px;\n  margin-bottom: 64px;\n  text-align: center;\n  justify-content: center;\n}\n\n.answer-container {\n  padding: 16px;\n  margin: 16px;\n  background-color: rgb(0, 150, 200);\n  flex: 0 0 calc(50% - 32px);\n  border-radius: 8px;\n  cursor: pointer;\n  transition: transform 225ms ease-in-out, background-color 350ms ease-in-out;\n}\n\n.answer-container:hover {\n  transform: scale(1.02);\n}\n\n.answer-container span {\n  font-size: 1.2rem;\n  font-weight: 500;\n}\n\n.wrong-answer {\n  background-color: rgb(230, 80, 0);\n}\n\n.right-answer {\n  background-color: rgb(0, 150, 70);\n}\n\n@media (max-width: 1050px) {\n  .answer-container {\n    margin: 2px;\n    flex: 0 0 calc(50% - 4px);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ answer }}  '\n    var COMPONENTS = [{'name': 'AnswersComponent', 'selector': 'app-answers'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DataPrivacyComponent', 'selector': 'app-data-privacy'},{'name': 'DuelOverviewComponent', 'selector': 'app-duel-overview'},{'name': 'DuelPlayComponent', 'selector': 'app-duel-play'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'ModalNewDuelComponent', 'selector': 'app-modal-new-duel'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'StartpageComponent', 'selector': 'app-startpage'},{'name': 'UserStartpageComponent', 'selector': 'app-user-startpage'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnswersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Quiz with Friends'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Quiz with Friends';\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.authService.autoLogin();\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AnswersComponent', 'selector': 'app-answers'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DataPrivacyComponent', 'selector': 'app-data-privacy'},{'name': 'DuelOverviewComponent', 'selector': 'app-duel-overview'},{'name': 'DuelPlayComponent', 'selector': 'app-duel-play'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'ModalNewDuelComponent', 'selector': 'app-modal-new-duel'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'StartpageComponent', 'selector': 'app-startpage'},{'name': 'UserStartpageComponent', 'selector': 'app-user-startpage'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAnswersComponent\n\nAnswersComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnswersComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAppModule -->\n\nAuthComponent->AppModule\n\n\n\n\n\nDataPrivacyComponent\n\nDataPrivacyComponent\n\nAppModule -->\n\nDataPrivacyComponent->AppModule\n\n\n\n\n\nDuelOverviewComponent\n\nDuelOverviewComponent\n\nAppModule -->\n\nDuelOverviewComponent->AppModule\n\n\n\n\n\nDuelPlayComponent\n\nDuelPlayComponent\n\nAppModule -->\n\nDuelPlayComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLegalNoticeComponent\n\nLegalNoticeComponent\n\nAppModule -->\n\nLegalNoticeComponent->AppModule\n\n\n\n\n\nModalNewDuelComponent\n\nModalNewDuelComponent\n\nAppModule -->\n\nModalNewDuelComponent->AppModule\n\n\n\n\n\nQuestionComponent\n\nQuestionComponent\n\nAppModule -->\n\nQuestionComponent->AppModule\n\n\n\n\n\nStartpageComponent\n\nStartpageComponent\n\nAppModule -->\n\nStartpageComponent->AppModule\n\n\n\n\n\nUserStartpageComponent\n\nUserStartpageComponent\n\nAppModule -->\n\nUserStartpageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AnswersComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            AuthComponent\n                        \n                        \n                            DataPrivacyComponent\n                        \n                        \n                            DuelOverviewComponent\n                        \n                        \n                            DuelPlayComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            LegalNoticeComponent\n                        \n                        \n                            ModalNewDuelComponent\n                        \n                        \n                            QuestionComponent\n                        \n                        \n                            StartpageComponent\n                        \n                        \n                            UserStartpageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from 'src/environments/environment';\n\nimport { AppComponent } from './app.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { StartpageComponent } from './startpage/startpage.component';\nimport { UserStartpageComponent } from './user-startpage/user-startpage.component';\nimport { DuelOverviewComponent } from './duel-overview/duel-overview.component';\nimport { DuelPlayComponent } from './duel-play/duel-play.component';\nimport { QuestionComponent } from './duel-play/question/question.component';\nimport { AnswersComponent } from './duel-play/answers/answers.component';\nimport { ModalNewDuelComponent } from './modal-new-duel/modal-new-duel.component';\nimport { DataPrivacyComponent } from './data-privacy/data-privacy.component';\nimport { LegalNoticeComponent } from './legal-notice/legal-notice.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthComponent,\n    HeaderComponent,\n    FooterComponent,\n    StartpageComponent,\n    UserStartpageComponent,\n    DuelOverviewComponent,\n    DuelPlayComponent,\n    QuestionComponent,\n    AnswersComponent,\n    ModalNewDuelComponent,\n    DataPrivacyComponent,\n    LegalNoticeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthComponent } from './auth/auth.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { DataPrivacyComponent } from './data-privacy/data-privacy.component';\nimport { DuelOverviewComponent } from './duel-overview/duel-overview.component';\nimport { DuelPlayComponent } from './duel-play/duel-play.component';\nimport { LegalNoticeComponent } from './legal-notice/legal-notice.component';\nimport { StartpageComponent } from './startpage/startpage.component';\nimport { UserStartpageComponent } from './user-startpage/user-startpage.component';\n\nconst routes: Routes = [\n  { path: 'auth', component: AuthComponent },\n  { path: 'get-started', component: StartpageComponent },\n  { path: 'data-privacy', component: DataPrivacyComponent },\n  { path: 'legal-notice', component: LegalNoticeComponent },\n  { path: 'duel/:id/play', component: DuelPlayComponent, canActivate: [AuthGuard] },\n  { path: 'duel/:id', component: DuelOverviewComponent, canActivate: [AuthGuard] },\n  { path: '', component: UserStartpageComponent, canActivate: [AuthGuard] },\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/auth.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                styleUrls\n                ./auth.component.css\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                loading\n                            \n                            \n                                loginMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                onSwitchMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(myForm: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:29\n                \n            \n\n\n            \n                \n                    Checking the submitted user data and trying to login or signup the user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    myForm\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe form containing the login data submitted by the user\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSwitchMode\n                        \n                    \n                \n            \n            \n                \nonSwitchMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:57\n                \n            \n\n\n            \n                \n                    Switches between login and signup mode.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { of, throwError } from 'rxjs';\nimport { catchError, take } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  loginMode = true;\n  loading = false;\n  error = '';\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Checking the submitted user data and trying to login or signup the user.\n   *\n   * @param {NgForm} myForm - The form containing the login data submitted by the user\n   */\n  onSubmit(myForm: NgForm) {\n    if (myForm.valid) {\n      this.loading = true;\n      this.error = '';\n      if (this.loginMode) {\n        this.authService.login(myForm.value.email, myForm.value.password).then((resData) => {\n          console.log(resData);\n          this.loading = false;\n        }).catch((errorMessage) => {\n          this.error = errorMessage;\n          this.loading = false;\n        });\n      } else {\n        this.authService.error.pipe(take(1)).subscribe((errorMessage) => {\n          this.error = errorMessage;\n        });\n        this.authService.signup(myForm.value.username, myForm.value.email, myForm.value.password).pipe(take(1)).subscribe((resData) => {\n          console.log(resData);\n          this.loading = false;\n        });\n      }\n    }\n    myForm.reset();\n  }\n\n  /**\n   * Switches between login and signup mode.\n   */\n  onSwitchMode() {\n    this.loginMode = !this.loginMode;\n    this.error = '';\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ loginMode ? 'Log In' : 'Sign Up' }} to Quiz with Friends!\n  \n  \n    Entry for guests:\n    E-Mail address: abc@abc.abc\n    Password: 12345678\n  \n  \n    Loading...\n  \n  \n    {{ error }}\n  \n  \n    \n      Username\n      \n    \n    \n      Email address\n      \n    \n    \n      Password\n      \n    \n    \n      {{ loginMode ? 'Log In' : 'Sign Up' }}\n      Switch to {{ loginMode ? 'Sign Up' : 'Log In' }}\n    \n  \n\n\n    \n\n    \n                \n                    ./auth.component.css\n                \n                .form-container {\n  height: 80vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.guest-credentials {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.guest-credentials-headline {\n  font-weight: 700;\n}\n\n.auth-form {\n  display: flex;\n  flex-direction: column;\n  max-width: 500px;\n  width: 100%;\n}\n\n.error-container {\n  max-width: 500px;\n  width: 100%;\n  border-radius: 8px;\n}\n\n.buttons-container {\n  display: flex;\n  justify-content: space-between;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ loginMode ? \\'Log In\\' : \\'Sign Up\\' }} to Quiz with Friends!        Entry for guests:    E-Mail address: abc@abc.abc    Password: 12345678        Loading...        {{ error }}              Username                    Email address                    Password                    {{ loginMode ? \\'Log In\\' : \\'Sign Up\\' }}      Switch to {{ loginMode ? \\'Sign Up\\' : \\'Log In\\' }}      '\n    var COMPONENTS = [{'name': 'AnswersComponent', 'selector': 'app-answers'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DataPrivacyComponent', 'selector': 'app-data-privacy'},{'name': 'DuelOverviewComponent', 'selector': 'app-duel-overview'},{'name': 'DuelPlayComponent', 'selector': 'app-duel-play'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'ModalNewDuelComponent', 'selector': 'app-modal-new-duel'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'StartpageComponent', 'selector': 'app-startpage'},{'name': 'UserStartpageComponent', 'selector': 'app-user-startpage'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\nimport { map, take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    return this.authService.user.pipe(take(1), map((user) => {\n      const isAuth = !!user;\n\n      console.log(user);\n\n      if (isAuth) {\n        return true;\n      }\n      return this.router.createUrlTree(['/get-started']);\n    }));\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                    Private\n                                tokenExpirationTimer\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                autoLogin\n                            \n                            \n                                autoLogout\n                            \n                            \n                                    Async\n                                handleAuthentication\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AngularFireAuth, router: Router, firestore: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        autoLogin\n                        \n                    \n                \n            \n            \n                \nautoLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:97\n                \n            \n\n\n            \n                \n                    Automatically logs the user in when the page gets reloaded using the data in the local storage.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        autoLogout\n                        \n                    \n                \n            \n            \n                \nautoLogout(expirationDuration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:118\n                \n            \n\n\n            \n                \n                    Automatically logs out the user after a specified amount of time.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    expirationDuration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe milliseconds from now on when the user should get logged out automatically\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleAuthentication\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleAuthentication(username: string, email: string, uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:131\n                \n            \n\n\n            \n                \n                    Handles the rest of the authentication when firebase has responded.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe submitted username\n\n\n                                    \n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe submitted email adress\n\n\n                                    \n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe user's ID\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:29\n                \n            \n\n\n            \n                \n                    Sending a login request to the firebase authentication.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe submitted email address\n\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe submitted password\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        If it was successful or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:84\n                \n            \n\n\n            \n                \n                    Logs the user out by removing his data from the local storage.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signup\n                        \n                    \n                \n            \n            \n                \nsignup(username: string, email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:52\n                \n            \n\n\n            \n                \n                    Sending a signup request to the firebase authentication.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe submitted username\n\n\n                                    \n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe submitted email address\n\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe submitted password\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        If it was successful or not\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tokenExpirationTimer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { User } from '../shared/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  user = new BehaviorSubject(null);\n  private tokenExpirationTimer: any;\n\n  error = new Subject();\n\n  constructor(private auth: AngularFireAuth, private router: Router, private firestore: AngularFirestore) { }\n\n  /**\n   * Sending a login request to the firebase authentication.\n   *\n   * @param email - The submitted email address\n   * @param password - The submitted password\n   * @returns If it was successful or not\n   */\n  login(email: string, password: string) {\n    return this.auth.signInWithEmailAndPassword(email, password).then((resData) => {\n      this.handleAuthentication(resData.user.displayName, resData.user.email, resData.user.uid);\n      return resData;\n    }).catch((error) => {\n      let errorMessage = 'An unknown error occured.';\n      if (error.code === 'auth/user-not-found') {\n        errorMessage = 'This user does not exist.';\n      } else if (error.code === 'auth/wrong-password') {\n        errorMessage = 'This password is wrong.';\n      }\n      throw errorMessage;\n    });\n  }\n\n  /**\n   * Sending a signup request to the firebase authentication.\n   *\n   * @param username - The submitted username\n   * @param email - The submitted email address\n   * @param password - The submitted password\n   * @returns If it was successful or not\n   */\n  signup(username: string, email: string, password: string) {\n    return this.firestore.collection('users').doc('userlist').get().pipe(take(1), map((userlist: any) => {\n      const users = userlist.data();\n      for (const user in users) {\n        if (Object.prototype.hasOwnProperty.call(users, user)) {\n          const element = users[user];\n          if (element === username) {\n            this.error.next('Username already taken.');\n            return false;\n          }\n        }\n      }\n      return this.auth.createUserWithEmailAndPassword(email, password).then(async (resData) => {\n        const user = await this.auth.currentUser;\n        this.handleAuthentication(username, resData.user.email, resData.user.uid);\n        user.updateProfile({ displayName: username });\n        this.firestore.collection('users').doc('userlist').update({ [resData.user.uid]: username });\n        this.firestore.collection('users').doc(user.uid).set({ duels: [] });\n        return resData;\n      }).catch((error) => {\n        let errorMessage = 'An unknown error occured.';\n        if (error.code === 'auth/email-already-in-use') {\n          errorMessage = 'This email already exists.';\n        }\n        this.error.next(errorMessage);\n      });\n    }));\n  }\n\n  /**\n   * Logs the user out by removing his data from the local storage.\n   */\n  logout() {\n    this.user.next(null);\n    this.router.navigate(['/get-started']);\n    localStorage.removeItem('userData');\n    if (this.tokenExpirationTimer) {\n      clearTimeout(this.tokenExpirationTimer);\n    }\n    this.tokenExpirationTimer = null;\n  }\n\n  /**\n   * Automatically logs the user in when the page gets reloaded using the data in the local storage.\n   */\n  autoLogin() {\n    this.auth.authState.pipe(take(1)).subscribe(async (user) => {\n      const userData = JSON.parse(localStorage.getItem('userData'));\n      if (!userData) {\n        return;\n      }\n      const userToken = (await (await this.auth.currentUser)?.getIdToken(false)).toString();\n      console.log(userToken);\n      if (userData._token === userToken) {\n        this.user.next(userData);\n        const expirationDuration = new Date(userData._tokenExpirationDate).getTime() - new Date().getTime();\n        this.autoLogout(expirationDuration);\n      }\n    });\n  }\n\n  /**\n   * Automatically logs out the user after a specified amount of time.\n   *\n   * @param expirationDuration - The milliseconds from now on when the user should get logged out automatically\n   */\n  autoLogout(expirationDuration: number) {\n    this.tokenExpirationTimer = setTimeout(() => {\n      this.logout();\n    }, expirationDuration);\n  }\n\n  /**\n   * Handles the rest of the authentication when firebase has responded.\n   *\n   * @param username - The submitted username\n   * @param email - The submitted email adress\n   * @param uid - The user's ID\n   */\n  async handleAuthentication(username: string, email: string, uid: string) {\n    const userToken = (await (await this.auth.currentUser)?.getIdToken(true)).toString();\n    console.log(userToken);\n    const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n    const userData = new User(username, email, uid, userToken, expirationDate);\n    console.log(userData);\n    localStorage.setItem('userData', JSON.stringify(userData));\n    this.autoLogout(3600 * 1000);\n    this.user.next(userData);\n    this.router.navigate(['/']);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataPrivacyComponent.html":{"url":"components/DataPrivacyComponent.html","title":"component - DataPrivacyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DataPrivacyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data-privacy/data-privacy.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-data-privacy\n            \n\n            \n                styleUrls\n                ./data-privacy.component.css\n            \n\n\n\n            \n                templateUrl\n                ./data-privacy.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/data-privacy/data-privacy.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-privacy/data-privacy.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-data-privacy',\n  templateUrl: './data-privacy.component.html',\n  styleUrls: ['./data-privacy.component.css']\n})\nexport class DataPrivacyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  Datenschutzerklärung\n  Verantwortlicher im Sinne der Datenschutzgesetze, insbesondere der EU-Datenschutzgrundverordnung (DSGVO), ist:\n  \n  Oliver Mänder\n  Ihre Betroffenenrechte\n  Unter den angegebenen Kontaktdaten unseres Datenschutzbeauftragten können Sie jederzeit folgende Rechte ausüben:\n  \n  \n      Auskunft über Ihre bei uns gespeicherten Daten und deren Verarbeitung (Art. 15 DSGVO),\n      Berichtigung unrichtiger personenbezogener Daten (Art. 16 DSGVO),\n      Löschung Ihrer bei uns gespeicherten Daten (Art. 17 DSGVO),\n      Einschränkung der Datenverarbeitung, sofern wir Ihre Daten aufgrund gesetzlicher Pflichten noch nicht\n          löschen dürfen (Art. 18 DSGVO),\n      Widerspruch gegen die Verarbeitung Ihrer Daten bei uns (Art. 21 DSGVO) und\n      Datenübertragbarkeit, sofern Sie in die Datenverarbeitung eingewilligt haben oder einen Vertrag mit uns\n          abgeschlossen haben (Art. 20 DSGVO).\n  \n  Sofern Sie uns eine Einwilligung erteilt haben, können Sie diese jederzeit mit Wirkung für die Zukunft\n      widerrufen.\n  Sie können sich jederzeit mit einer Beschwerde an eine Aufsichtsbehörde wenden, z. B. an die zuständige\n      Aufsichtsbehörde des Bundeslands Ihres Wohnsitzes oder an die für uns als verantwortliche Stelle zuständige\n      Behörde.\n  Eine Liste der Aufsichtsbehörden (für den nichtöffentlichen Bereich) mit Anschrift finden Sie unter: https://www.bfdi.bund.de/DE/Infothek/Anschriften_Links/anschriften_links-node.html.\n  \n  \n  Kontaktformular\n  Art und Zweck der Verarbeitung:\n  Die von Ihnen eingegebenen Daten werden zum Zweck der individuellen Kommunikation mit Ihnen gespeichert. Hierfür\n      ist die Angabe einer validen E-Mail-Adresse sowie Ihres Namens erforderlich. Diese dient der Zuordnung der\n      Anfrage und der anschließenden Beantwortung derselben. Die Angabe weiterer Daten ist optional.\n  Rechtsgrundlage:\n  Die Verarbeitung der in das Kontaktformular eingegebenen Daten erfolgt auf der Grundlage eines berechtigten\n      Interesses (Art. 6 Abs. 1 lit. f DSGVO).\n  Durch Bereitstellung des Kontaktformulars möchten wir Ihnen eine unkomplizierte Kontaktaufnahme ermöglichen. Ihre\n      gemachten Angaben werden zum Zwecke der Bearbeitung der Anfrage sowie für mögliche Anschlussfragen gespeichert.\n  \n  Sofern Sie mit uns Kontakt aufnehmen, um ein Angebot zu erfragen, erfolgt die Verarbeitung der in das\n      Kontaktformular eingegebenen Daten zur Durchführung vorvertraglicher Maßnahmen (Art. 6 Abs. 1 lit. b DSGVO).\n  Empfänger:\n  Empfänger der Daten sind ggf. Auftragsverarbeiter.\n  \n  Speicherdauer:\n  Daten werden spätestens 6 Monate nach Bearbeitung der Anfrage gelöscht.\n  Sofern es zu einem Vertragsverhältnis kommt, unterliegen wir den gesetzlichen Aufbewahrungsfristen nach HGB und\n      löschen Ihre Daten nach Ablauf dieser Fristen. \n  Bereitstellung vorgeschrieben oder erforderlich:\n  Die Bereitstellung Ihrer personenbezogenen Daten erfolgt freiwillig. Wir können Ihre Anfrage jedoch nur\n      bearbeiten, sofern Sie uns Ihren Namen, Ihre E-Mail-Adresse und den Grund der Anfrage mitteilen.\n  \n  Verwendung von Scriptbibliotheken (Google Webfonts)\n  Um unsere Inhalte browserübergreifend korrekt und grafisch ansprechend darzustellen, verwenden wir auf dieser\n      Website „Google Web Fonts“ der Google LLC (1600 Amphitheatre Parkway, Mountain View, CA 94043, USA; nachfolgend\n      „Google“) zur Darstellung von Schriften.\n  Weitere Informationen zu Google Web Fonts finden Sie unter https://developers.google.com/fonts/faq und in der\n      Datenschutzerklärung von Google: https://www.google.com/policies/privacy/.\n  \n  \n  Information über Ihr Widerspruchsrecht nach Art. 21 DSGVO\n  Einzelfallbezogenes Widerspruchsrecht\n  Sie haben das Recht, aus Gründen, die sich aus Ihrer besonderen Situation ergeben, jederzeit gegen die\n      Verarbeitung Sie betreffender personenbezogener Daten, die aufgrund Art. 6 Abs. 1 lit. f DSGVO\n      (Datenverarbeitung auf der Grundlage einer Interessenabwägung) erfolgt, Widerspruch einzulegen; dies gilt auch\n      für ein auf diese Bestimmung gestütztes Profiling im Sinne von Art. 4 Nr. 4 DSGVO.\n  Legen Sie Widerspruch ein, werden wir Ihre personenbezogenen Daten nicht mehr verarbeiten, es sei denn, wir\n      können zwingende schutzwürdige Gründe für die Verarbeitung nachweisen, die Ihre Interessen, Rechte und\n      Freiheiten überwiegen, oder die Verarbeitung dient der Geltendmachung, Ausübung oder Verteidigung von\n      Rechtsansprüchen.\n  Empfänger eines Widerspruchs\n  Oliver Mänder\n  \n  Änderung unserer Datenschutzbestimmungen\n  Wir behalten uns vor, diese Datenschutzerklärung anzupassen, damit sie stets den aktuellen rechtlichen\n      Anforderungen entspricht oder um Änderungen unserer Leistungen in der Datenschutzerklärung umzusetzen, z.B. bei\n      der Einführung neuer Services. Für Ihren erneuten Besuch gilt dann die neue Datenschutzerklärung.\n  Fragen an den Datenschutzbeauftragten\n  Wenn Sie Fragen zum Datenschutz haben, schreiben Sie uns bitte eine E-Mail oder wenden Sie sich direkt an die für\n      den Datenschutz verantwortliche Person in unserer Organisation:\n  Oliver Mänder\n  Die Datenschutzerklärung wurde mithilfe der activeMind AG erstellt, den Experten für externe Datenschutzbeauftragte (Version #2020-09-30).\n\n\n    \n\n    \n                \n                    ./data-privacy.component.css\n                \n                .data-privacy-container h1 {\n  font-size: 32px;\n  font-weight: 700;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Datenschutzerklärung  Verantwortlicher im Sinne der Datenschutzgesetze, insbesondere der EU-Datenschutzgrundverordnung (DSGVO), ist:    Oliver Mänder  Ihre Betroffenenrechte  Unter den angegebenen Kontaktdaten unseres Datenschutzbeauftragten können Sie jederzeit folgende Rechte ausüben:          Auskunft über Ihre bei uns gespeicherten Daten und deren Verarbeitung (Art. 15 DSGVO),      Berichtigung unrichtiger personenbezogener Daten (Art. 16 DSGVO),      Löschung Ihrer bei uns gespeicherten Daten (Art. 17 DSGVO),      Einschränkung der Datenverarbeitung, sofern wir Ihre Daten aufgrund gesetzlicher Pflichten noch nicht          löschen dürfen (Art. 18 DSGVO),      Widerspruch gegen die Verarbeitung Ihrer Daten bei uns (Art. 21 DSGVO) und      Datenübertragbarkeit, sofern Sie in die Datenverarbeitung eingewilligt haben oder einen Vertrag mit uns          abgeschlossen haben (Art. 20 DSGVO).    Sofern Sie uns eine Einwilligung erteilt haben, können Sie diese jederzeit mit Wirkung für die Zukunft      widerrufen.  Sie können sich jederzeit mit einer Beschwerde an eine Aufsichtsbehörde wenden, z. B. an die zuständige      Aufsichtsbehörde des Bundeslands Ihres Wohnsitzes oder an die für uns als verantwortliche Stelle zuständige      Behörde.  Eine Liste der Aufsichtsbehörden (für den nichtöffentlichen Bereich) mit Anschrift finden Sie unter: https://www.bfdi.bund.de/DE/Infothek/Anschriften_Links/anschriften_links-node.html.      Kontaktformular  Art und Zweck der Verarbeitung:  Die von Ihnen eingegebenen Daten werden zum Zweck der individuellen Kommunikation mit Ihnen gespeichert. Hierfür      ist die Angabe einer validen E-Mail-Adresse sowie Ihres Namens erforderlich. Diese dient der Zuordnung der      Anfrage und der anschließenden Beantwortung derselben. Die Angabe weiterer Daten ist optional.  Rechtsgrundlage:  Die Verarbeitung der in das Kontaktformular eingegebenen Daten erfolgt auf der Grundlage eines berechtigten      Interesses (Art. 6 Abs. 1 lit. f DSGVO).  Durch Bereitstellung des Kontaktformulars möchten wir Ihnen eine unkomplizierte Kontaktaufnahme ermöglichen. Ihre      gemachten Angaben werden zum Zwecke der Bearbeitung der Anfrage sowie für mögliche Anschlussfragen gespeichert.    Sofern Sie mit uns Kontakt aufnehmen, um ein Angebot zu erfragen, erfolgt die Verarbeitung der in das      Kontaktformular eingegebenen Daten zur Durchführung vorvertraglicher Maßnahmen (Art. 6 Abs. 1 lit. b DSGVO).  Empfänger:  Empfänger der Daten sind ggf. Auftragsverarbeiter.    Speicherdauer:  Daten werden spätestens 6 Monate nach Bearbeitung der Anfrage gelöscht.  Sofern es zu einem Vertragsverhältnis kommt, unterliegen wir den gesetzlichen Aufbewahrungsfristen nach HGB und      löschen Ihre Daten nach Ablauf dieser Fristen.   Bereitstellung vorgeschrieben oder erforderlich:  Die Bereitstellung Ihrer personenbezogenen Daten erfolgt freiwillig. Wir können Ihre Anfrage jedoch nur      bearbeiten, sofern Sie uns Ihren Namen, Ihre E-Mail-Adresse und den Grund der Anfrage mitteilen.    Verwendung von Scriptbibliotheken (Google Webfonts)  Um unsere Inhalte browserübergreifend korrekt und grafisch ansprechend darzustellen, verwenden wir auf dieser      Website „Google Web Fonts“ der Google LLC (1600 Amphitheatre Parkway, Mountain View, CA 94043, USA; nachfolgend      „Google“) zur Darstellung von Schriften.  Weitere Informationen zu Google Web Fonts finden Sie unter https://developers.google.com/fonts/faq und in der      Datenschutzerklärung von Google: https://www.google.com/policies/privacy/.      Information über Ihr Widerspruchsrecht nach Art. 21 DSGVO  Einzelfallbezogenes Widerspruchsrecht  Sie haben das Recht, aus Gründen, die sich aus Ihrer besonderen Situation ergeben, jederzeit gegen die      Verarbeitung Sie betreffender personenbezogener Daten, die aufgrund Art. 6 Abs. 1 lit. f DSGVO      (Datenverarbeitung auf der Grundlage einer Interessenabwägung) erfolgt, Widerspruch einzulegen; dies gilt auch      für ein auf diese Bestimmung gestütztes Profiling im Sinne von Art. 4 Nr. 4 DSGVO.  Legen Sie Widerspruch ein, werden wir Ihre personenbezogenen Daten nicht mehr verarbeiten, es sei denn, wir      können zwingende schutzwürdige Gründe für die Verarbeitung nachweisen, die Ihre Interessen, Rechte und      Freiheiten überwiegen, oder die Verarbeitung dient der Geltendmachung, Ausübung oder Verteidigung von      Rechtsansprüchen.  Empfänger eines Widerspruchs  Oliver Mänder    Änderung unserer Datenschutzbestimmungen  Wir behalten uns vor, diese Datenschutzerklärung anzupassen, damit sie stets den aktuellen rechtlichen      Anforderungen entspricht oder um Änderungen unserer Leistungen in der Datenschutzerklärung umzusetzen, z.B. bei      der Einführung neuer Services. Für Ihren erneuten Besuch gilt dann die neue Datenschutzerklärung.  Fragen an den Datenschutzbeauftragten  Wenn Sie Fragen zum Datenschutz haben, schreiben Sie uns bitte eine E-Mail oder wenden Sie sich direkt an die für      den Datenschutz verantwortliche Person in unserer Organisation:  Oliver Mänder  Die Datenschutzerklärung wurde mithilfe der activeMind AG erstellt, den Experten für externe Datenschutzbeauftragte (Version #2020-09-30).'\n    var COMPONENTS = [{'name': 'AnswersComponent', 'selector': 'app-answers'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DataPrivacyComponent', 'selector': 'app-data-privacy'},{'name': 'DuelOverviewComponent', 'selector': 'app-duel-overview'},{'name': 'DuelPlayComponent', 'selector': 'app-duel-play'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'ModalNewDuelComponent', 'selector': 'app-modal-new-duel'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'StartpageComponent', 'selector': 'app-startpage'},{'name': 'UserStartpageComponent', 'selector': 'app-user-startpage'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataPrivacyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDuel\n                            \n                            \n                                getQuestion\n                            \n                            \n                                listenToDuels\n                            \n                            \n                                setDuelFinishOnUsers\n                            \n                            \n                                setDuelForPlayerOne\n                            \n                            \n                                setDuelForPlayerTwo\n                            \n                            \n                                setDuelScores\n                            \n                            \n                                showAllUsers\n                            \n                            \n                                startNewDuel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/data.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDuel\n                        \n                    \n                \n            \n            \n                \ngetDuel(duelId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/data.service.ts:65\n                \n            \n\n\n            \n                \n                    Listens to the duel data to show changes immediately.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    duelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe id of the duel\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The duel data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getQuestion\n                        \n                    \n                \n            \n            \n                \ngetQuestion()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/data.service.ts:76\n                \n            \n\n\n            \n                \n                    Returns the specified question.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The data of the question\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listenToDuels\n                        \n                    \n                \n            \n            \n                \nlistenToDuels(userid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/data.service.ts:198\n                \n            \n\n\n            \n                \n                    Listen to the duels to display the changes immediately.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe user's id\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The user's data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDuelFinishOnUsers\n                        \n                    \n                \n            \n            \n                \nsetDuelFinishOnUsers(playerOneUId: string, playerTwoUId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/data.service.ts:183\n                \n            \n\n\n            \n                \n                    Removes the opponent from active opponents.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    playerOneUId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nPlayer one's uid\n\n\n                                    \n                                \n                                \n                                    playerTwoUId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nPlayer two's uid\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDuelForPlayerOne\n                        \n                    \n                \n            \n            \n                \nsetDuelForPlayerOne(duelData: any, round: number, score: number, duelId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/data.service.ts:117\n                \n            \n\n\n            \n                \n                    Changes the duel data in the firestore for player 1\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    duelData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe data of the duel\n\n\n                                    \n                                \n                                \n                                    round\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe round which was just played\n\n\n                                    \n                                \n                                \n                                    score\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe score the user got this round\n\n\n                                    \n                                \n                                \n                                    duelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe id of the duel\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDuelForPlayerTwo\n                        \n                    \n                \n            \n            \n                \nsetDuelForPlayerTwo(duelData: any, round: number, score: number, duelId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/data.service.ts:151\n                \n            \n\n\n            \n                \n                    Changes the duel data in the firestore for player 2\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    duelData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe data of the duel\n\n\n                                    \n                                \n                                \n                                    round\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe round which was just played\n\n\n                                    \n                                \n                                \n                                    score\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe score the user got this round\n\n\n                                    \n                                \n                                \n                                    duelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe id of the duel\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDuelScores\n                        \n                    \n                \n            \n            \n                \nsetDuelScores(duelId: string, player: number, round: number, score: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/data.service.ts:91\n                \n            \n\n\n            \n                \n                    Changes the duel score in the firestore\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    duelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe id of the duel\n\n\n                                    \n                                \n                                \n                                    player\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe player who just played (1 or 2)\n\n\n                                    \n                                \n                                \n                                    round\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe round which was just played\n\n\n                                    \n                                \n                                \n                                    score\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe score the user got this round\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        true\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAllUsers\n                        \n                    \n                \n            \n            \n                \nshowAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/data.service.ts:19\n                \n            \n\n\n            \n                \n                    Gets the data for all the users.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        All user data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startNewDuel\n                        \n                    \n                \n            \n            \n                \nstartNewDuel(username: string, userid: string, opponentUsername: string, uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/data.service.ts:33\n                \n            \n\n\n            \n                \n                    Creates a new duel between those two users.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe user's username\n\n\n                                    \n                                \n                                \n                                    userid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe user's user ID\n\n\n                                    \n                                \n                                \n                                    opponentUsername\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe opponent's username\n\n\n                                    \n                                \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe opponent's user ID\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { map, take } from 'rxjs/operators';\n\nimport firebase from 'firebase/app';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private firestore: AngularFirestore) { }\n\n  /**\n   * Gets the data for all the users.\n   *\n   * @returns All user data\n   */\n  showAllUsers() {\n    return this.firestore.collection('users').doc('userlist').get().pipe(take(1), map((res) => {\n      return res.data();\n    }));\n  }\n\n  /**\n   * Creates a new duel between those two users.\n   *\n   * @param username - The user's username\n   * @param userid - The user's user ID\n   * @param opponentUsername - The opponent's username\n   * @param uid - The opponent's user ID\n   */\n  startNewDuel(username: string, userid: string, opponentUsername: string, uid: string) {\n    let newDuelId = '';\n    this.firestore.collection('duels').add({ access: [userid, uid] }).then((docRes) => {\n      newDuelId = docRes.id;\n      // this.firestore.collection('users').doc(userid).get().pipe(take(1)).subscribe((res) => {\n      //   let duels: any = res.data();\n      //   duels.duels.push(newDuelId);\n      //   console.log(duels);\n      //   this.firestore.collection('users').doc(userid).update(duels);\n      // });\n      this.firestore.collection('users').doc(userid).update({\n        duels: firebase.firestore.FieldValue.arrayUnion({ duelId: newDuelId, opponent: opponentUsername, finished: false })\n      });\n      this.firestore.collection('users').doc(uid).update({\n        duels: firebase.firestore.FieldValue.arrayUnion({ duelId: newDuelId, opponent: username, finished: false })\n      });\n      this.firestore.collection('users').doc(userid).update({\n        activeOpponents: firebase.firestore.FieldValue.arrayUnion(uid)\n      });\n      this.firestore.collection('users').doc(uid).update({\n        activeOpponents: firebase.firestore.FieldValue.arrayUnion(userid)\n      });\n      this.firestore.collection('duels').doc(newDuelId).update({ playerOne: username, playerTwo: opponentUsername, finished: false, playerOneScore: 0, playerTwoScore: 0, playerOneRoundsPlayed: 0, playerOneRoundScoring: [0, 0, 0, 0, 0, 0], playerTwoRoundsPlayed: 0, playerTwoRoundScoring: [0, 0, 0, 0, 0, 0], playerOnTheClock: 1, winners: [''] });\n    });\n  }\n\n  /**\n   * Listens to the duel data to show changes immediately.\n   *\n   * @param duelId - The id of the duel\n   * @returns The duel data\n   */\n  getDuel(duelId: string) {\n    return this.firestore.collection('duels').doc(duelId).valueChanges().pipe(map((duel: any) => {\n      return duel;\n    }));\n  }\n\n  /**\n   * Returns the specified question.\n   *\n   * @returns The data of the question\n   */\n  getQuestion() {\n    return this.firestore.collection('questionAnswer').valueChanges().pipe(take(1), map((resData) => {\n      return resData;\n    }));\n  }\n\n  /**\n   * Changes the duel score in the firestore\n   *\n   * @param duelId - The id of the duel\n   * @param player - The player who just played (1 or 2)\n   * @param round - The round which was just played\n   * @param score - The score the user got this round\n   * @returns true\n   */\n  setDuelScores(duelId: string, player: number, round: number, score: number) {\n    return this.firestore.collection('duels').doc(duelId).get().pipe(take(1), map((duel: any) => {\n      let duelData = duel.data();\n      if (duelData.playerOnTheClock === 1) {\n        duelData.playerOnTheClock = 2;\n      } else {\n        duelData.playerOnTheClock = 1;\n      }\n      if (player === 1) {\n        this.setDuelForPlayerOne(duelData, round, score, duelId);\n      } else {\n        this.setDuelForPlayerTwo(duelData, round, score, duelId);\n      }\n      console.log(duelData.playerOneRoundScoring);\n      return true;\n    }));\n  }\n\n  /**\n   * Changes the duel data in the firestore for player 1\n   *\n   * @param duelData - The data of the duel\n   * @param round - The round which was just played\n   * @param score - The score the user got this round\n   * @param duelId - The id of the duel\n   */\n  setDuelForPlayerOne(duelData: any, round: number, score: number, duelId: string) {\n    duelData.playerOneRoundScoring[round] = score;\n    duelData.playerOneRoundsPlayed++;\n    duelData.playerOneScore += score;\n    if (duelData.playerOneRoundsPlayed === 6 && duelData.playerTwoRoundsPlayed === 6) {\n      duelData.finished = true;\n      duelData.playerOnTheClock = 0;\n      this.setDuelFinishOnUsers(duelData.access[0], duelData.access[1]);\n      if (duelData.playerOneScore > duelData.playerTwoScore) {\n        duelData.winners = [duelData.playerOne];\n      } else if (duelData.playerOneScore  duelData.playerTwoScore) {\n        duelData.winners = [duelData.playerOne];\n      } else if (duelData.playerOneScore  {\n      return userData;\n    }))\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DuelOverviewComponent.html":{"url":"components/DuelOverviewComponent.html","title":"component - DuelOverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DuelOverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/duel-overview/duel-overview.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-duel-overview\n            \n\n            \n                styleUrls\n                ./duel-overview.component.css\n            \n\n\n\n            \n                templateUrl\n                ./duel-overview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isDuelInfoSet\n                            \n                            \n                                isPlayerOnTheClock\n                            \n                            \n                                opponent\n                            \n                            \n                                opponentRoundsScoring\n                            \n                            \n                                opponentScoring\n                            \n                            \n                                player\n                            \n                            \n                                playerId\n                            \n                            \n                                playerWinners\n                            \n                            \n                                routeSub\n                            \n                            \n                                scoreSub\n                            \n                            \n                                username\n                            \n                            \n                                userRoundsScoring\n                            \n                            \n                                userScoring\n                            \n                            \n                                userSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkForRoute\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                playRound\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, dataService: DataService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/duel-overview/duel-overview.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkForRoute\n                        \n                    \n                \n            \n            \n                \ncheckForRoute()\n                \n            \n\n\n            \n                \n                    Defined in src/app/duel-overview/duel-overview.component.ts:51\n                \n            \n\n\n            \n                \n                    Checks for the route to get the duel information and prepares it to be displayed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/duel-overview/duel-overview.component.ts:104\n                \n            \n\n\n            \n                \n                    Unsubscribes to all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/duel-overview/duel-overview.component.ts:40\n                \n            \n\n\n            \n                \n                    Listens to the user data to get the user information and initiates the route check.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playRound\n                        \n                    \n                \n            \n            \n                \nplayRound()\n                \n            \n\n\n            \n                \n                    Defined in src/app/duel-overview/duel-overview.component.ts:92\n                \n            \n\n\n            \n                \n                    Initiates the next round when it's the user's turn.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isDuelInfoSet\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-overview/duel-overview.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPlayerOnTheClock\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-overview/duel-overview.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        opponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-overview/duel-overview.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        opponentRoundsScoring\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [0, 0, 0, 0, 0, 0]\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-overview/duel-overview.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        opponentScoring\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-overview/duel-overview.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        player\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-overview/duel-overview.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-overview/duel-overview.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerWinners\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['']\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-overview/duel-overview.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-overview/duel-overview.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scoreSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-overview/duel-overview.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-overview/duel-overview.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userRoundsScoring\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [0, 0, 0, 0, 0, 0]\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-overview/duel-overview.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userScoring\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-overview/duel-overview.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-overview/duel-overview.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { AuthService } from '../auth/auth.service';\nimport { DataService } from '../shared/data.service';\n\n@Component({\n  selector: 'app-duel-overview',\n  templateUrl: './duel-overview.component.html',\n  styleUrls: ['./duel-overview.component.css']\n})\nexport class DuelOverviewComponent implements OnInit, OnDestroy {\n\n  routeSub: Subscription;\n\n  username = '';\n  userScoring = 0;\n  opponentScoring = 0;\n  opponent = '';\n  userRoundsScoring = [0, 0, 0, 0, 0, 0];\n  opponentRoundsScoring = [0, 0, 0, 0, 0, 0];\n\n  player = -1;\n  playerId = '';\n  isPlayerOnTheClock = false;\n\n  isDuelInfoSet = false;\n\n  playerWinners = [''];\n\n  userSub: Subscription;\n  scoreSub: Subscription;\n\n  constructor(private route: ActivatedRoute, private router: Router, private dataService: DataService, private authService: AuthService) { }\n\n  /**\n   * Listens to the user data to get the user information and initiates the route check.\n   */\n  ngOnInit(): void {\n    this.userSub = this.authService.user.subscribe((res) => {\n      this.username = res.username;\n      this.playerId = res.id;\n      this.checkForRoute();\n    });\n  }\n\n  /**\n   * Checks for the route to get the duel information and prepares it to be displayed.\n   */\n  checkForRoute() {\n    this.routeSub = this.route.params.subscribe((params) => {\n      this.scoreSub = this.dataService.getDuel(params['id']).subscribe((duel: any) => {\n        if (duel.playerOne === this.username) {\n          this.opponent = duel.playerTwo;\n          this.userScoring = duel.playerOneScore;\n          this.opponentScoring = duel.playerTwoScore;\n          this.userRoundsScoring = duel.playerOneRoundScoring;\n          this.opponentRoundsScoring = duel.playerTwoRoundScoring;\n        } else {\n          this.opponent = duel.playerOne;\n          this.userScoring = duel.playerTwoScore;\n          this.opponentScoring = duel.playerOneScore;\n          this.userRoundsScoring = duel.playerTwoRoundScoring;\n          this.opponentRoundsScoring = duel.playerOneRoundScoring;\n        }\n\n        this.playerWinners = duel.winners;\n\n        if (this.playerId === duel.access[0]) {\n          this.player = 1;\n        } else {\n          this.player = 2;\n        }\n\n        if (this.player === 1 && this.player === duel.playerOnTheClock && duel.playerOneRoundsPlayed \n    \n\n    \n        \n  \n    Back\n  \n  \n    Loading...\n  \n  \n    \n      \n        {{ username }}\n        {{ userScoring }}\n        -\n        {{ opponentScoring }}\n        {{ opponent }}\n      \n       0\">\n        The winner is {{ playerWinners[0] }}!\n         1\">It's a tie between {{ playerWinners[0] }} and {{ playerWinners[1] }}! -->\n         1\">It's a tie!\n      \n      \n        {{ userRoundsScoring[i] }}\n        - Round {{ i+1 }} -\n        {{ opponentRoundsScoring[i] }}\n      \n      \n        \n          Your opponent has to play!\n        \n        Play\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./duel-overview.component.css\n                \n                .duel-overview-container {\n  display: flex;\n  justify-content: center;\n  min-height: 300px;\n  height: 100%;\n}\n\n.back-button-container {\n  width: 60px;\n}\n\n.duel-overview-main-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 16px;\n  background-color: rgb(255, 255, 255);\n  border-radius: 8px;\n}\n\n.duel-scoring-container {\n  display: flex;\n}\n\n.buttons-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.winner-msg-container {\n  border-radius: 8px;\n}\n\n.wait-for-opponent-container {\n  border-radius: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Back        Loading...                      {{ username }}        {{ userScoring }}        -        {{ opponentScoring }}        {{ opponent }}             0\">        The winner is {{ playerWinners[0] }}!         1\">It\\'s a tie between {{ playerWinners[0] }} and {{ playerWinners[1] }}! -->         1\">It\\'s a tie!                    {{ userRoundsScoring[i] }}        - Round {{ i+1 }} -        {{ opponentRoundsScoring[i] }}                              Your opponent has to play!                Play            '\n    var COMPONENTS = [{'name': 'AnswersComponent', 'selector': 'app-answers'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DataPrivacyComponent', 'selector': 'app-data-privacy'},{'name': 'DuelOverviewComponent', 'selector': 'app-duel-overview'},{'name': 'DuelPlayComponent', 'selector': 'app-duel-play'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'ModalNewDuelComponent', 'selector': 'app-modal-new-duel'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'StartpageComponent', 'selector': 'app-startpage'},{'name': 'UserStartpageComponent', 'selector': 'app-user-startpage'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DuelOverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DuelPlayComponent.html":{"url":"components/DuelPlayComponent.html","title":"component - DuelPlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DuelPlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/duel-play/duel-play.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-duel-play\n            \n\n            \n                styleUrls\n                ./duel-play.component.css\n            \n\n\n\n            \n                templateUrl\n                ./duel-play.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answers\n                            \n                            \n                                divStyle\n                            \n                            \n                                player\n                            \n                            \n                                question\n                            \n                            \n                                questionID\n                            \n                            \n                                questionsInRound\n                            \n                            \n                                rightAnswer\n                            \n                            \n                                round\n                            \n                            \n                                roundScore\n                            \n                            \n                                timeLeft\n                            \n                            \n                                timeLeftInterval\n                            \n                            \n                                timeUp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateTimeLeft\n                            \n                            \n                                getDuelData\n                            \n                            \n                                initiateQuestion\n                            \n                            \n                                nextQuestion\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAnswered\n                            \n                            \n                                questionAnswered\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, dataService: DataService, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/duel-play/duel-play.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateTimeLeft\n                        \n                    \n                \n            \n            \n                \ncalculateTimeLeft()\n                \n            \n\n\n            \n                \n                    Defined in src/app/duel-play/duel-play.component.ts:87\n                \n            \n\n\n            \n                \n                    Starts an interval to limit the user's time to answer to 10 seconds.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDuelData\n                        \n                    \n                \n            \n            \n                \ngetDuelData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/duel-play/duel-play.component.ts:43\n                \n            \n\n\n            \n                \n                    Gets the data for the duel and start the duel round\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initiateQuestion\n                        \n                    \n                \n            \n            \n                \ninitiateQuestion()\n                \n            \n\n\n            \n                \n                    Defined in src/app/duel-play/duel-play.component.ts:71\n                \n            \n\n\n            \n                \n                    Gets a random question from the database and writes the data into the variables.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextQuestion\n                        \n                    \n                \n            \n            \n                \nnextQuestion()\n                \n            \n\n\n            \n                \n                    Defined in src/app/duel-play/duel-play.component.ts:125\n                \n            \n\n\n            \n                \n                    Either gets the next question or takes the user back to the duel overview page when the round is finished.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/duel-play/duel-play.component.ts:140\n                \n            \n\n\n            \n                \n                    Clears the interval\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/duel-play/duel-play.component.ts:36\n                \n            \n\n\n            \n                \n                    Initiates the duel round\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAnswered\n                        \n                    \n                \n            \n            \n                \nonAnswered(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/duel-play/duel-play.component.ts:103\n                \n            \n\n\n            \n                \n                    Starts the question evaluation.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe id of the answer\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questionAnswered\n                        \n                    \n                \n            \n            \n                \nquestionAnswered(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/duel-play/duel-play.component.ts:112\n                \n            \n\n\n            \n                \n                    Evaluates the answer and clears the timer.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe id of the answer\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-play/duel-play.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        divStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '100%'\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-play/duel-play.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        player\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-play/duel-play.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-play/duel-play.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questionID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-play/duel-play.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questionsInRound\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-play/duel-play.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rightAnswer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-play/duel-play.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        round\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-play/duel-play.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roundScore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-play/duel-play.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeLeft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-play/duel-play.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeLeftInterval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-play/duel-play.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeUp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/duel-play/duel-play.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { AuthService } from '../auth/auth.service';\nimport { DataService } from '../shared/data.service';\n\n@Component({\n  selector: 'app-duel-play',\n  templateUrl: './duel-play.component.html',\n  styleUrls: ['./duel-play.component.css']\n})\nexport class DuelPlayComponent implements OnInit, OnDestroy {\n\n  question: string = '';\n  answers: string[] = [];\n  rightAnswer: number = -1;\n  questionID: number = -1;\n  timeLeft: number = 10;\n  timeUp: boolean = false;\n\n  timeLeftInterval: any;\n\n  divStyle: string = '100%';\n\n  player = -1;\n  round = -1;\n  roundScore = 0;\n  questionsInRound = 0;\n\n  constructor(private authService: AuthService, private dataService: DataService, private route: ActivatedRoute, private router: Router) { }\n\n  /**\n   * Initiates the duel round\n   */\n  ngOnInit(): void {\n    this.getDuelData();\n  }\n\n  /**\n   * Gets the data for the duel and start the duel round\n   */\n  getDuelData() {\n    this.route.params.pipe(take(1)).subscribe((params) => {\n      this.dataService.getDuel(params['id']).pipe(take(1)).subscribe((duel: any) => {\n        this.authService.user.pipe(take(1)).subscribe((res) => {\n          if (duel.finished) {\n            this.router.navigateByUrl('/');\n            return;\n          }\n          const id = res.id;\n          if (id === duel.access[0]) {\n            this.player = 1;\n          } else {\n            this.player = 2;\n          }\n          if (this.player === 1) {\n            this.round = duel.playerOneRoundsPlayed;\n          } else {\n            this.round = duel.playerTwoRoundsPlayed;\n          }\n          this.initiateQuestion();\n        });\n      });\n    });\n  }\n\n  /**\n   * Gets a random question from the database and writes the data into the variables.\n   */\n  initiateQuestion() {\n    this.dataService.getQuestion().pipe(take(1)).subscribe((data: any) => {\n      this.timeLeft = 10;\n      this.timeUp = false;\n      this.calculateTimeLeft();\n      this.questionID = Math.floor(Math.random() * data.length);\n      this.question = data[this.questionID].question;\n      this.answers = data[this.questionID].answers;\n      this.rightAnswer = data[this.questionID].rightAnswer;\n      console.log(data);\n    });\n  }\n\n  /**\n   * Starts an interval to limit the user's time to answer to 10 seconds.\n   */\n  calculateTimeLeft() {\n    this.timeLeftInterval = setInterval(() => {\n      this.timeLeft--;\n      this.divStyle = this.timeLeft + '0%';\n      console.log(this.timeLeft);\n      if (this.timeLeft === 0) {\n        this.questionAnswered(-1);\n      }\n    }, 1000);\n  }\n\n  /**\n   * Starts the question evaluation.\n   *\n   * @param id - The id of the answer\n   */\n  onAnswered(id: number) {\n    this.questionAnswered(id);\n  }\n\n  /**\n   * Evaluates the answer and clears the timer.\n   *\n   * @param id - The id of the answer\n   */\n  questionAnswered(id: number) {\n    if (id === this.rightAnswer) {\n      this.roundScore++;\n      console.log('RIGHT');\n    }\n    this.questionsInRound++;\n    this.timeUp = true;\n    clearInterval(this.timeLeftInterval);\n  }\n\n  /**\n   * Either gets the next question or takes the user back to the duel overview page when the round is finished.\n   */\n  nextQuestion() {\n    if (this.questionsInRound  {\n        this.dataService.setDuelScores(params['id'], this.player, this.round, this.roundScore).subscribe(() => {\n          this.router.navigate(['..'], { relativeTo: this.route });\n        });\n      });\n    }\n  }\n\n  /**\n   * Clears the interval\n   */\n  ngOnDestroy(): void {\n    clearInterval(this.timeLeftInterval);\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n\n  {{ questionsInRound \n\n\n    \n\n    \n                \n                    ./duel-play.component.css\n                \n                .buttons {\n  display: flex;\n  justify-content: flex-end;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ questionsInRound '\n    var COMPONENTS = [{'name': 'AnswersComponent', 'selector': 'app-answers'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DataPrivacyComponent', 'selector': 'app-data-privacy'},{'name': 'DuelOverviewComponent', 'selector': 'app-duel-overview'},{'name': 'DuelPlayComponent', 'selector': 'app-duel-play'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'ModalNewDuelComponent', 'selector': 'app-modal-new-duel'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'StartpageComponent', 'selector': 'app-startpage'},{'name': 'UserStartpageComponent', 'selector': 'app-user-startpage'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DuelPlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/footer/footer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/footer/footer.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Quiz With Friends\n  \n  \n    Impressum - Legal Notice\n    Datenschutz - Data Privacy\n  \n\n\n    \n\n    \n                \n                    ./footer.component.css\n                \n                footer {\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  background-color: rgb(230, 230, 230);\n}\n\n.links {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\na {\n  text-decoration: none;\n  color: black;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Quiz With Friends        Impressum - Legal Notice    Datenschutz - Data Privacy  '\n    var COMPONENTS = [{'name': 'AnswersComponent', 'selector': 'app-answers'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DataPrivacyComponent', 'selector': 'app-data-privacy'},{'name': 'DuelOverviewComponent', 'selector': 'app-duel-overview'},{'name': 'DuelPlayComponent', 'selector': 'app-duel-play'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'ModalNewDuelComponent', 'selector': 'app-modal-new-duel'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'StartpageComponent', 'selector': 'app-startpage'},{'name': 'UserStartpageComponent', 'selector': 'app-user-startpage'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authenticated\n                            \n                            \n                                authSubscription\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAuthButton\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:49\n                \n            \n\n\n            \n                \n                    Unsubscribes to the authentication subscription.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:23\n                \n            \n\n\n            \n                \n                    Checks for a logged in user and saves his username.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAuthButton\n                        \n                    \n                \n            \n            \n                \nonAuthButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:38\n                \n            \n\n\n            \n                \n                    Controls the login/signup/logout button.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/header/header.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/header/header.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/header/header.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n  authenticated = false;\n  username = '';\n\n  authSubscription: Subscription;\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  /**\n   * Checks for a logged in user and saves his username.\n   */\n  ngOnInit(): void {\n    this.authSubscription = this.authService.user.subscribe((user) => {\n      if (user) {\n        this.authenticated = true;\n        this.username = user.username;\n      } else {\n        this.authenticated = false;\n        this.username = '';\n      }\n    });\n  }\n\n  /**\n   * Controls the login/signup/logout button.\n   */\n  onAuthButton() {\n    if (this.authenticated) {\n      this.authService.logout();\n    } else {\n      this.router.navigate(['/auth']);\n    }\n  }\n\n  /**\n   * Unsubscribes to the authentication subscription.\n   */\n  ngOnDestroy(): void {\n    this.authSubscription.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Quiz with Friends\n    \n  \n  \n    \n      Username: {{ username }}\n    \n    \n      My Duels\n    \n    \n      {{ authenticated ? 'Log Out' : 'Log In / Sign Up' }}\n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.css\n                \n                .header-container {\n  display: flex;\n  justify-content: space-between;\n}\n\n.home-link {\n  color: black;\n  text-decoration: none;\n}\n\n.header-buttons {\n  display: flex;\n  align-items: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Quiz with Friends                  Username: {{ username }}              My Duels              {{ authenticated ? \\'Log Out\\' : \\'Log In / Sign Up\\' }}      '\n    var COMPONENTS = [{'name': 'AnswersComponent', 'selector': 'app-answers'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DataPrivacyComponent', 'selector': 'app-data-privacy'},{'name': 'DuelOverviewComponent', 'selector': 'app-duel-overview'},{'name': 'DuelPlayComponent', 'selector': 'app-duel-play'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'ModalNewDuelComponent', 'selector': 'app-modal-new-duel'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'StartpageComponent', 'selector': 'app-startpage'},{'name': 'UserStartpageComponent', 'selector': 'app-user-startpage'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LegalNoticeComponent.html":{"url":"components/LegalNoticeComponent.html","title":"component - LegalNoticeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LegalNoticeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/legal-notice/legal-notice.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-legal-notice\n            \n\n            \n                styleUrls\n                ./legal-notice.component.css\n            \n\n\n\n            \n                templateUrl\n                ./legal-notice.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/legal-notice/legal-notice.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/legal-notice/legal-notice.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-legal-notice',\n  templateUrl: './legal-notice.component.html',\n  styleUrls: ['./legal-notice.component.css']\n})\nexport class LegalNoticeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  Impressum\n  Angaben gemäß § 5 TMG:\n  Oliver Mänder\n  Postanschrift:\n  Hauptstraße12345 Bodensee -->\n  Kontakt:\n  \n       -->\n      E-Mail: oliver.maender@gmail.com\n  \n  \n  Vertreten durch:\n  Oliver Mänder -->\n  \n  \n  \n  Hinweise zur Website\n  \n  Urheberrechtliche Hinweise\n  Created my logo at LogoMakr.com\n  \n  Information gemäß § 36 VSBG\n  Gemäß § 36 VSBG (Verbraucherstreitbeilegungsgesetz – Gesetz über die alternative Streitbeilegung in\n      Verbrauchersachen) erklärt der Betreiber dieser Website:\n  Wir sind weder bereit noch verpflichtet, an Streitbeilegungsverfahren vor einer Verbraucherschlichtungsstelle\n      teilzunehmen.\n  \n  Das Impressum wurde mit dem Impressums-Generator der activeMind\n              AG erstellt.\n\n\n    \n\n    \n                \n                    ./legal-notice.component.css\n                \n                .legal-notice-container h1 {\n  font-size: 32px;\n  font-weight: 700;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Impressum  Angaben gemäß § 5 TMG:  Oliver Mänder  Postanschrift:  Hauptstraße12345 Bodensee -->  Kontakt:         -->      E-Mail: oliver.maender@gmail.com      Vertreten durch:  Oliver Mänder -->        Hinweise zur Website    Urheberrechtliche Hinweise  Created my logo at LogoMakr.com    Information gemäß § 36 VSBG  Gemäß § 36 VSBG (Verbraucherstreitbeilegungsgesetz – Gesetz über die alternative Streitbeilegung in      Verbrauchersachen) erklärt der Betreiber dieser Website:  Wir sind weder bereit noch verpflichtet, an Streitbeilegungsverfahren vor einer Verbraucherschlichtungsstelle      teilzunehmen.    Das Impressum wurde mit dem Impressums-Generator der activeMind              AG erstellt.'\n    var COMPONENTS = [{'name': 'AnswersComponent', 'selector': 'app-answers'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DataPrivacyComponent', 'selector': 'app-data-privacy'},{'name': 'DuelOverviewComponent', 'selector': 'app-duel-overview'},{'name': 'DuelPlayComponent', 'selector': 'app-duel-play'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'ModalNewDuelComponent', 'selector': 'app-modal-new-duel'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'StartpageComponent', 'selector': 'app-startpage'},{'name': 'UserStartpageComponent', 'selector': 'app-user-startpage'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LegalNoticeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalNewDuelComponent.html":{"url":"components/ModalNewDuelComponent.html","title":"component - ModalNewDuelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalNewDuelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modal-new-duel/modal-new-duel.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal-new-duel\n            \n\n            \n                styleUrls\n                ./modal-new-duel.component.css\n            \n\n\n\n            \n                templateUrl\n                ./modal-new-duel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                startNewDuel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                allUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeModalEvent\n                            \n                            \n                                newOpponent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modal-new-duel/modal-new-duel.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        allUsers\n                    \n                \n                \n                    \n                        Type :     {}\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/modal-new-duel/modal-new-duel.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeModalEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modal-new-duel/modal-new-duel.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        newOpponent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modal-new-duel/modal-new-duel.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modal-new-duel/modal-new-duel.component.ts:33\n                \n            \n\n\n            \n                \n                    Closes the modal when the user does not choose an opponent and closes the modal via button.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modal-new-duel/modal-new-duel.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startNewDuel\n                        \n                    \n                \n            \n            \n                \nstartNewDuel(uid: string, opponentUsername: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modal-new-duel/modal-new-duel.component.ts:26\n                \n            \n\n\n            \n                \n                    Starts the routine to create a new duel when possible.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe user's id\n\n\n                                    \n                                \n                                \n                                    opponentUsername\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe opponent's username\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-modal-new-duel',\n  templateUrl: './modal-new-duel.component.html',\n  styleUrls: ['./modal-new-duel.component.css']\n})\nexport class ModalNewDuelComponent implements OnInit {\n\n  @Input() allUsers = [];\n\n  @Output() newOpponent = new EventEmitter();\n  @Output() closeModalEvent = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Starts the routine to create a new duel when possible.\n   *\n   * @param uid - The user's id\n   * @param opponentUsername - The opponent's username\n   */\n  startNewDuel(uid: string, opponentUsername: string) {\n    this.newOpponent.emit({uid, opponentUsername});\n  }\n\n  /**\n   * Closes the modal when the user does not choose an opponent and closes the modal via button.\n   */\n  closeModal() {\n    this.closeModalEvent.emit(true);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Start a new duel\n      \n      \n        {{ user.username }}\n      \n      \n        Close\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./modal-new-duel.component.css\n                \n                .own-modal-background {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 999;\n  background-color: rgba(0, 0, 0, 0.6);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Start a new duel                    {{ user.username }}                    Close            '\n    var COMPONENTS = [{'name': 'AnswersComponent', 'selector': 'app-answers'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DataPrivacyComponent', 'selector': 'app-data-privacy'},{'name': 'DuelOverviewComponent', 'selector': 'app-duel-overview'},{'name': 'DuelPlayComponent', 'selector': 'app-duel-play'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'ModalNewDuelComponent', 'selector': 'app-modal-new-duel'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'StartpageComponent', 'selector': 'app-startpage'},{'name': 'UserStartpageComponent', 'selector': 'app-user-startpage'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalNewDuelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionComponent.html":{"url":"components/QuestionComponent.html","title":"component - QuestionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuestionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/duel-play/question/question.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question\n            \n\n            \n                styleUrls\n                ./question.component.css\n            \n\n\n\n            \n                templateUrl\n                ./question.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/duel-play/question/question.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/duel-play/question/question.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/duel-play/question/question.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.css']\n})\nexport class QuestionComponent implements OnInit {\n\n  @Input() question: string = '';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  {{ question }}\n\n\n    \n\n    \n                \n                    ./question.component.css\n                \n                .question-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgb(0, 120, 230);\n  /* background-image: linear-gradient(to bottom right, rgb(200, 200, 255), rgb(70, 70, 255)); */\n  padding: 32px;\n  margin: 16px;\n  border-radius: 8px;\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ question }}'\n    var COMPONENTS = [{'name': 'AnswersComponent', 'selector': 'app-answers'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DataPrivacyComponent', 'selector': 'app-data-privacy'},{'name': 'DuelOverviewComponent', 'selector': 'app-duel-overview'},{'name': 'DuelPlayComponent', 'selector': 'app-duel-play'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'ModalNewDuelComponent', 'selector': 'app-modal-new-duel'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'StartpageComponent', 'selector': 'app-startpage'},{'name': 'UserStartpageComponent', 'selector': 'app-user-startpage'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StartpageComponent.html":{"url":"components/StartpageComponent.html","title":"component - StartpageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StartpageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/startpage/startpage.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-startpage\n            \n\n            \n                styleUrls\n                ./startpage.component.css\n            \n\n\n\n            \n                templateUrl\n                ./startpage.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/startpage/startpage.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/startpage/startpage.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-startpage',\n  templateUrl: './startpage.component.html',\n  styleUrls: ['./startpage.component.css']\n})\nexport class StartpageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  Challenge your friends to quiz with you!\n  \n\n\n    \n\n    \n                \n                    ./startpage.component.css\n                \n                .startpage-container {\n  position: relative;\n  min-height: 80vh;\n}\n\n.startpage-text {\n  width: 300px;\n  position: absolute;\n  top: 160px;\n  right: 20%;\n}\n\n.question-example {\n  position: absolute;\n  right: 80px;\n  bottom: 160px;\n  width: 640px;\n  transform: rotate(350deg);\n}\n\n@media (max-width: 1050px) {\n  .question-example {\n    width: 480px;\n  }\n}\n\n@media (max-width: 800px) {\n  .question-example {\n    width: 320px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Challenge your friends to quiz with you!  '\n    var COMPONENTS = [{'name': 'AnswersComponent', 'selector': 'app-answers'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DataPrivacyComponent', 'selector': 'app-data-privacy'},{'name': 'DuelOverviewComponent', 'selector': 'app-duel-overview'},{'name': 'DuelPlayComponent', 'selector': 'app-duel-play'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'ModalNewDuelComponent', 'selector': 'app-modal-new-duel'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'StartpageComponent', 'selector': 'app-startpage'},{'name': 'UserStartpageComponent', 'selector': 'app-user-startpage'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StartpageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/user.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    token\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, email: string, id: string, _token: string, _tokenExpirationDate: Date)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/user.model.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _tokenExpirationDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/user.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/user.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/user.model.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        token\n                    \n                \n\n                \n                    \n                        gettoken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/user.model.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export class User {\n  constructor(\n    public username: string,\n    public email: string,\n    public id: string,\n    private _token: string,\n    private _tokenExpirationDate: Date\n  ) {}\n\n  get token() {\n    if (!this._tokenExpirationDate || new Date() > this._tokenExpirationDate) {\n      return null;\n    }\n    return this._token;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserStartpageComponent.html":{"url":"components/UserStartpageComponent.html","title":"component - UserStartpageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserStartpageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-startpage/user-startpage.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-startpage\n            \n\n            \n                styleUrls\n                ./user-startpage.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-startpage.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allActiveDuels\n                            \n                            \n                                allDuels\n                            \n                            \n                                allFinishedDuels\n                            \n                            \n                                allOpponents\n                            \n                            \n                                allUsers\n                            \n                            \n                                duelsReceived\n                            \n                            \n                                duelsSub\n                            \n                            \n                                infoMessage\n                            \n                            \n                                showAllUsersList\n                            \n                            \n                                showInfoMessage\n                            \n                            \n                                userid\n                            \n                            \n                                username\n                            \n                            \n                                userSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismissModal\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showAllUsers\n                            \n                            \n                                startNewDuel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-startpage/user-startpage.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismissModal\n                        \n                    \n                \n            \n            \n                \ndismissModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-startpage/user-startpage.component.ts:114\n                \n            \n\n\n            \n                \n                    Closes the modal for showing all users.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-startpage/user-startpage.component.ts:121\n                \n            \n\n\n            \n                \n                    Unsubscribes to the subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-startpage/user-startpage.component.ts:38\n                \n            \n\n\n            \n                \n                    Initiates all the routines needed to show the user's startpage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAllUsers\n                        \n                    \n                \n            \n            \n                \nshowAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-startpage/user-startpage.component.ts:70\n                \n            \n\n\n            \n                \n                    Gets all users in the database\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startNewDuel\n                        \n                    \n                \n            \n            \n                \nstartNewDuel(uid: string, opponentUsername: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-startpage/user-startpage.component.ts:94\n                \n            \n\n\n            \n                \n                    Creates a new duel if the player does not have an active duel against this player already.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe user's id\n\n\n                                    \n                                \n                                \n                                    opponentUsername\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe opponent's username\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        if there is already an active duel against this player\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allActiveDuels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/user-startpage/user-startpage.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allDuels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/user-startpage/user-startpage.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allFinishedDuels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/user-startpage/user-startpage.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allOpponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/user-startpage/user-startpage.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/user-startpage/user-startpage.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duelsReceived\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/user-startpage/user-startpage.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duelsSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-startpage/user-startpage.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        infoMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/user-startpage/user-startpage.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAllUsersList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/user-startpage/user-startpage.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInfoMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/user-startpage/user-startpage.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/user-startpage/user-startpage.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/user-startpage/user-startpage.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-startpage/user-startpage.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { AuthService } from '../auth/auth.service';\nimport { DataService } from '../shared/data.service';\n\n@Component({\n  selector: 'app-user-startpage',\n  templateUrl: './user-startpage.component.html',\n  styleUrls: ['./user-startpage.component.css']\n})\nexport class UserStartpageComponent implements OnInit, OnDestroy {\n\n  username = '';\n  userid = '';\n  userSub: Subscription;\n\n  showAllUsersList = false;\n\n  showInfoMessage = false;\n  infoMessage = '';\n\n  allUsers = [];\n\n  allDuels = [];\n  allActiveDuels = [];\n  allFinishedDuels = [];\n  allOpponents = [];\n  duelsSub: Subscription;\n\n  duelsReceived = false;\n\n  constructor(private authService: AuthService, private dataService: DataService) { }\n\n  /**\n   * Initiates all the routines needed to show the user's startpage\n   */\n  ngOnInit(): void {\n    console.log('onInitCalled');\n    this.userSub = this.authService.user.subscribe((res) => {\n      this.username = res.username;\n      this.userid = res.id;\n\n      console.log(\"userSubCalled\");\n\n      this.duelsSub = this.dataService.listenToDuels(this.userid).subscribe((userData: any) => {\n        console.log(\"duelsSubCalled\", userData);\n        this.allDuels = userData.duels;\n        this.allOpponents = userData.activeOpponents;\n        this.allActiveDuels = [];\n        this.allFinishedDuels = [];\n        for (let i = this.allDuels.length - 1; i >= 0; i--) {\n          const duel = this.allDuels[i];\n          if (this.allActiveDuels.some(e => e.opponent === duel.opponent)) {\n            this.allFinishedDuels.push(duel);\n          } else {\n            this.allActiveDuels.push(duel);\n          }\n        }\n        this.duelsReceived = true;\n        console.log(this.allDuels);\n        console.log(this.allOpponents);\n      });\n    });\n  }\n\n  /**\n   * Gets all users in the database\n   */\n  showAllUsers() {\n    this.dataService.showAllUsers().pipe(take(1)).subscribe((res: any) => {\n      this.allUsers = [];\n      console.log(res);\n      for (const user in res) {\n        if (Object.prototype.hasOwnProperty.call(res, user)) {\n          const element = res[user];\n          if (user != this.userid) {\n            this.allUsers.push({ username: element, uid: user });\n          }\n        }\n      }\n      this.showAllUsersList = true;\n      console.log(this.allUsers);\n    });\n  }\n\n  /**\n   * Creates a new duel if the player does not have an active duel against this player already.\n   *\n   * @param uid - The user's id\n   * @param opponentUsername - The opponent's username\n   * @returns if there is already an active duel against this player\n   */\n  startNewDuel(uid: string, opponentUsername: string) {\n    this.showAllUsersList = false;\n    if (this.allOpponents) {\n      for (let i = 0; i \n    \n\n    \n        \n  \n    \n      {{ infoMessage }}\n    \n    \n      New Duel\n      \n    \n  \n  \n    \n      Duels\n      \n        Active duels\n        \n          \n            {{ duel.opponent }}\n            Play\n          \n        \n        \n          Loading...\n        \n        Finished duels\n        \n          \n            {{ duel.opponent }}\n            Recap\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./user-startpage.component.css\n                \n                .user-startpage-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 80vh;\n}\n\n.pre-main-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.info-message-container {\n  padding: 16px;\n  border-radius: 8px;\n}\n\n.main-container {\n  display: flex;\n}\n\n.main-container p {\n  margin: 0;\n}\n\n.duels-overview {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n}\n\n.all-duels {\n  display: flex;\n  flex-direction: column;\n}\n\n.player-duels {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.player-duel-info-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: white;\n  border-radius: 8px;\n  flex: 1 1 40%;\n}\n\n.new-opponents {\n  width: 100%;\n  max-width: 120px;\n  display: flex;\n  flex-direction: column;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ infoMessage }}              New Duel                        Duels              Active duels                              {{ duel.opponent }}            Play                                    Loading...                Finished duels                              {{ duel.opponent }}            Recap                              '\n    var COMPONENTS = [{'name': 'AnswersComponent', 'selector': 'app-answers'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DataPrivacyComponent', 'selector': 'app-data-privacy'},{'name': 'DuelOverviewComponent', 'selector': 'app-duel-overview'},{'name': 'DuelPlayComponent', 'selector': 'app-duel-play'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'ModalNewDuelComponent', 'selector': 'app-modal-new-duel'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'StartpageComponent', 'selector': 'app-startpage'},{'name': 'UserStartpageComponent', 'selector': 'app-user-startpage'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserStartpageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                54 %\n                (6/11)\n            \n        \n        \n            \n                \n                src/app/data-privacy/data-privacy.component.ts\n            \n            component\n            DataPrivacyComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/duel-overview/duel-overview.component.ts\n            \n            component\n            DuelOverviewComponent\n            \n                20 %\n                (4/20)\n            \n        \n        \n            \n                \n                src/app/duel-play/answers/answers.component.ts\n            \n            component\n            AnswersComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/duel-play/duel-play.component.ts\n            \n            component\n            DuelPlayComponent\n            \n                36 %\n                (8/22)\n            \n        \n        \n            \n                \n                src/app/duel-play/question/question.component.ts\n            \n            component\n            QuestionComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/legal-notice/legal-notice.component.ts\n            \n            component\n            LegalNoticeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modal-new-duel/modal-new-duel.component.ts\n            \n            component\n            ModalNewDuelComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/shared/data.service.ts\n            \n            injectable\n            DataService\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/app/shared/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/startpage/startpage.component.ts\n            \n            component\n            StartpageComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/user-startpage/user-startpage.component.ts\n            \n            component\n            UserStartpageComponent\n            \n                25 %\n                (5/20)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.2.0\n        \n            @angular/common : ~12.2.0\n        \n            @angular/compiler : ~12.2.0\n        \n            @angular/core : ~12.2.0\n        \n            @angular/fire : ^6.1.5\n        \n            @angular/forms : ~12.2.0\n        \n            @angular/platform-browser : ~12.2.0\n        \n            @angular/platform-browser-dynamic : ~12.2.0\n        \n            @angular/router : ~12.2.0\n        \n            bootstrap : ^5.1.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n        \n            firebase : ^7.0 || ^8.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nQuizWithFriends\nThis project was generated with Angular CLI version 12.2.2.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAnswersComponent\n\nAnswersComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnswersComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAppModule -->\n\nAuthComponent->AppModule\n\n\n\n\n\nDataPrivacyComponent\n\nDataPrivacyComponent\n\nAppModule -->\n\nDataPrivacyComponent->AppModule\n\n\n\n\n\nDuelOverviewComponent\n\nDuelOverviewComponent\n\nAppModule -->\n\nDuelOverviewComponent->AppModule\n\n\n\n\n\nDuelPlayComponent\n\nDuelPlayComponent\n\nAppModule -->\n\nDuelPlayComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLegalNoticeComponent\n\nLegalNoticeComponent\n\nAppModule -->\n\nLegalNoticeComponent->AppModule\n\n\n\n\n\nModalNewDuelComponent\n\nModalNewDuelComponent\n\nAppModule -->\n\nModalNewDuelComponent->AppModule\n\n\n\n\n\nQuestionComponent\n\nQuestionComponent\n\nAppModule -->\n\nQuestionComponent->AppModule\n\n\n\n\n\nStartpageComponent\n\nStartpageComponent\n\nAppModule -->\n\nStartpageComponent->AppModule\n\n\n\n\n\nUserStartpageComponent\n\nUserStartpageComponent\n\nAppModule -->\n\nUserStartpageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        8 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  firebase: {\n    apiKey: \"AIzaSyB8xiusvQ_wnN1ZGTgR4-jF-PB4U3k0JqQ\",\n    authDomain: \"quiz-with-friends-5874c.firebaseapp.com\",\n    projectId: \"quiz-with-friends-5874c\",\n    storageBucket: \"quiz-with-friends-5874c.appspot.com\",\n    messagingSenderId: \"151579916440\",\n    appId: \"1:151579916440:web:d47ccdc89dd338c057b8ed\"\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyB8xiusvQ_wnN1ZGTgR4-jF-PB4U3k0JqQ\",\n    authDomain: \"quiz-with-friends-5874c.firebaseapp.com\",\n    projectId: \"quiz-with-friends-5874c\",\n    storageBucket: \"quiz-with-friends-5874c.appspot.com\",\n    messagingSenderId: \"151579916440\",\n    appId: \"1:151579916440:web:d47ccdc89dd338c057b8ed\"\n  }\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
